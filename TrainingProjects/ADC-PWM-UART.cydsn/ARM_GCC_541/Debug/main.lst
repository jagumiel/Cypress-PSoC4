ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccNv8gSf.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	windowFlag
  20              		.bss
  21              		.align	2
  22              		.type	windowFlag, %object
  23              		.size	windowFlag, 4
  24              	windowFlag:
  25 0000 00000000 		.space	4
  26              		.global	dataReady
  27              		.type	dataReady, %object
  28              		.size	dataReady, 1
  29              	dataReady:
  30 0004 00       		.space	1
  31              		.global	channelFlag
  32              		.type	channelFlag, %object
  33              		.size	channelFlag, 1
  34              	channelFlag:
  35 0005 00       		.space	1
  36              		.global	__aeabi_idiv
  37              		.section	.text.main,"ax",%progbits
  38              		.align	2
  39              		.global	main
  40              		.code	16
  41              		.thumb_func
  42              		.type	main, %function
  43              	main:
  44              	.LFB32:
  45              		.file 1 "main.c"
   1:main.c        **** /*******************************************************************************
   2:main.c        **** * File Name: main.c
   3:main.c        **** *
   4:main.c        **** * Version: 2.00
   5:main.c        **** *
   6:main.c        **** * Description:
   7:main.c        **** *  This example project shows how to sample four different channels using
   8:main.c        **** *  SAR MUX and ADC, and send channel output to HyperTerminal (PC) using UART.
   9:main.c        **** *
  10:main.c        **** ********************************************************************************
  11:main.c        **** * Copyright 2013-2018, Cypress Semiconductor Corporation. All rights reserved.
  12:main.c        **** * This software is owned by Cypress Semiconductor Corporation and is protected
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccNv8gSf.s 			page 2


  13:main.c        **** * by and subject to worldwide patent and copyright laws and treaties.
  14:main.c        **** * Therefore, you may use this software only as provided in the license agreement
  15:main.c        **** * accompanying the software package from which you obtained this software.
  16:main.c        **** * CYPRESS AND ITS SUPPLIERS MAKE NO WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
  17:main.c        **** * WITH REGARD TO THIS SOFTWARE, INCLUDING, BUT NOT LIMITED TO, NONINFRINGEMENT,
  18:main.c        **** * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
  19:main.c        **** *******************************************************************************/
  20:main.c        **** 
  21:main.c        **** #include <project.h>
  22:main.c        **** 
  23:main.c        **** /* Macro definitions */
  24:main.c        **** #define LOW                 (0u)
  25:main.c        **** #define HIGH                (1u)
  26:main.c        **** #define CHANNEL_1           (0u)
  27:main.c        **** #define NO_OF_CHANNELS      (1u)
  28:main.c        **** #define CLEAR_SCREEN        (0x0C)
  29:main.c        **** #define CONVERT_TO_ASCII    (0x30u)
  30:main.c        **** 
  31:main.c        **** /* Resistor Values and Gain */
  32:main.c        **** #define RG                  (2200u)
  33:main.c        **** #define R1                  (10000u)
  34:main.c        **** #define GAIN                (1 + 2 * (float)R1 / RG)
  35:main.c        **** 
  36:main.c        **** /* Send the channel number and voltage to UART */
  37:main.c        **** static void SendChannelVoltage(uint8 channel, int16 mVolts);
  38:main.c        **** 
  39:main.c        **** /* Interrupt prototypes */
  40:main.c        **** CY_ISR_PROTO(ADC_ISR_Handler);
  41:main.c        **** 
  42:main.c        **** /* Global variables */
  43:main.c        **** volatile uint32 windowFlag    = 0u;
  44:main.c        **** volatile uint8  dataReady     = 0u;
  45:main.c        **** volatile uint8  channelFlag   = 0u;
  46:main.c        **** 
  47:main.c        **** 
  48:main.c        **** /*******************************************************************************
  49:main.c        **** * Function Name: main
  50:main.c        **** ********************************************************************************
  51:main.c        **** *
  52:main.c        **** * Summary:
  53:main.c        **** *  Performs the following tasks:
  54:main.c        **** *  - Start the components.
  55:main.c        **** *  - Starts ADC conversion.
  56:main.c        **** *  - Buffer ADC results.
  57:main.c        **** *  - Sends the result to HyperTerminal (PC) using UART.
  58:main.c        **** *  - Turns ON an LED when ADC input is outside the voltage 
  59:main.c        **** *     window of 1250mV to 3750mV.
  60:main.c        **** *
  61:main.c        **** * Parameters:
  62:main.c        **** *  None.
  63:main.c        **** *
  64:main.c        **** * Return:
  65:main.c        **** *  None.
  66:main.c        **** *
  67:main.c        **** *******************************************************************************/
  68:main.c        **** int main()
  69:main.c        **** {
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccNv8gSf.s 			page 3


  46              		.loc 1 69 0
  47              		.cfi_startproc
  48              		@ args = 0, pretend = 0, frame = 16
  49              		@ frame_needed = 1, uses_anonymous_args = 0
  50 0000 90B5     		push	{r4, r7, lr}
  51              		.cfi_def_cfa_offset 12
  52              		.cfi_offset 4, -12
  53              		.cfi_offset 7, -8
  54              		.cfi_offset 14, -4
  55 0002 85B0     		sub	sp, sp, #20
  56              		.cfi_def_cfa_offset 32
  57 0004 00AF     		add	r7, sp, #0
  58              		.cfi_def_cfa_register 7
  70:main.c        ****     uint8 channel = CHANNEL_1;
  59              		.loc 1 70 0
  60 0006 0D23     		movs	r3, #13
  61 0008 FB18     		adds	r3, r7, r3
  62 000a 0022     		movs	r2, #0
  63 000c 1A70     		strb	r2, [r3]
  71:main.c        ****     int16 adcVal[4u];
  72:main.c        ****     int16 mVolts;
  73:main.c        ****     int16 previousValue = 0;
  64              		.loc 1 73 0
  65 000e 0E23     		movs	r3, #14
  66 0010 FB18     		adds	r3, r7, r3
  67 0012 0022     		movs	r2, #0
  68 0014 1A80     		strh	r2, [r3]
  74:main.c        ****     
  75:main.c        ****     /* Start the Components */
  76:main.c        ****     UART_Start();
  69              		.loc 1 76 0
  70 0016 FFF7FEFF 		bl	UART_Start
  77:main.c        ****     ADC_Start();
  71              		.loc 1 77 0
  72 001a FFF7FEFF 		bl	ADC_Start
  78:main.c        ****     PWM_Start();
  73              		.loc 1 78 0
  74 001e FFF7FEFF 		bl	PWM_Start
  79:main.c        ****     
  80:main.c        ****     /* Start ISRs */
  81:main.c        ****     ADC_IRQ_StartEx(ADC_ISR_Handler);
  75              		.loc 1 81 0
  76 0022 2D4B     		ldr	r3, .L6
  77 0024 1800     		movs	r0, r3
  78 0026 FFF7FEFF 		bl	ADC_IRQ_StartEx
  82:main.c        ****     
  83:main.c        ****     /* Enable global interrupts */
  84:main.c        ****     CyGlobalIntEnable;
  79              		.loc 1 84 0
  80              		.syntax divided
  81              	@ 84 "main.c" 1
  82 002a 62B6     		CPSIE   i
  83              	@ 0 "" 2
  85:main.c        **** 
  86:main.c        ****     /* Start ADC conversion */
  87:main.c        ****     ADC_StartConvert();
  84              		.loc 1 87 0
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccNv8gSf.s 			page 4


  85              		.thumb
  86              		.syntax unified
  87 002c FFF7FEFF 		bl	ADC_StartConvert
  88              	.L5:
  88:main.c        ****     
  89:main.c        ****     for(;;)
  90:main.c        ****     {
  91:main.c        ****         while(dataReady == 0u)
  89              		.loc 1 91 0
  90 0030 C046     		nop
  91              	.L2:
  92              		.loc 1 91 0 is_stmt 0 discriminator 1
  93 0032 2A4B     		ldr	r3, .L6+4
  94 0034 1B78     		ldrb	r3, [r3]
  95 0036 DBB2     		uxtb	r3, r3
  96 0038 002B     		cmp	r3, #0
  97 003a FAD0     		beq	.L2
  92:main.c        ****         {
  93:main.c        ****             ; /* Wait for ADC conversion */
  94:main.c        ****         }
  95:main.c        ****         /* Buffer the results */
  96:main.c        ****         adcVal[CHANNEL_1] = ADC_GetResult16(CHANNEL_1);
  98              		.loc 1 96 0 is_stmt 1
  99 003c 0020     		movs	r0, #0
 100 003e FFF7FEFF 		bl	ADC_GetResult16
 101 0042 0300     		movs	r3, r0
 102 0044 1A00     		movs	r2, r3
 103 0046 3B00     		movs	r3, r7
 104 0048 1A80     		strh	r2, [r3]
  97:main.c        **** 
  98:main.c        ****         /* Convert the ADC counts of active channel to mVolts */
  99:main.c        ****         mVolts = ADC_CountsTo_mVolts(channel, adcVal[channel]);
 105              		.loc 1 99 0
 106 004a 0D23     		movs	r3, #13
 107 004c FB18     		adds	r3, r7, r3
 108 004e 1878     		ldrb	r0, [r3]
 109 0050 0D23     		movs	r3, #13
 110 0052 FB18     		adds	r3, r7, r3
 111 0054 1A78     		ldrb	r2, [r3]
 112 0056 3B00     		movs	r3, r7
 113 0058 5200     		lsls	r2, r2, #1
 114 005a D35E     		ldrsh	r3, [r2, r3]
 115 005c 0A22     		movs	r2, #10
 116 005e BC18     		adds	r4, r7, r2
 117 0060 1900     		movs	r1, r3
 118 0062 FFF7FEFF 		bl	ADC_CountsTo_mVolts
 119 0066 0300     		movs	r3, r0
 120 0068 2380     		strh	r3, [r4]
 100:main.c        **** 
 101:main.c        ****         /* If ADC result or channel has been changed, send the data to UART */
 102:main.c        ****         if((previousValue != mVolts) || (channelFlag != 0u))
 121              		.loc 1 102 0
 122 006a 0E23     		movs	r3, #14
 123 006c FA18     		adds	r2, r7, r3
 124 006e 0A23     		movs	r3, #10
 125 0070 FB18     		adds	r3, r7, r3
 126 0072 0021     		movs	r1, #0
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccNv8gSf.s 			page 5


 127 0074 525E     		ldrsh	r2, [r2, r1]
 128 0076 0021     		movs	r1, #0
 129 0078 5B5E     		ldrsh	r3, [r3, r1]
 130 007a 9A42     		cmp	r2, r3
 131 007c 04D1     		bne	.L3
 132              		.loc 1 102 0 is_stmt 0 discriminator 1
 133 007e 184B     		ldr	r3, .L6+8
 134 0080 1B78     		ldrb	r3, [r3]
 135 0082 DBB2     		uxtb	r3, r3
 136 0084 002B     		cmp	r3, #0
 137 0086 13D0     		beq	.L4
 138              	.L3:
 103:main.c        ****         {    
 104:main.c        ****             SendChannelVoltage(channel, mVolts);
 139              		.loc 1 104 0 is_stmt 1
 140 0088 0A23     		movs	r3, #10
 141 008a FB18     		adds	r3, r7, r3
 142 008c 0022     		movs	r2, #0
 143 008e 9A5E     		ldrsh	r2, [r3, r2]
 144 0090 0D23     		movs	r3, #13
 145 0092 FB18     		adds	r3, r7, r3
 146 0094 1B78     		ldrb	r3, [r3]
 147 0096 1100     		movs	r1, r2
 148 0098 1800     		movs	r0, r3
 149 009a FFF7FEFF 		bl	SendChannelVoltage
 105:main.c        ****             previousValue = mVolts;
 150              		.loc 1 105 0
 151 009e 0E23     		movs	r3, #14
 152 00a0 FB18     		adds	r3, r7, r3
 153 00a2 0A22     		movs	r2, #10
 154 00a4 BA18     		adds	r2, r7, r2
 155 00a6 1288     		ldrh	r2, [r2]
 156 00a8 1A80     		strh	r2, [r3]
 106:main.c        ****             
 107:main.c        ****             /* Clear the flag */
 108:main.c        ****             channelFlag = 0u;
 157              		.loc 1 108 0
 158 00aa 0D4B     		ldr	r3, .L6+8
 159 00ac 0022     		movs	r2, #0
 160 00ae 1A70     		strb	r2, [r3]
 161              	.L4:
 109:main.c        ****         }
 110:main.c        ****         dataReady = 0u;
 162              		.loc 1 110 0
 163 00b0 0A4B     		ldr	r3, .L6+4
 164 00b2 0022     		movs	r2, #0
 165 00b4 1A70     		strb	r2, [r3]
 111:main.c        ****         
 112:main.c        ****         /*Prepare and set the PWM DutyCycle*/
 113:main.c        ****         PWM_WriteCompare((mVolts*255)/5000);
 166              		.loc 1 113 0
 167 00b6 0A23     		movs	r3, #10
 168 00b8 FB18     		adds	r3, r7, r3
 169 00ba 0022     		movs	r2, #0
 170 00bc 9A5E     		ldrsh	r2, [r3, r2]
 171 00be 1300     		movs	r3, r2
 172 00c0 1B02     		lsls	r3, r3, #8
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccNv8gSf.s 			page 6


 173 00c2 9B1A     		subs	r3, r3, r2
 174 00c4 0749     		ldr	r1, .L6+12
 175 00c6 1800     		movs	r0, r3
 176 00c8 FFF7FEFF 		bl	__aeabi_idiv
 177 00cc 0300     		movs	r3, r0
 178 00ce DBB2     		uxtb	r3, r3
 179 00d0 1800     		movs	r0, r3
 180 00d2 FFF7FEFF 		bl	PWM_WriteCompare
 114:main.c        ****     }
 181              		.loc 1 114 0
 182 00d6 ABE7     		b	.L5
 183              	.L7:
 184              		.align	2
 185              	.L6:
 186 00d8 00000000 		.word	ADC_ISR_Handler
 187 00dc 00000000 		.word	dataReady
 188 00e0 00000000 		.word	channelFlag
 189 00e4 88130000 		.word	5000
 190              		.cfi_endproc
 191              	.LFE32:
 192              		.size	main, .-main
 193              		.section	.rodata
 194              		.align	2
 195              	.LC3:
 196 0000 4368616E 		.ascii	"Channel \000"
 196      6E656C20 
 196      00
 197 0009 000000   		.align	2
 198              	.LC5:
 199 000c 203D2000 		.ascii	" = \000"
 200              		.align	2
 201              	.LC7:
 202 0010 2D00     		.ascii	"-\000"
 203              		.global	__aeabi_uidiv
 204              		.global	__aeabi_uidivmod
 205 0012 0000     		.align	2
 206              	.LC9:
 207 0014 206D5600 		.ascii	" mV\000"
 208              		.section	.text.SendChannelVoltage,"ax",%progbits
 209              		.align	2
 210              		.code	16
 211              		.thumb_func
 212              		.type	SendChannelVoltage, %function
 213              	SendChannelVoltage:
 214              	.LFB33:
 115:main.c        **** }
 116:main.c        **** 
 117:main.c        **** /*******************************************************************************
 118:main.c        **** * Function Name: SendChannelVoltage
 119:main.c        **** ********************************************************************************
 120:main.c        **** *
 121:main.c        **** * Summary:
 122:main.c        **** *  Performs the following tasks:
 123:main.c        **** *   - Converts the channel number to ASCII character
 124:main.c        **** *   - Clears terminal screen
 125:main.c        **** *   - Sends the channel number and voltage to UART
 126:main.c        **** *
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccNv8gSf.s 			page 7


 127:main.c        **** * Parameters:
 128:main.c        **** *  uint8 channel : Channel Number
 129:main.c        **** *  int16 mVolts  : ADC counts    
 130:main.c        **** *
 131:main.c        **** * Return:
 132:main.c        **** *  None.
 133:main.c        **** *
 134:main.c        **** ********************************************************************************/
 135:main.c        **** static void SendChannelVoltage(uint8 channel, int16 mVolts)
 136:main.c        **** {
 215              		.loc 1 136 0
 216              		.cfi_startproc
 217              		@ args = 0, pretend = 0, frame = 8
 218              		@ frame_needed = 1, uses_anonymous_args = 0
 219 0000 80B5     		push	{r7, lr}
 220              		.cfi_def_cfa_offset 8
 221              		.cfi_offset 7, -8
 222              		.cfi_offset 14, -4
 223 0002 82B0     		sub	sp, sp, #8
 224              		.cfi_def_cfa_offset 16
 225 0004 00AF     		add	r7, sp, #0
 226              		.cfi_def_cfa_register 7
 227 0006 0200     		movs	r2, r0
 228 0008 FB1D     		adds	r3, r7, #7
 229 000a 1A70     		strb	r2, [r3]
 230 000c 3B1D     		adds	r3, r7, #4
 231 000e 0A1C     		adds	r2, r1, #0
 232 0010 1A80     		strh	r2, [r3]
 137:main.c        ****     /* Clear screen */ 
 138:main.c        ****     UART_UartPutChar(CLEAR_SCREEN);
 233              		.loc 1 138 0
 234 0012 0C20     		movs	r0, #12
 235 0014 FFF7FEFF 		bl	UART_SpiUartWriteTxData
 139:main.c        ****     UART_UartPutString("Channel ");
 236              		.loc 1 139 0
 237 0018 3F4B     		ldr	r3, .L10
 238 001a 1800     		movs	r0, r3
 239 001c FFF7FEFF 		bl	UART_UartPutString
 140:main.c        ****     
 141:main.c        ****     /* Display the channel number starting from 1 */
 142:main.c        ****     channel++;
 240              		.loc 1 142 0
 241 0020 FB1D     		adds	r3, r7, #7
 242 0022 1A78     		ldrb	r2, [r3]
 243 0024 FB1D     		adds	r3, r7, #7
 244 0026 0132     		adds	r2, r2, #1
 245 0028 1A70     		strb	r2, [r3]
 143:main.c        ****     channel += CONVERT_TO_ASCII;
 246              		.loc 1 143 0
 247 002a FB1D     		adds	r3, r7, #7
 248 002c FA1D     		adds	r2, r7, #7
 249 002e 1278     		ldrb	r2, [r2]
 250 0030 3032     		adds	r2, r2, #48
 251 0032 1A70     		strb	r2, [r3]
 144:main.c        ****     UART_UartPutChar(channel);
 252              		.loc 1 144 0
 253 0034 FB1D     		adds	r3, r7, #7
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccNv8gSf.s 			page 8


 254 0036 1B78     		ldrb	r3, [r3]
 255 0038 1800     		movs	r0, r3
 256 003a FFF7FEFF 		bl	UART_SpiUartWriteTxData
 145:main.c        ****     UART_UartPutString(" = ");
 257              		.loc 1 145 0
 258 003e 374B     		ldr	r3, .L10+4
 259 0040 1800     		movs	r0, r3
 260 0042 FFF7FEFF 		bl	UART_UartPutString
 146:main.c        ****     
 147:main.c        ****     /* Find the sign of the result */
 148:main.c        ****     if(mVolts < 0)
 261              		.loc 1 148 0
 262 0046 3B1D     		adds	r3, r7, #4
 263 0048 0022     		movs	r2, #0
 264 004a 9B5E     		ldrsh	r3, [r3, r2]
 265 004c 002B     		cmp	r3, #0
 266 004e 09DA     		bge	.L9
 149:main.c        ****     {
 150:main.c        ****         UART_UartPutString("-");
 267              		.loc 1 150 0
 268 0050 334B     		ldr	r3, .L10+8
 269 0052 1800     		movs	r0, r3
 270 0054 FFF7FEFF 		bl	UART_UartPutString
 151:main.c        ****         mVolts = -mVolts;
 271              		.loc 1 151 0
 272 0058 3B1D     		adds	r3, r7, #4
 273 005a 1B88     		ldrh	r3, [r3]
 274 005c 5B42     		rsbs	r3, r3, #0
 275 005e 9AB2     		uxth	r2, r3
 276 0060 3B1D     		adds	r3, r7, #4
 277 0062 1A80     		strh	r2, [r3]
 278              	.L9:
 152:main.c        ****     }
 153:main.c        ****         
 154:main.c        ****     /* Send voltage to UART */
 155:main.c        ****     UART_UartPutChar((mVolts/1000u) + CONVERT_TO_ASCII);
 279              		.loc 1 155 0
 280 0064 3B1D     		adds	r3, r7, #4
 281 0066 0022     		movs	r2, #0
 282 0068 9A5E     		ldrsh	r2, [r3, r2]
 283 006a FA23     		movs	r3, #250
 284 006c 9900     		lsls	r1, r3, #2
 285 006e 1000     		movs	r0, r2
 286 0070 FFF7FEFF 		bl	__aeabi_uidiv
 287 0074 0300     		movs	r3, r0
 288 0076 3033     		adds	r3, r3, #48
 289 0078 1800     		movs	r0, r3
 290 007a FFF7FEFF 		bl	UART_SpiUartWriteTxData
 156:main.c        ****     mVolts %= 1000u;
 291              		.loc 1 156 0
 292 007e 3B1D     		adds	r3, r7, #4
 293 0080 0022     		movs	r2, #0
 294 0082 9A5E     		ldrsh	r2, [r3, r2]
 295 0084 FA23     		movs	r3, #250
 296 0086 9900     		lsls	r1, r3, #2
 297 0088 1000     		movs	r0, r2
 298 008a FFF7FEFF 		bl	__aeabi_uidivmod
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccNv8gSf.s 			page 9


 299 008e 0B00     		movs	r3, r1
 300 0090 1A00     		movs	r2, r3
 301 0092 3B1D     		adds	r3, r7, #4
 302 0094 1A80     		strh	r2, [r3]
 157:main.c        ****     UART_UartPutChar((mVolts/100u) + CONVERT_TO_ASCII);
 303              		.loc 1 157 0
 304 0096 3B1D     		adds	r3, r7, #4
 305 0098 0022     		movs	r2, #0
 306 009a 9B5E     		ldrsh	r3, [r3, r2]
 307 009c 6421     		movs	r1, #100
 308 009e 1800     		movs	r0, r3
 309 00a0 FFF7FEFF 		bl	__aeabi_uidiv
 310 00a4 0300     		movs	r3, r0
 311 00a6 3033     		adds	r3, r3, #48
 312 00a8 1800     		movs	r0, r3
 313 00aa FFF7FEFF 		bl	UART_SpiUartWriteTxData
 158:main.c        ****     mVolts %= 100u;
 314              		.loc 1 158 0
 315 00ae 3B1D     		adds	r3, r7, #4
 316 00b0 0022     		movs	r2, #0
 317 00b2 9B5E     		ldrsh	r3, [r3, r2]
 318 00b4 6421     		movs	r1, #100
 319 00b6 1800     		movs	r0, r3
 320 00b8 FFF7FEFF 		bl	__aeabi_uidivmod
 321 00bc 0B00     		movs	r3, r1
 322 00be 1A00     		movs	r2, r3
 323 00c0 3B1D     		adds	r3, r7, #4
 324 00c2 1A80     		strh	r2, [r3]
 159:main.c        ****     UART_UartPutChar((mVolts/10u) + CONVERT_TO_ASCII);
 325              		.loc 1 159 0
 326 00c4 3B1D     		adds	r3, r7, #4
 327 00c6 0022     		movs	r2, #0
 328 00c8 9B5E     		ldrsh	r3, [r3, r2]
 329 00ca 0A21     		movs	r1, #10
 330 00cc 1800     		movs	r0, r3
 331 00ce FFF7FEFF 		bl	__aeabi_uidiv
 332 00d2 0300     		movs	r3, r0
 333 00d4 3033     		adds	r3, r3, #48
 334 00d6 1800     		movs	r0, r3
 335 00d8 FFF7FEFF 		bl	UART_SpiUartWriteTxData
 160:main.c        ****     mVolts %= 10u;
 336              		.loc 1 160 0
 337 00dc 3B1D     		adds	r3, r7, #4
 338 00de 0022     		movs	r2, #0
 339 00e0 9B5E     		ldrsh	r3, [r3, r2]
 340 00e2 0A21     		movs	r1, #10
 341 00e4 1800     		movs	r0, r3
 342 00e6 FFF7FEFF 		bl	__aeabi_uidivmod
 343 00ea 0B00     		movs	r3, r1
 344 00ec 1A00     		movs	r2, r3
 345 00ee 3B1D     		adds	r3, r7, #4
 346 00f0 1A80     		strh	r2, [r3]
 161:main.c        ****     UART_UartPutChar(mVolts + CONVERT_TO_ASCII);
 347              		.loc 1 161 0
 348 00f2 3B1D     		adds	r3, r7, #4
 349 00f4 0022     		movs	r2, #0
 350 00f6 9B5E     		ldrsh	r3, [r3, r2]
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccNv8gSf.s 			page 10


 351 00f8 3033     		adds	r3, r3, #48
 352 00fa 1800     		movs	r0, r3
 353 00fc FFF7FEFF 		bl	UART_SpiUartWriteTxData
 162:main.c        ****     UART_UartPutString(" mV");
 354              		.loc 1 162 0
 355 0100 084B     		ldr	r3, .L10+12
 356 0102 1800     		movs	r0, r3
 357 0104 FFF7FEFF 		bl	UART_UartPutString
 163:main.c        ****     UART_UartPutCRLF(0u);
 358              		.loc 1 163 0
 359 0108 0020     		movs	r0, #0
 360 010a FFF7FEFF 		bl	UART_UartPutCRLF
 164:main.c        **** }
 361              		.loc 1 164 0
 362 010e C046     		nop
 363 0110 BD46     		mov	sp, r7
 364 0112 02B0     		add	sp, sp, #8
 365              		@ sp needed
 366 0114 80BD     		pop	{r7, pc}
 367              	.L11:
 368 0116 C046     		.align	2
 369              	.L10:
 370 0118 00000000 		.word	.LC3
 371 011c 0C000000 		.word	.LC5
 372 0120 10000000 		.word	.LC7
 373 0124 14000000 		.word	.LC9
 374              		.cfi_endproc
 375              	.LFE33:
 376              		.size	SendChannelVoltage, .-SendChannelVoltage
 377              		.section	.text.ADC_ISR_Handler,"ax",%progbits
 378              		.align	2
 379              		.global	ADC_ISR_Handler
 380              		.code	16
 381              		.thumb_func
 382              		.type	ADC_ISR_Handler, %function
 383              	ADC_ISR_Handler:
 384              	.LFB34:
 165:main.c        **** 
 166:main.c        **** 
 167:main.c        **** /******************************************************************************
 168:main.c        **** * Function Name: ADC_ISR_Handler
 169:main.c        **** *******************************************************************************
 170:main.c        **** *
 171:main.c        **** * Summary:
 172:main.c        **** *  Interrupt Service Routine. Check the ADC status and sets window and data
 173:main.c        **** *  ready flags.
 174:main.c        **** *
 175:main.c        **** ******************************************************************************/
 176:main.c        **** CY_ISR(ADC_ISR_Handler)
 177:main.c        **** {
 385              		.loc 1 177 0
 386              		.cfi_startproc
 387              		@ args = 0, pretend = 0, frame = 8
 388              		@ frame_needed = 1, uses_anonymous_args = 0
 389 0000 80B5     		push	{r7, lr}
 390              		.cfi_def_cfa_offset 8
 391              		.cfi_offset 7, -8
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccNv8gSf.s 			page 11


 392              		.cfi_offset 14, -4
 393 0002 82B0     		sub	sp, sp, #8
 394              		.cfi_def_cfa_offset 16
 395 0004 00AF     		add	r7, sp, #0
 396              		.cfi_def_cfa_register 7
 178:main.c        ****     uint32 intr_status;
 179:main.c        **** 
 180:main.c        ****     /* Read interrupt status registers */
 181:main.c        ****     intr_status = ADC_SAR_INTR_MASKED_REG;
 397              		.loc 1 181 0
 398 0006 0C4B     		ldr	r3, .L14
 399 0008 1B68     		ldr	r3, [r3]
 400 000a 7B60     		str	r3, [r7, #4]
 182:main.c        ****     /* Check for End of Scan interrupt */
 183:main.c        ****     if((intr_status & ADC_EOS_MASK) != 0u)
 401              		.loc 1 183 0
 402 000c 7B68     		ldr	r3, [r7, #4]
 403 000e 0122     		movs	r2, #1
 404 0010 1340     		ands	r3, r2
 405 0012 0AD0     		beq	.L13
 184:main.c        ****     {
 185:main.c        ****         /* Read range interrupt status and raise the flag */
 186:main.c        ****         windowFlag = ADC_SAR_RANGE_INTR_MASKED_REG;
 406              		.loc 1 186 0
 407 0014 094B     		ldr	r3, .L14+4
 408 0016 1A68     		ldr	r2, [r3]
 409 0018 094B     		ldr	r3, .L14+8
 410 001a 1A60     		str	r2, [r3]
 187:main.c        ****         /* Clear range detect status */
 188:main.c        ****         ADC_SAR_RANGE_INTR_REG = windowFlag;
 411              		.loc 1 188 0
 412 001c 094A     		ldr	r2, .L14+12
 413 001e 084B     		ldr	r3, .L14+8
 414 0020 1B68     		ldr	r3, [r3]
 415 0022 1360     		str	r3, [r2]
 189:main.c        ****         dataReady = 1u;
 416              		.loc 1 189 0
 417 0024 084B     		ldr	r3, .L14+16
 418 0026 0122     		movs	r2, #1
 419 0028 1A70     		strb	r2, [r3]
 420              	.L13:
 190:main.c        ****     }
 191:main.c        ****     /* Clear handled interrupt */
 192:main.c        ****     ADC_SAR_INTR_REG = intr_status;
 421              		.loc 1 192 0
 422 002a 084B     		ldr	r3, .L14+20
 423 002c 7A68     		ldr	r2, [r7, #4]
 424 002e 1A60     		str	r2, [r3]
 193:main.c        **** }
 425              		.loc 1 193 0
 426 0030 C046     		nop
 427 0032 BD46     		mov	sp, r7
 428 0034 02B0     		add	sp, sp, #8
 429              		@ sp needed
 430 0036 80BD     		pop	{r7, pc}
 431              	.L15:
 432              		.align	2
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccNv8gSf.s 			page 12


 433              	.L14:
 434 0038 1C021A40 		.word	1075446300
 435 003c 3C021A40 		.word	1075446332
 436 0040 00000000 		.word	windowFlag
 437 0044 30021A40 		.word	1075446320
 438 0048 00000000 		.word	dataReady
 439 004c 10021A40 		.word	1075446288
 440              		.cfi_endproc
 441              	.LFE34:
 442              		.size	ADC_ISR_Handler, .-ADC_ISR_Handler
 443              		.text
 444              	.Letext0:
 445              		.file 2 "Generated_Source\\PSoC4/cytypes.h"
 446              		.section	.debug_info,"",%progbits
 447              	.Ldebug_info0:
 448 0000 B0010000 		.4byte	0x1b0
 449 0004 0400     		.2byte	0x4
 450 0006 00000000 		.4byte	.Ldebug_abbrev0
 451 000a 04       		.byte	0x4
 452 000b 01       		.uleb128 0x1
 453 000c 8D000000 		.4byte	.LASF28
 454 0010 0C       		.byte	0xc
 455 0011 7E010000 		.4byte	.LASF29
 456 0015 8A010000 		.4byte	.LASF30
 457 0019 00000000 		.4byte	.Ldebug_ranges0+0
 458 001d 00000000 		.4byte	0
 459 0021 00000000 		.4byte	.Ldebug_line0
 460 0025 02       		.uleb128 0x2
 461 0026 01       		.byte	0x1
 462 0027 06       		.byte	0x6
 463 0028 25020000 		.4byte	.LASF0
 464 002c 02       		.uleb128 0x2
 465 002d 01       		.byte	0x1
 466 002e 08       		.byte	0x8
 467 002f 55000000 		.4byte	.LASF1
 468 0033 02       		.uleb128 0x2
 469 0034 02       		.byte	0x2
 470 0035 05       		.byte	0x5
 471 0036 06020000 		.4byte	.LASF2
 472 003a 02       		.uleb128 0x2
 473 003b 02       		.byte	0x2
 474 003c 07       		.byte	0x7
 475 003d 20000000 		.4byte	.LASF3
 476 0041 02       		.uleb128 0x2
 477 0042 04       		.byte	0x4
 478 0043 05       		.byte	0x5
 479 0044 10020000 		.4byte	.LASF4
 480 0048 02       		.uleb128 0x2
 481 0049 04       		.byte	0x4
 482 004a 07       		.byte	0x7
 483 004b 69000000 		.4byte	.LASF5
 484 004f 02       		.uleb128 0x2
 485 0050 08       		.byte	0x8
 486 0051 05       		.byte	0x5
 487 0052 70010000 		.4byte	.LASF6
 488 0056 02       		.uleb128 0x2
 489 0057 08       		.byte	0x8
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccNv8gSf.s 			page 13


 490 0058 07       		.byte	0x7
 491 0059 49010000 		.4byte	.LASF7
 492 005d 03       		.uleb128 0x3
 493 005e 04       		.byte	0x4
 494 005f 05       		.byte	0x5
 495 0060 696E7400 		.ascii	"int\000"
 496 0064 02       		.uleb128 0x2
 497 0065 04       		.byte	0x4
 498 0066 07       		.byte	0x7
 499 0067 3C010000 		.4byte	.LASF8
 500 006b 04       		.uleb128 0x4
 501 006c 87000000 		.4byte	.LASF9
 502 0070 02       		.byte	0x2
 503 0071 E401     		.2byte	0x1e4
 504 0073 2C000000 		.4byte	0x2c
 505 0077 04       		.uleb128 0x4
 506 0078 35010000 		.4byte	.LASF10
 507 007c 02       		.byte	0x2
 508 007d E601     		.2byte	0x1e6
 509 007f 48000000 		.4byte	0x48
 510 0083 04       		.uleb128 0x4
 511 0084 63000000 		.4byte	.LASF11
 512 0088 02       		.byte	0x2
 513 0089 E801     		.2byte	0x1e8
 514 008b 33000000 		.4byte	0x33
 515 008f 02       		.uleb128 0x2
 516 0090 04       		.byte	0x4
 517 0091 04       		.byte	0x4
 518 0092 43000000 		.4byte	.LASF12
 519 0096 02       		.uleb128 0x2
 520 0097 08       		.byte	0x8
 521 0098 04       		.byte	0x4
 522 0099 29010000 		.4byte	.LASF13
 523 009d 02       		.uleb128 0x2
 524 009e 01       		.byte	0x1
 525 009f 08       		.byte	0x8
 526 00a0 85010000 		.4byte	.LASF14
 527 00a4 05       		.uleb128 0x5
 528 00a5 6B000000 		.4byte	0x6b
 529 00a9 04       		.uleb128 0x4
 530 00aa 00000000 		.4byte	.LASF15
 531 00ae 02       		.byte	0x2
 532 00af 9002     		.2byte	0x290
 533 00b1 B5000000 		.4byte	0xb5
 534 00b5 05       		.uleb128 0x5
 535 00b6 77000000 		.4byte	0x77
 536 00ba 02       		.uleb128 0x2
 537 00bb 08       		.byte	0x8
 538 00bc 04       		.byte	0x4
 539 00bd 19020000 		.4byte	.LASF16
 540 00c1 02       		.uleb128 0x2
 541 00c2 04       		.byte	0x4
 542 00c3 07       		.byte	0x7
 543 00c4 67010000 		.4byte	.LASF17
 544 00c8 06       		.uleb128 0x6
 545 00c9 30010000 		.4byte	.LASF22
 546 00cd 01       		.byte	0x1
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccNv8gSf.s 			page 14


 547 00ce 44       		.byte	0x44
 548 00cf 5D000000 		.4byte	0x5d
 549 00d3 00000000 		.4byte	.LFB32
 550 00d7 E8000000 		.4byte	.LFE32-.LFB32
 551 00db 01       		.uleb128 0x1
 552 00dc 9C       		.byte	0x9c
 553 00dd 1A010000 		.4byte	0x11a
 554 00e1 07       		.uleb128 0x7
 555 00e2 06000000 		.4byte	.LASF18
 556 00e6 01       		.byte	0x1
 557 00e7 46       		.byte	0x46
 558 00e8 6B000000 		.4byte	0x6b
 559 00ec 02       		.uleb128 0x2
 560 00ed 91       		.byte	0x91
 561 00ee 6D       		.sleb128 -19
 562 00ef 07       		.uleb128 0x7
 563 00f0 19000000 		.4byte	.LASF19
 564 00f4 01       		.byte	0x1
 565 00f5 47       		.byte	0x47
 566 00f6 1A010000 		.4byte	0x11a
 567 00fa 02       		.uleb128 0x2
 568 00fb 91       		.byte	0x91
 569 00fc 60       		.sleb128 -32
 570 00fd 07       		.uleb128 0x7
 571 00fe 60010000 		.4byte	.LASF20
 572 0102 01       		.byte	0x1
 573 0103 48       		.byte	0x48
 574 0104 83000000 		.4byte	0x83
 575 0108 02       		.uleb128 0x2
 576 0109 91       		.byte	0x91
 577 010a 6A       		.sleb128 -22
 578 010b 07       		.uleb128 0x7
 579 010c 1B010000 		.4byte	.LASF21
 580 0110 01       		.byte	0x1
 581 0111 49       		.byte	0x49
 582 0112 83000000 		.4byte	0x83
 583 0116 02       		.uleb128 0x2
 584 0117 91       		.byte	0x91
 585 0118 6E       		.sleb128 -18
 586 0119 00       		.byte	0
 587 011a 08       		.uleb128 0x8
 588 011b 83000000 		.4byte	0x83
 589 011f 2A010000 		.4byte	0x12a
 590 0123 09       		.uleb128 0x9
 591 0124 C1000000 		.4byte	0xc1
 592 0128 03       		.byte	0x3
 593 0129 00       		.byte	0
 594 012a 0A       		.uleb128 0xa
 595 012b E9010000 		.4byte	.LASF31
 596 012f 01       		.byte	0x1
 597 0130 87       		.byte	0x87
 598 0131 00000000 		.4byte	.LFB33
 599 0135 28010000 		.4byte	.LFE33-.LFB33
 600 0139 01       		.uleb128 0x1
 601 013a 9C       		.byte	0x9c
 602 013b 5C010000 		.4byte	0x15c
 603 013f 0B       		.uleb128 0xb
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccNv8gSf.s 			page 15


 604 0140 06000000 		.4byte	.LASF18
 605 0144 01       		.byte	0x1
 606 0145 87       		.byte	0x87
 607 0146 6B000000 		.4byte	0x6b
 608 014a 02       		.uleb128 0x2
 609 014b 91       		.byte	0x91
 610 014c 77       		.sleb128 -9
 611 014d 0B       		.uleb128 0xb
 612 014e 60010000 		.4byte	.LASF20
 613 0152 01       		.byte	0x1
 614 0153 87       		.byte	0x87
 615 0154 83000000 		.4byte	0x83
 616 0158 02       		.uleb128 0x2
 617 0159 91       		.byte	0x91
 618 015a 74       		.sleb128 -12
 619 015b 00       		.byte	0
 620 015c 0C       		.uleb128 0xc
 621 015d 33000000 		.4byte	.LASF23
 622 0161 01       		.byte	0x1
 623 0162 B0       		.byte	0xb0
 624 0163 00000000 		.4byte	.LFB34
 625 0167 50000000 		.4byte	.LFE34-.LFB34
 626 016b 01       		.uleb128 0x1
 627 016c 9C       		.byte	0x9c
 628 016d 80010000 		.4byte	0x180
 629 0171 07       		.uleb128 0x7
 630 0172 7B000000 		.4byte	.LASF24
 631 0176 01       		.byte	0x1
 632 0177 B2       		.byte	0xb2
 633 0178 77000000 		.4byte	0x77
 634 017c 02       		.uleb128 0x2
 635 017d 91       		.byte	0x91
 636 017e 74       		.sleb128 -12
 637 017f 00       		.byte	0
 638 0180 0D       		.uleb128 0xd
 639 0181 0E000000 		.4byte	.LASF25
 640 0185 01       		.byte	0x1
 641 0186 2B       		.byte	0x2b
 642 0187 B5000000 		.4byte	0xb5
 643 018b 05       		.uleb128 0x5
 644 018c 03       		.byte	0x3
 645 018d 00000000 		.4byte	windowFlag
 646 0191 0D       		.uleb128 0xd
 647 0192 FC010000 		.4byte	.LASF26
 648 0196 01       		.byte	0x1
 649 0197 2C       		.byte	0x2c
 650 0198 A4000000 		.4byte	0xa4
 651 019c 05       		.uleb128 0x5
 652 019d 03       		.byte	0x3
 653 019e 00000000 		.4byte	dataReady
 654 01a2 0D       		.uleb128 0xd
 655 01a3 49000000 		.4byte	.LASF27
 656 01a7 01       		.byte	0x1
 657 01a8 2D       		.byte	0x2d
 658 01a9 A4000000 		.4byte	0xa4
 659 01ad 05       		.uleb128 0x5
 660 01ae 03       		.byte	0x3
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccNv8gSf.s 			page 16


 661 01af 00000000 		.4byte	channelFlag
 662 01b3 00       		.byte	0
 663              		.section	.debug_abbrev,"",%progbits
 664              	.Ldebug_abbrev0:
 665 0000 01       		.uleb128 0x1
 666 0001 11       		.uleb128 0x11
 667 0002 01       		.byte	0x1
 668 0003 25       		.uleb128 0x25
 669 0004 0E       		.uleb128 0xe
 670 0005 13       		.uleb128 0x13
 671 0006 0B       		.uleb128 0xb
 672 0007 03       		.uleb128 0x3
 673 0008 0E       		.uleb128 0xe
 674 0009 1B       		.uleb128 0x1b
 675 000a 0E       		.uleb128 0xe
 676 000b 55       		.uleb128 0x55
 677 000c 17       		.uleb128 0x17
 678 000d 11       		.uleb128 0x11
 679 000e 01       		.uleb128 0x1
 680 000f 10       		.uleb128 0x10
 681 0010 17       		.uleb128 0x17
 682 0011 00       		.byte	0
 683 0012 00       		.byte	0
 684 0013 02       		.uleb128 0x2
 685 0014 24       		.uleb128 0x24
 686 0015 00       		.byte	0
 687 0016 0B       		.uleb128 0xb
 688 0017 0B       		.uleb128 0xb
 689 0018 3E       		.uleb128 0x3e
 690 0019 0B       		.uleb128 0xb
 691 001a 03       		.uleb128 0x3
 692 001b 0E       		.uleb128 0xe
 693 001c 00       		.byte	0
 694 001d 00       		.byte	0
 695 001e 03       		.uleb128 0x3
 696 001f 24       		.uleb128 0x24
 697 0020 00       		.byte	0
 698 0021 0B       		.uleb128 0xb
 699 0022 0B       		.uleb128 0xb
 700 0023 3E       		.uleb128 0x3e
 701 0024 0B       		.uleb128 0xb
 702 0025 03       		.uleb128 0x3
 703 0026 08       		.uleb128 0x8
 704 0027 00       		.byte	0
 705 0028 00       		.byte	0
 706 0029 04       		.uleb128 0x4
 707 002a 16       		.uleb128 0x16
 708 002b 00       		.byte	0
 709 002c 03       		.uleb128 0x3
 710 002d 0E       		.uleb128 0xe
 711 002e 3A       		.uleb128 0x3a
 712 002f 0B       		.uleb128 0xb
 713 0030 3B       		.uleb128 0x3b
 714 0031 05       		.uleb128 0x5
 715 0032 49       		.uleb128 0x49
 716 0033 13       		.uleb128 0x13
 717 0034 00       		.byte	0
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccNv8gSf.s 			page 17


 718 0035 00       		.byte	0
 719 0036 05       		.uleb128 0x5
 720 0037 35       		.uleb128 0x35
 721 0038 00       		.byte	0
 722 0039 49       		.uleb128 0x49
 723 003a 13       		.uleb128 0x13
 724 003b 00       		.byte	0
 725 003c 00       		.byte	0
 726 003d 06       		.uleb128 0x6
 727 003e 2E       		.uleb128 0x2e
 728 003f 01       		.byte	0x1
 729 0040 3F       		.uleb128 0x3f
 730 0041 19       		.uleb128 0x19
 731 0042 03       		.uleb128 0x3
 732 0043 0E       		.uleb128 0xe
 733 0044 3A       		.uleb128 0x3a
 734 0045 0B       		.uleb128 0xb
 735 0046 3B       		.uleb128 0x3b
 736 0047 0B       		.uleb128 0xb
 737 0048 49       		.uleb128 0x49
 738 0049 13       		.uleb128 0x13
 739 004a 11       		.uleb128 0x11
 740 004b 01       		.uleb128 0x1
 741 004c 12       		.uleb128 0x12
 742 004d 06       		.uleb128 0x6
 743 004e 40       		.uleb128 0x40
 744 004f 18       		.uleb128 0x18
 745 0050 9642     		.uleb128 0x2116
 746 0052 19       		.uleb128 0x19
 747 0053 01       		.uleb128 0x1
 748 0054 13       		.uleb128 0x13
 749 0055 00       		.byte	0
 750 0056 00       		.byte	0
 751 0057 07       		.uleb128 0x7
 752 0058 34       		.uleb128 0x34
 753 0059 00       		.byte	0
 754 005a 03       		.uleb128 0x3
 755 005b 0E       		.uleb128 0xe
 756 005c 3A       		.uleb128 0x3a
 757 005d 0B       		.uleb128 0xb
 758 005e 3B       		.uleb128 0x3b
 759 005f 0B       		.uleb128 0xb
 760 0060 49       		.uleb128 0x49
 761 0061 13       		.uleb128 0x13
 762 0062 02       		.uleb128 0x2
 763 0063 18       		.uleb128 0x18
 764 0064 00       		.byte	0
 765 0065 00       		.byte	0
 766 0066 08       		.uleb128 0x8
 767 0067 01       		.uleb128 0x1
 768 0068 01       		.byte	0x1
 769 0069 49       		.uleb128 0x49
 770 006a 13       		.uleb128 0x13
 771 006b 01       		.uleb128 0x1
 772 006c 13       		.uleb128 0x13
 773 006d 00       		.byte	0
 774 006e 00       		.byte	0
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccNv8gSf.s 			page 18


 775 006f 09       		.uleb128 0x9
 776 0070 21       		.uleb128 0x21
 777 0071 00       		.byte	0
 778 0072 49       		.uleb128 0x49
 779 0073 13       		.uleb128 0x13
 780 0074 2F       		.uleb128 0x2f
 781 0075 0B       		.uleb128 0xb
 782 0076 00       		.byte	0
 783 0077 00       		.byte	0
 784 0078 0A       		.uleb128 0xa
 785 0079 2E       		.uleb128 0x2e
 786 007a 01       		.byte	0x1
 787 007b 03       		.uleb128 0x3
 788 007c 0E       		.uleb128 0xe
 789 007d 3A       		.uleb128 0x3a
 790 007e 0B       		.uleb128 0xb
 791 007f 3B       		.uleb128 0x3b
 792 0080 0B       		.uleb128 0xb
 793 0081 27       		.uleb128 0x27
 794 0082 19       		.uleb128 0x19
 795 0083 11       		.uleb128 0x11
 796 0084 01       		.uleb128 0x1
 797 0085 12       		.uleb128 0x12
 798 0086 06       		.uleb128 0x6
 799 0087 40       		.uleb128 0x40
 800 0088 18       		.uleb128 0x18
 801 0089 9642     		.uleb128 0x2116
 802 008b 19       		.uleb128 0x19
 803 008c 01       		.uleb128 0x1
 804 008d 13       		.uleb128 0x13
 805 008e 00       		.byte	0
 806 008f 00       		.byte	0
 807 0090 0B       		.uleb128 0xb
 808 0091 05       		.uleb128 0x5
 809 0092 00       		.byte	0
 810 0093 03       		.uleb128 0x3
 811 0094 0E       		.uleb128 0xe
 812 0095 3A       		.uleb128 0x3a
 813 0096 0B       		.uleb128 0xb
 814 0097 3B       		.uleb128 0x3b
 815 0098 0B       		.uleb128 0xb
 816 0099 49       		.uleb128 0x49
 817 009a 13       		.uleb128 0x13
 818 009b 02       		.uleb128 0x2
 819 009c 18       		.uleb128 0x18
 820 009d 00       		.byte	0
 821 009e 00       		.byte	0
 822 009f 0C       		.uleb128 0xc
 823 00a0 2E       		.uleb128 0x2e
 824 00a1 01       		.byte	0x1
 825 00a2 3F       		.uleb128 0x3f
 826 00a3 19       		.uleb128 0x19
 827 00a4 03       		.uleb128 0x3
 828 00a5 0E       		.uleb128 0xe
 829 00a6 3A       		.uleb128 0x3a
 830 00a7 0B       		.uleb128 0xb
 831 00a8 3B       		.uleb128 0x3b
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccNv8gSf.s 			page 19


 832 00a9 0B       		.uleb128 0xb
 833 00aa 27       		.uleb128 0x27
 834 00ab 19       		.uleb128 0x19
 835 00ac 11       		.uleb128 0x11
 836 00ad 01       		.uleb128 0x1
 837 00ae 12       		.uleb128 0x12
 838 00af 06       		.uleb128 0x6
 839 00b0 40       		.uleb128 0x40
 840 00b1 18       		.uleb128 0x18
 841 00b2 9742     		.uleb128 0x2117
 842 00b4 19       		.uleb128 0x19
 843 00b5 01       		.uleb128 0x1
 844 00b6 13       		.uleb128 0x13
 845 00b7 00       		.byte	0
 846 00b8 00       		.byte	0
 847 00b9 0D       		.uleb128 0xd
 848 00ba 34       		.uleb128 0x34
 849 00bb 00       		.byte	0
 850 00bc 03       		.uleb128 0x3
 851 00bd 0E       		.uleb128 0xe
 852 00be 3A       		.uleb128 0x3a
 853 00bf 0B       		.uleb128 0xb
 854 00c0 3B       		.uleb128 0x3b
 855 00c1 0B       		.uleb128 0xb
 856 00c2 49       		.uleb128 0x49
 857 00c3 13       		.uleb128 0x13
 858 00c4 3F       		.uleb128 0x3f
 859 00c5 19       		.uleb128 0x19
 860 00c6 02       		.uleb128 0x2
 861 00c7 18       		.uleb128 0x18
 862 00c8 00       		.byte	0
 863 00c9 00       		.byte	0
 864 00ca 00       		.byte	0
 865              		.section	.debug_aranges,"",%progbits
 866 0000 2C000000 		.4byte	0x2c
 867 0004 0200     		.2byte	0x2
 868 0006 00000000 		.4byte	.Ldebug_info0
 869 000a 04       		.byte	0x4
 870 000b 00       		.byte	0
 871 000c 0000     		.2byte	0
 872 000e 0000     		.2byte	0
 873 0010 00000000 		.4byte	.LFB32
 874 0014 E8000000 		.4byte	.LFE32-.LFB32
 875 0018 00000000 		.4byte	.LFB33
 876 001c 28010000 		.4byte	.LFE33-.LFB33
 877 0020 00000000 		.4byte	.LFB34
 878 0024 50000000 		.4byte	.LFE34-.LFB34
 879 0028 00000000 		.4byte	0
 880 002c 00000000 		.4byte	0
 881              		.section	.debug_ranges,"",%progbits
 882              	.Ldebug_ranges0:
 883 0000 00000000 		.4byte	.LFB32
 884 0004 E8000000 		.4byte	.LFE32
 885 0008 00000000 		.4byte	.LFB33
 886 000c 28010000 		.4byte	.LFE33
 887 0010 00000000 		.4byte	.LFB34
 888 0014 50000000 		.4byte	.LFE34
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccNv8gSf.s 			page 20


 889 0018 00000000 		.4byte	0
 890 001c 00000000 		.4byte	0
 891              		.section	.debug_line,"",%progbits
 892              	.Ldebug_line0:
 893 0000 B1000000 		.section	.debug_str,"MS",%progbits,1
 893      02004100 
 893      00000201 
 893      FB0E0D00 
 893      01010101 
 894              	.LASF15:
 895 0000 72656733 		.ascii	"reg32\000"
 895      3200
 896              	.LASF18:
 897 0006 6368616E 		.ascii	"channel\000"
 897      6E656C00 
 898              	.LASF25:
 899 000e 77696E64 		.ascii	"windowFlag\000"
 899      6F77466C 
 899      616700
 900              	.LASF19:
 901 0019 61646356 		.ascii	"adcVal\000"
 901      616C00
 902              	.LASF3:
 903 0020 73686F72 		.ascii	"short unsigned int\000"
 903      7420756E 
 903      7369676E 
 903      65642069 
 903      6E7400
 904              	.LASF23:
 905 0033 4144435F 		.ascii	"ADC_ISR_Handler\000"
 905      4953525F 
 905      48616E64 
 905      6C657200 
 906              	.LASF12:
 907 0043 666C6F61 		.ascii	"float\000"
 907      7400
 908              	.LASF27:
 909 0049 6368616E 		.ascii	"channelFlag\000"
 909      6E656C46 
 909      6C616700 
 910              	.LASF1:
 911 0055 756E7369 		.ascii	"unsigned char\000"
 911      676E6564 
 911      20636861 
 911      7200
 912              	.LASF11:
 913 0063 696E7431 		.ascii	"int16\000"
 913      3600
 914              	.LASF5:
 915 0069 6C6F6E67 		.ascii	"long unsigned int\000"
 915      20756E73 
 915      69676E65 
 915      6420696E 
 915      7400
 916              	.LASF24:
 917 007b 696E7472 		.ascii	"intr_status\000"
 917      5F737461 
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccNv8gSf.s 			page 21


 917      74757300 
 918              	.LASF9:
 919 0087 75696E74 		.ascii	"uint8\000"
 919      3800
 920              	.LASF28:
 921 008d 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 921      43313120 
 921      352E342E 
 921      31203230 
 921      31363036 
 922 00c0 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 922      20726576 
 922      6973696F 
 922      6E203233 
 922      37373135 
 923 00f3 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 923      66756E63 
 923      74696F6E 
 923      2D736563 
 923      74696F6E 
 924              	.LASF21:
 925 011b 70726576 		.ascii	"previousValue\000"
 925      696F7573 
 925      56616C75 
 925      6500
 926              	.LASF13:
 927 0129 646F7562 		.ascii	"double\000"
 927      6C6500
 928              	.LASF22:
 929 0130 6D61696E 		.ascii	"main\000"
 929      00
 930              	.LASF10:
 931 0135 75696E74 		.ascii	"uint32\000"
 931      333200
 932              	.LASF8:
 933 013c 756E7369 		.ascii	"unsigned int\000"
 933      676E6564 
 933      20696E74 
 933      00
 934              	.LASF7:
 935 0149 6C6F6E67 		.ascii	"long long unsigned int\000"
 935      206C6F6E 
 935      6720756E 
 935      7369676E 
 935      65642069 
 936              	.LASF20:
 937 0160 6D566F6C 		.ascii	"mVolts\000"
 937      747300
 938              	.LASF17:
 939 0167 73697A65 		.ascii	"sizetype\000"
 939      74797065 
 939      00
 940              	.LASF6:
 941 0170 6C6F6E67 		.ascii	"long long int\000"
 941      206C6F6E 
 941      6720696E 
 941      7400
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccNv8gSf.s 			page 22


 942              	.LASF29:
 943 017e 6D61696E 		.ascii	"main.c\000"
 943      2E6300
 944              	.LASF14:
 945 0185 63686172 		.ascii	"char\000"
 945      00
 946              	.LASF30:
 947 018a 443A5C55 		.ascii	"D:\\Users\\jagumiel\\Documents\\PSoC Creator\\PSoC-"
 947      73657273 
 947      5C6A6167 
 947      756D6965 
 947      6C5C446F 
 948 01b8 3130315C 		.ascii	"101\\PSoC-101\\TrainingProjects\\ADC-PWM-UART.cydsn"
 948      50536F43 
 948      2D313031 
 948      5C547261 
 948      696E696E 
 949 01e8 00       		.ascii	"\000"
 950              	.LASF31:
 951 01e9 53656E64 		.ascii	"SendChannelVoltage\000"
 951      4368616E 
 951      6E656C56 
 951      6F6C7461 
 951      676500
 952              	.LASF26:
 953 01fc 64617461 		.ascii	"dataReady\000"
 953      52656164 
 953      7900
 954              	.LASF2:
 955 0206 73686F72 		.ascii	"short int\000"
 955      7420696E 
 955      7400
 956              	.LASF4:
 957 0210 6C6F6E67 		.ascii	"long int\000"
 957      20696E74 
 957      00
 958              	.LASF16:
 959 0219 6C6F6E67 		.ascii	"long double\000"
 959      20646F75 
 959      626C6500 
 960              	.LASF0:
 961 0225 7369676E 		.ascii	"signed char\000"
 961      65642063 
 961      68617200 
 962              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
