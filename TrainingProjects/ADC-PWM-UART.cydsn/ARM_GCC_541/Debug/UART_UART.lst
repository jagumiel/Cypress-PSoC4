ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccR7UNHp.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"UART_UART.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.UART_UartInit,"ax",%progbits
  20              		.align	2
  21              		.global	UART_UartInit
  22              		.code	16
  23              		.thumb_func
  24              		.type	UART_UartInit, %function
  25              	UART_UartInit:
  26              	.LFB0:
  27              		.file 1 "Generated_Source\\PSoC4\\UART_UART.c"
   1:Generated_Source\PSoC4/UART_UART.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/UART_UART.c **** * \file UART_UART.c
   3:Generated_Source\PSoC4/UART_UART.c **** * \version 4.0
   4:Generated_Source\PSoC4/UART_UART.c **** *
   5:Generated_Source\PSoC4/UART_UART.c **** * \brief
   6:Generated_Source\PSoC4/UART_UART.c **** *  This file provides the source code to the API for the SCB Component in
   7:Generated_Source\PSoC4/UART_UART.c **** *  UART mode.
   8:Generated_Source\PSoC4/UART_UART.c **** *
   9:Generated_Source\PSoC4/UART_UART.c **** * Note:
  10:Generated_Source\PSoC4/UART_UART.c **** *
  11:Generated_Source\PSoC4/UART_UART.c **** *******************************************************************************
  12:Generated_Source\PSoC4/UART_UART.c **** * \copyright
  13:Generated_Source\PSoC4/UART_UART.c **** * Copyright 2013-2017, Cypress Semiconductor Corporation.  All rights reserved.
  14:Generated_Source\PSoC4/UART_UART.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:Generated_Source\PSoC4/UART_UART.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:Generated_Source\PSoC4/UART_UART.c **** * the software package with which this file was provided.
  17:Generated_Source\PSoC4/UART_UART.c **** *******************************************************************************/
  18:Generated_Source\PSoC4/UART_UART.c **** 
  19:Generated_Source\PSoC4/UART_UART.c **** #include "UART_PVT.h"
  20:Generated_Source\PSoC4/UART_UART.c **** #include "UART_SPI_UART_PVT.h"
  21:Generated_Source\PSoC4/UART_UART.c **** #include "cyapicallbacks.h"
  22:Generated_Source\PSoC4/UART_UART.c **** 
  23:Generated_Source\PSoC4/UART_UART.c **** #if (UART_UART_WAKE_ENABLE_CONST && UART_UART_RX_WAKEUP_IRQ)
  24:Generated_Source\PSoC4/UART_UART.c ****     /**
  25:Generated_Source\PSoC4/UART_UART.c ****     * \addtogroup group_globals
  26:Generated_Source\PSoC4/UART_UART.c ****     * \{
  27:Generated_Source\PSoC4/UART_UART.c ****     */
  28:Generated_Source\PSoC4/UART_UART.c ****     /** This global variable determines whether to enable Skip Start
  29:Generated_Source\PSoC4/UART_UART.c ****     * functionality when UART_Sleep() function is called:
  30:Generated_Source\PSoC4/UART_UART.c ****     * 0 – disable, other values – enable. Default value is 1.
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccR7UNHp.s 			page 2


  31:Generated_Source\PSoC4/UART_UART.c ****     * It is only available when Enable wakeup from Deep Sleep Mode is enabled.
  32:Generated_Source\PSoC4/UART_UART.c ****     */
  33:Generated_Source\PSoC4/UART_UART.c ****     uint8 UART_skipStart = 1u;
  34:Generated_Source\PSoC4/UART_UART.c ****     /** \} globals */
  35:Generated_Source\PSoC4/UART_UART.c **** #endif /* (UART_UART_WAKE_ENABLE_CONST && UART_UART_RX_WAKEUP_IRQ) */
  36:Generated_Source\PSoC4/UART_UART.c **** 
  37:Generated_Source\PSoC4/UART_UART.c **** #if(UART_SCB_MODE_UNCONFIG_CONST_CFG)
  38:Generated_Source\PSoC4/UART_UART.c **** 
  39:Generated_Source\PSoC4/UART_UART.c ****     /***************************************
  40:Generated_Source\PSoC4/UART_UART.c ****     *  Configuration Structure Initialization
  41:Generated_Source\PSoC4/UART_UART.c ****     ***************************************/
  42:Generated_Source\PSoC4/UART_UART.c **** 
  43:Generated_Source\PSoC4/UART_UART.c ****     const UART_UART_INIT_STRUCT UART_configUart =
  44:Generated_Source\PSoC4/UART_UART.c ****     {
  45:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_SUB_MODE,
  46:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_DIRECTION,
  47:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_DATA_BITS_NUM,
  48:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_PARITY_TYPE,
  49:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_STOP_BITS_NUM,
  50:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_OVS_FACTOR,
  51:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_IRDA_LOW_POWER,
  52:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_MEDIAN_FILTER_ENABLE,
  53:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_RETRY_ON_NACK,
  54:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_IRDA_POLARITY,
  55:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_DROP_ON_PARITY_ERR,
  56:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_DROP_ON_FRAME_ERR,
  57:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_WAKE_ENABLE,
  58:Generated_Source\PSoC4/UART_UART.c ****         0u,
  59:Generated_Source\PSoC4/UART_UART.c ****         NULL,
  60:Generated_Source\PSoC4/UART_UART.c ****         0u,
  61:Generated_Source\PSoC4/UART_UART.c ****         NULL,
  62:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_MP_MODE_ENABLE,
  63:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_MP_ACCEPT_ADDRESS,
  64:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_MP_RX_ADDRESS,
  65:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_MP_RX_ADDRESS_MASK,
  66:Generated_Source\PSoC4/UART_UART.c ****         (uint32) UART_SCB_IRQ_INTERNAL,
  67:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_INTR_RX_MASK,
  68:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_RX_TRIGGER_LEVEL,
  69:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_INTR_TX_MASK,
  70:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_TX_TRIGGER_LEVEL,
  71:Generated_Source\PSoC4/UART_UART.c ****         (uint8) UART_UART_BYTE_MODE_ENABLE,
  72:Generated_Source\PSoC4/UART_UART.c ****         (uint8) UART_UART_CTS_ENABLE,
  73:Generated_Source\PSoC4/UART_UART.c ****         (uint8) UART_UART_CTS_POLARITY,
  74:Generated_Source\PSoC4/UART_UART.c ****         (uint8) UART_UART_RTS_POLARITY,
  75:Generated_Source\PSoC4/UART_UART.c ****         (uint8) UART_UART_RTS_FIFO_LEVEL,
  76:Generated_Source\PSoC4/UART_UART.c ****         (uint8) UART_UART_RX_BREAK_WIDTH
  77:Generated_Source\PSoC4/UART_UART.c ****     };
  78:Generated_Source\PSoC4/UART_UART.c **** 
  79:Generated_Source\PSoC4/UART_UART.c **** 
  80:Generated_Source\PSoC4/UART_UART.c ****     /*******************************************************************************
  81:Generated_Source\PSoC4/UART_UART.c ****     * Function Name: UART_UartInit
  82:Generated_Source\PSoC4/UART_UART.c ****     ****************************************************************************//**
  83:Generated_Source\PSoC4/UART_UART.c ****     *
  84:Generated_Source\PSoC4/UART_UART.c ****     *  Configures the UART for UART operation.
  85:Generated_Source\PSoC4/UART_UART.c ****     *
  86:Generated_Source\PSoC4/UART_UART.c ****     *  This function is intended specifically to be used when the UART
  87:Generated_Source\PSoC4/UART_UART.c ****     *  configuration is set to “Unconfigured UART” in the customizer.
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccR7UNHp.s 			page 3


  88:Generated_Source\PSoC4/UART_UART.c ****     *  After initializing the UART in UART mode using this function,
  89:Generated_Source\PSoC4/UART_UART.c ****     *  the component can be enabled using the UART_Start() or
  90:Generated_Source\PSoC4/UART_UART.c ****     * UART_Enable() function.
  91:Generated_Source\PSoC4/UART_UART.c ****     *  This function uses a pointer to a structure that provides the configuration
  92:Generated_Source\PSoC4/UART_UART.c ****     *  settings. This structure contains the same information that would otherwise
  93:Generated_Source\PSoC4/UART_UART.c ****     *  be provided by the customizer settings.
  94:Generated_Source\PSoC4/UART_UART.c ****     *
  95:Generated_Source\PSoC4/UART_UART.c ****     *  \param config: pointer to a structure that contains the following list of
  96:Generated_Source\PSoC4/UART_UART.c ****     *   fields. These fields match the selections available in the customizer.
  97:Generated_Source\PSoC4/UART_UART.c ****     *   Refer to the customizer for further description of the settings.
  98:Generated_Source\PSoC4/UART_UART.c ****     *
  99:Generated_Source\PSoC4/UART_UART.c ****     *******************************************************************************/
 100:Generated_Source\PSoC4/UART_UART.c ****     void UART_UartInit(const UART_UART_INIT_STRUCT *config)
 101:Generated_Source\PSoC4/UART_UART.c ****     {
 102:Generated_Source\PSoC4/UART_UART.c ****         uint32 pinsConfig;
 103:Generated_Source\PSoC4/UART_UART.c **** 
 104:Generated_Source\PSoC4/UART_UART.c ****         if (NULL == config)
 105:Generated_Source\PSoC4/UART_UART.c ****         {
 106:Generated_Source\PSoC4/UART_UART.c ****             CYASSERT(0u != 0u); /* Halt execution due to bad function parameter */
 107:Generated_Source\PSoC4/UART_UART.c ****         }
 108:Generated_Source\PSoC4/UART_UART.c ****         else
 109:Generated_Source\PSoC4/UART_UART.c ****         {
 110:Generated_Source\PSoC4/UART_UART.c ****             /* Get direction to configure UART pins: TX, RX or TX+RX */
 111:Generated_Source\PSoC4/UART_UART.c ****             pinsConfig  = config->direction;
 112:Generated_Source\PSoC4/UART_UART.c **** 
 113:Generated_Source\PSoC4/UART_UART.c ****         #if !(UART_CY_SCBIP_V0 || UART_CY_SCBIP_V1)
 114:Generated_Source\PSoC4/UART_UART.c ****             /* Add RTS and CTS pins to configure */
 115:Generated_Source\PSoC4/UART_UART.c ****             pinsConfig |= (0u != config->rtsRxFifoLevel) ? (UART_UART_RTS_PIN_ENABLE) : (0u);
 116:Generated_Source\PSoC4/UART_UART.c ****             pinsConfig |= (0u != config->enableCts)      ? (UART_UART_CTS_PIN_ENABLE) : (0u);
 117:Generated_Source\PSoC4/UART_UART.c ****         #endif /* !(UART_CY_SCBIP_V0 || UART_CY_SCBIP_V1) */
 118:Generated_Source\PSoC4/UART_UART.c **** 
 119:Generated_Source\PSoC4/UART_UART.c ****             /* Configure pins */
 120:Generated_Source\PSoC4/UART_UART.c ****             UART_SetPins(UART_SCB_MODE_UART, config->mode, pinsConfig);
 121:Generated_Source\PSoC4/UART_UART.c **** 
 122:Generated_Source\PSoC4/UART_UART.c ****             /* Store internal configuration */
 123:Generated_Source\PSoC4/UART_UART.c ****             UART_scbMode       = (uint8) UART_SCB_MODE_UART;
 124:Generated_Source\PSoC4/UART_UART.c ****             UART_scbEnableWake = (uint8) config->enableWake;
 125:Generated_Source\PSoC4/UART_UART.c ****             UART_scbEnableIntr = (uint8) config->enableInterrupt;
 126:Generated_Source\PSoC4/UART_UART.c **** 
 127:Generated_Source\PSoC4/UART_UART.c ****             /* Set RX direction internal variables */
 128:Generated_Source\PSoC4/UART_UART.c ****             UART_rxBuffer      =         config->rxBuffer;
 129:Generated_Source\PSoC4/UART_UART.c ****             UART_rxDataBits    = (uint8) config->dataBits;
 130:Generated_Source\PSoC4/UART_UART.c ****             UART_rxBufferSize  =         config->rxBufferSize;
 131:Generated_Source\PSoC4/UART_UART.c **** 
 132:Generated_Source\PSoC4/UART_UART.c ****             /* Set TX direction internal variables */
 133:Generated_Source\PSoC4/UART_UART.c ****             UART_txBuffer      =         config->txBuffer;
 134:Generated_Source\PSoC4/UART_UART.c ****             UART_txDataBits    = (uint8) config->dataBits;
 135:Generated_Source\PSoC4/UART_UART.c ****             UART_txBufferSize  =         config->txBufferSize;
 136:Generated_Source\PSoC4/UART_UART.c **** 
 137:Generated_Source\PSoC4/UART_UART.c ****             /* Configure UART interface */
 138:Generated_Source\PSoC4/UART_UART.c ****             if(UART_UART_MODE_IRDA == config->mode)
 139:Generated_Source\PSoC4/UART_UART.c ****             {
 140:Generated_Source\PSoC4/UART_UART.c ****                 /* OVS settings: IrDA */
 141:Generated_Source\PSoC4/UART_UART.c ****                 UART_CTRL_REG  = ((0u != config->enableIrdaLowPower) ?
 142:Generated_Source\PSoC4/UART_UART.c ****                                                 (UART_UART_GET_CTRL_OVS_IRDA_LP(config->oversample)
 143:Generated_Source\PSoC4/UART_UART.c ****                                                 (UART_CTRL_OVS_IRDA_OVS16));
 144:Generated_Source\PSoC4/UART_UART.c ****             }
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccR7UNHp.s 			page 4


 145:Generated_Source\PSoC4/UART_UART.c ****             else
 146:Generated_Source\PSoC4/UART_UART.c ****             {
 147:Generated_Source\PSoC4/UART_UART.c ****                 /* OVS settings: UART and SmartCard */
 148:Generated_Source\PSoC4/UART_UART.c ****                 UART_CTRL_REG  = UART_GET_CTRL_OVS(config->oversample);
 149:Generated_Source\PSoC4/UART_UART.c ****             }
 150:Generated_Source\PSoC4/UART_UART.c **** 
 151:Generated_Source\PSoC4/UART_UART.c ****             UART_CTRL_REG     |= UART_GET_CTRL_BYTE_MODE  (config->enableByteMode)      |
 152:Generated_Source\PSoC4/UART_UART.c ****                                              UART_GET_CTRL_ADDR_ACCEPT(config->multiprocAcceptAddr)
 153:Generated_Source\PSoC4/UART_UART.c ****                                              UART_CTRL_UART;
 154:Generated_Source\PSoC4/UART_UART.c **** 
 155:Generated_Source\PSoC4/UART_UART.c ****             /* Configure sub-mode: UART, SmartCard or IrDA */
 156:Generated_Source\PSoC4/UART_UART.c ****             UART_UART_CTRL_REG = UART_GET_UART_CTRL_MODE(config->mode);
 157:Generated_Source\PSoC4/UART_UART.c **** 
 158:Generated_Source\PSoC4/UART_UART.c ****             /* Configure RX direction */
 159:Generated_Source\PSoC4/UART_UART.c ****             UART_UART_RX_CTRL_REG = UART_GET_UART_RX_CTRL_MODE(config->stopBits)              |
 160:Generated_Source\PSoC4/UART_UART.c ****                                         UART_GET_UART_RX_CTRL_POLARITY(config->enableInvertedRx)   
 161:Generated_Source\PSoC4/UART_UART.c ****                                         UART_GET_UART_RX_CTRL_MP_MODE(config->enableMultiproc)     
 162:Generated_Source\PSoC4/UART_UART.c ****                                         UART_GET_UART_RX_CTRL_DROP_ON_PARITY_ERR(config->dropOnPari
 163:Generated_Source\PSoC4/UART_UART.c ****                                         UART_GET_UART_RX_CTRL_DROP_ON_FRAME_ERR(config->dropOnFrame
 164:Generated_Source\PSoC4/UART_UART.c ****                                         UART_GET_UART_RX_CTRL_BREAK_WIDTH(config->breakWidth);
 165:Generated_Source\PSoC4/UART_UART.c **** 
 166:Generated_Source\PSoC4/UART_UART.c ****             if(UART_UART_PARITY_NONE != config->parity)
 167:Generated_Source\PSoC4/UART_UART.c ****             {
 168:Generated_Source\PSoC4/UART_UART.c ****                UART_UART_RX_CTRL_REG |= UART_GET_UART_RX_CTRL_PARITY(config->parity) |
 169:Generated_Source\PSoC4/UART_UART.c ****                                                     UART_UART_RX_CTRL_PARITY_ENABLED;
 170:Generated_Source\PSoC4/UART_UART.c ****             }
 171:Generated_Source\PSoC4/UART_UART.c **** 
 172:Generated_Source\PSoC4/UART_UART.c ****             UART_RX_CTRL_REG      = UART_GET_RX_CTRL_DATA_WIDTH(config->dataBits)       |
 173:Generated_Source\PSoC4/UART_UART.c ****                                                 UART_GET_RX_CTRL_MEDIAN(config->enableMedianFilter)
 174:Generated_Source\PSoC4/UART_UART.c ****                                                 UART_GET_UART_RX_CTRL_ENABLED(config->direction);
 175:Generated_Source\PSoC4/UART_UART.c **** 
 176:Generated_Source\PSoC4/UART_UART.c ****             UART_RX_FIFO_CTRL_REG = UART_GET_RX_FIFO_CTRL_TRIGGER_LEVEL(config->rxTriggerLevel);
 177:Generated_Source\PSoC4/UART_UART.c **** 
 178:Generated_Source\PSoC4/UART_UART.c ****             /* Configure MP address */
 179:Generated_Source\PSoC4/UART_UART.c ****             UART_RX_MATCH_REG     = UART_GET_RX_MATCH_ADDR(config->multiprocAddr) |
 180:Generated_Source\PSoC4/UART_UART.c ****                                                 UART_GET_RX_MATCH_MASK(config->multiprocAddrMask);
 181:Generated_Source\PSoC4/UART_UART.c **** 
 182:Generated_Source\PSoC4/UART_UART.c ****             /* Configure RX direction */
 183:Generated_Source\PSoC4/UART_UART.c ****             UART_UART_TX_CTRL_REG = UART_GET_UART_TX_CTRL_MODE(config->stopBits) |
 184:Generated_Source\PSoC4/UART_UART.c ****                                                 UART_GET_UART_TX_CTRL_RETRY_NACK(config->enableRetr
 185:Generated_Source\PSoC4/UART_UART.c **** 
 186:Generated_Source\PSoC4/UART_UART.c ****             if(UART_UART_PARITY_NONE != config->parity)
 187:Generated_Source\PSoC4/UART_UART.c ****             {
 188:Generated_Source\PSoC4/UART_UART.c ****                UART_UART_TX_CTRL_REG |= UART_GET_UART_TX_CTRL_PARITY(config->parity) |
 189:Generated_Source\PSoC4/UART_UART.c ****                                                     UART_UART_TX_CTRL_PARITY_ENABLED;
 190:Generated_Source\PSoC4/UART_UART.c ****             }
 191:Generated_Source\PSoC4/UART_UART.c **** 
 192:Generated_Source\PSoC4/UART_UART.c ****             UART_TX_CTRL_REG      = UART_GET_TX_CTRL_DATA_WIDTH(config->dataBits)    |
 193:Generated_Source\PSoC4/UART_UART.c ****                                                 UART_GET_UART_TX_CTRL_ENABLED(config->direction);
 194:Generated_Source\PSoC4/UART_UART.c **** 
 195:Generated_Source\PSoC4/UART_UART.c ****             UART_TX_FIFO_CTRL_REG = UART_GET_TX_FIFO_CTRL_TRIGGER_LEVEL(config->txTriggerLevel);
 196:Generated_Source\PSoC4/UART_UART.c **** 
 197:Generated_Source\PSoC4/UART_UART.c ****         #if !(UART_CY_SCBIP_V0 || UART_CY_SCBIP_V1)
 198:Generated_Source\PSoC4/UART_UART.c ****             UART_UART_FLOW_CTRL_REG = UART_GET_UART_FLOW_CTRL_CTS_ENABLE(config->enableCts) | \
 199:Generated_Source\PSoC4/UART_UART.c ****                                             UART_GET_UART_FLOW_CTRL_CTS_POLARITY (config->ctsPolari
 200:Generated_Source\PSoC4/UART_UART.c ****                                             UART_GET_UART_FLOW_CTRL_RTS_POLARITY (config->rtsPolari
 201:Generated_Source\PSoC4/UART_UART.c ****                                             UART_GET_UART_FLOW_CTRL_TRIGGER_LEVEL(config->rtsRxFifo
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccR7UNHp.s 			page 5


 202:Generated_Source\PSoC4/UART_UART.c ****         #endif /* !(UART_CY_SCBIP_V0 || UART_CY_SCBIP_V1) */
 203:Generated_Source\PSoC4/UART_UART.c **** 
 204:Generated_Source\PSoC4/UART_UART.c ****             /* Configure interrupt with UART handler but do not enable it */
 205:Generated_Source\PSoC4/UART_UART.c ****             CyIntDisable    (UART_ISR_NUMBER);
 206:Generated_Source\PSoC4/UART_UART.c ****             CyIntSetPriority(UART_ISR_NUMBER, UART_ISR_PRIORITY);
 207:Generated_Source\PSoC4/UART_UART.c ****             (void) CyIntSetVector(UART_ISR_NUMBER, &UART_SPI_UART_ISR);
 208:Generated_Source\PSoC4/UART_UART.c **** 
 209:Generated_Source\PSoC4/UART_UART.c ****             /* Configure WAKE interrupt */
 210:Generated_Source\PSoC4/UART_UART.c ****         #if(UART_UART_RX_WAKEUP_IRQ)
 211:Generated_Source\PSoC4/UART_UART.c ****             CyIntDisable    (UART_RX_WAKE_ISR_NUMBER);
 212:Generated_Source\PSoC4/UART_UART.c ****             CyIntSetPriority(UART_RX_WAKE_ISR_NUMBER, UART_RX_WAKE_ISR_PRIORITY);
 213:Generated_Source\PSoC4/UART_UART.c ****             (void) CyIntSetVector(UART_RX_WAKE_ISR_NUMBER, &UART_UART_WAKEUP_ISR);
 214:Generated_Source\PSoC4/UART_UART.c ****         #endif /* (UART_UART_RX_WAKEUP_IRQ) */
 215:Generated_Source\PSoC4/UART_UART.c **** 
 216:Generated_Source\PSoC4/UART_UART.c ****             /* Configure interrupt sources */
 217:Generated_Source\PSoC4/UART_UART.c ****             UART_INTR_I2C_EC_MASK_REG = UART_NO_INTR_SOURCES;
 218:Generated_Source\PSoC4/UART_UART.c ****             UART_INTR_SPI_EC_MASK_REG = UART_NO_INTR_SOURCES;
 219:Generated_Source\PSoC4/UART_UART.c ****             UART_INTR_SLAVE_MASK_REG  = UART_NO_INTR_SOURCES;
 220:Generated_Source\PSoC4/UART_UART.c ****             UART_INTR_MASTER_MASK_REG = UART_NO_INTR_SOURCES;
 221:Generated_Source\PSoC4/UART_UART.c ****             UART_INTR_RX_MASK_REG     = config->rxInterruptMask;
 222:Generated_Source\PSoC4/UART_UART.c ****             UART_INTR_TX_MASK_REG     = config->txInterruptMask;
 223:Generated_Source\PSoC4/UART_UART.c **** 
 224:Generated_Source\PSoC4/UART_UART.c ****             /* Configure TX interrupt sources to restore. */
 225:Generated_Source\PSoC4/UART_UART.c ****             UART_IntrTxMask = LO16(UART_INTR_TX_MASK_REG);
 226:Generated_Source\PSoC4/UART_UART.c **** 
 227:Generated_Source\PSoC4/UART_UART.c ****             /* Clear RX buffer indexes */
 228:Generated_Source\PSoC4/UART_UART.c ****             UART_rxBufferHead     = 0u;
 229:Generated_Source\PSoC4/UART_UART.c ****             UART_rxBufferTail     = 0u;
 230:Generated_Source\PSoC4/UART_UART.c ****             UART_rxBufferOverflow = 0u;
 231:Generated_Source\PSoC4/UART_UART.c **** 
 232:Generated_Source\PSoC4/UART_UART.c ****             /* Clear TX buffer indexes */
 233:Generated_Source\PSoC4/UART_UART.c ****             UART_txBufferHead = 0u;
 234:Generated_Source\PSoC4/UART_UART.c ****             UART_txBufferTail = 0u;
 235:Generated_Source\PSoC4/UART_UART.c ****         }
 236:Generated_Source\PSoC4/UART_UART.c ****     }
 237:Generated_Source\PSoC4/UART_UART.c **** 
 238:Generated_Source\PSoC4/UART_UART.c **** #else
 239:Generated_Source\PSoC4/UART_UART.c **** 
 240:Generated_Source\PSoC4/UART_UART.c ****     /*******************************************************************************
 241:Generated_Source\PSoC4/UART_UART.c ****     * Function Name: UART_UartInit
 242:Generated_Source\PSoC4/UART_UART.c ****     ****************************************************************************//**
 243:Generated_Source\PSoC4/UART_UART.c ****     *
 244:Generated_Source\PSoC4/UART_UART.c ****     *  Configures the SCB for the UART operation.
 245:Generated_Source\PSoC4/UART_UART.c ****     *
 246:Generated_Source\PSoC4/UART_UART.c ****     *******************************************************************************/
 247:Generated_Source\PSoC4/UART_UART.c ****     void UART_UartInit(void)
 248:Generated_Source\PSoC4/UART_UART.c ****     {
  28              		.loc 1 248 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32 0000 80B5     		push	{r7, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 7, -8
  35              		.cfi_offset 14, -4
  36 0002 00AF     		add	r7, sp, #0
  37              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccR7UNHp.s 			page 6


 249:Generated_Source\PSoC4/UART_UART.c ****         /* Configure UART interface */
 250:Generated_Source\PSoC4/UART_UART.c ****         UART_CTRL_REG = UART_UART_DEFAULT_CTRL;
  38              		.loc 1 250 0
  39 0004 1A4B     		ldr	r3, .L2
  40 0006 1B4A     		ldr	r2, .L2+4
  41 0008 1A60     		str	r2, [r3]
 251:Generated_Source\PSoC4/UART_UART.c **** 
 252:Generated_Source\PSoC4/UART_UART.c ****         /* Configure sub-mode: UART, SmartCard or IrDA */
 253:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_CTRL_REG = UART_UART_DEFAULT_UART_CTRL;
  42              		.loc 1 253 0
  43 000a 1B4B     		ldr	r3, .L2+8
  44 000c 0022     		movs	r2, #0
  45 000e 1A60     		str	r2, [r3]
 254:Generated_Source\PSoC4/UART_UART.c **** 
 255:Generated_Source\PSoC4/UART_UART.c ****         /* Configure RX direction */
 256:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_RX_CTRL_REG = UART_UART_DEFAULT_UART_RX_CTRL;
  46              		.loc 1 256 0
  47 0010 1A4B     		ldr	r3, .L2+12
  48 0012 1B4A     		ldr	r2, .L2+16
  49 0014 1A60     		str	r2, [r3]
 257:Generated_Source\PSoC4/UART_UART.c ****         UART_RX_CTRL_REG      = UART_UART_DEFAULT_RX_CTRL;
  50              		.loc 1 257 0
  51 0016 1B4B     		ldr	r3, .L2+20
  52 0018 0722     		movs	r2, #7
  53 001a 1A60     		str	r2, [r3]
 258:Generated_Source\PSoC4/UART_UART.c ****         UART_RX_FIFO_CTRL_REG = UART_UART_DEFAULT_RX_FIFO_CTRL;
  54              		.loc 1 258 0
  55 001c 1A4B     		ldr	r3, .L2+24
  56 001e 0722     		movs	r2, #7
  57 0020 1A60     		str	r2, [r3]
 259:Generated_Source\PSoC4/UART_UART.c ****         UART_RX_MATCH_REG     = UART_UART_DEFAULT_RX_MATCH_REG;
  58              		.loc 1 259 0
  59 0022 1A4B     		ldr	r3, .L2+28
  60 0024 0022     		movs	r2, #0
  61 0026 1A60     		str	r2, [r3]
 260:Generated_Source\PSoC4/UART_UART.c **** 
 261:Generated_Source\PSoC4/UART_UART.c ****         /* Configure TX direction */
 262:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_TX_CTRL_REG = UART_UART_DEFAULT_UART_TX_CTRL;
  62              		.loc 1 262 0
  63 0028 194B     		ldr	r3, .L2+32
  64 002a 0122     		movs	r2, #1
  65 002c 1A60     		str	r2, [r3]
 263:Generated_Source\PSoC4/UART_UART.c ****         UART_TX_CTRL_REG      = UART_UART_DEFAULT_TX_CTRL;
  66              		.loc 1 263 0
  67 002e 194B     		ldr	r3, .L2+36
  68 0030 194A     		ldr	r2, .L2+40
  69 0032 1A60     		str	r2, [r3]
 264:Generated_Source\PSoC4/UART_UART.c ****         UART_TX_FIFO_CTRL_REG = UART_UART_DEFAULT_TX_FIFO_CTRL;
  70              		.loc 1 264 0
  71 0034 194B     		ldr	r3, .L2+44
  72 0036 0022     		movs	r2, #0
  73 0038 1A60     		str	r2, [r3]
 265:Generated_Source\PSoC4/UART_UART.c **** 
 266:Generated_Source\PSoC4/UART_UART.c ****     #if !(UART_CY_SCBIP_V0 || UART_CY_SCBIP_V1)
 267:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_FLOW_CTRL_REG = UART_UART_DEFAULT_FLOW_CTRL;
 268:Generated_Source\PSoC4/UART_UART.c ****     #endif /* !(UART_CY_SCBIP_V0 || UART_CY_SCBIP_V1) */
 269:Generated_Source\PSoC4/UART_UART.c **** 
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccR7UNHp.s 			page 7


 270:Generated_Source\PSoC4/UART_UART.c ****         /* Configure interrupt with UART handler but do not enable it */
 271:Generated_Source\PSoC4/UART_UART.c ****     #if(UART_SCB_IRQ_INTERNAL)
 272:Generated_Source\PSoC4/UART_UART.c ****         CyIntDisable    (UART_ISR_NUMBER);
 273:Generated_Source\PSoC4/UART_UART.c ****         CyIntSetPriority(UART_ISR_NUMBER, UART_ISR_PRIORITY);
 274:Generated_Source\PSoC4/UART_UART.c ****         (void) CyIntSetVector(UART_ISR_NUMBER, &UART_SPI_UART_ISR);
 275:Generated_Source\PSoC4/UART_UART.c ****     #endif /* (UART_SCB_IRQ_INTERNAL) */
 276:Generated_Source\PSoC4/UART_UART.c **** 
 277:Generated_Source\PSoC4/UART_UART.c ****         /* Configure WAKE interrupt */
 278:Generated_Source\PSoC4/UART_UART.c ****     #if(UART_UART_RX_WAKEUP_IRQ)
 279:Generated_Source\PSoC4/UART_UART.c ****         CyIntDisable    (UART_RX_WAKE_ISR_NUMBER);
 280:Generated_Source\PSoC4/UART_UART.c ****         CyIntSetPriority(UART_RX_WAKE_ISR_NUMBER, UART_RX_WAKE_ISR_PRIORITY);
 281:Generated_Source\PSoC4/UART_UART.c ****         (void) CyIntSetVector(UART_RX_WAKE_ISR_NUMBER, &UART_UART_WAKEUP_ISR);
 282:Generated_Source\PSoC4/UART_UART.c ****     #endif /* (UART_UART_RX_WAKEUP_IRQ) */
 283:Generated_Source\PSoC4/UART_UART.c **** 
 284:Generated_Source\PSoC4/UART_UART.c ****         /* Configure interrupt sources */
 285:Generated_Source\PSoC4/UART_UART.c ****         UART_INTR_I2C_EC_MASK_REG = UART_UART_DEFAULT_INTR_I2C_EC_MASK;
  74              		.loc 1 285 0
  75 003a 194B     		ldr	r3, .L2+48
  76 003c 0022     		movs	r2, #0
  77 003e 1A60     		str	r2, [r3]
 286:Generated_Source\PSoC4/UART_UART.c ****         UART_INTR_SPI_EC_MASK_REG = UART_UART_DEFAULT_INTR_SPI_EC_MASK;
  78              		.loc 1 286 0
  79 0040 184B     		ldr	r3, .L2+52
  80 0042 0022     		movs	r2, #0
  81 0044 1A60     		str	r2, [r3]
 287:Generated_Source\PSoC4/UART_UART.c ****         UART_INTR_SLAVE_MASK_REG  = UART_UART_DEFAULT_INTR_SLAVE_MASK;
  82              		.loc 1 287 0
  83 0046 184B     		ldr	r3, .L2+56
  84 0048 0022     		movs	r2, #0
  85 004a 1A60     		str	r2, [r3]
 288:Generated_Source\PSoC4/UART_UART.c ****         UART_INTR_MASTER_MASK_REG = UART_UART_DEFAULT_INTR_MASTER_MASK;
  86              		.loc 1 288 0
  87 004c 174B     		ldr	r3, .L2+60
  88 004e 0022     		movs	r2, #0
  89 0050 1A60     		str	r2, [r3]
 289:Generated_Source\PSoC4/UART_UART.c ****         UART_INTR_RX_MASK_REG     = UART_UART_DEFAULT_INTR_RX_MASK;
  90              		.loc 1 289 0
  91 0052 174B     		ldr	r3, .L2+64
  92 0054 0022     		movs	r2, #0
  93 0056 1A60     		str	r2, [r3]
 290:Generated_Source\PSoC4/UART_UART.c ****         UART_INTR_TX_MASK_REG     = UART_UART_DEFAULT_INTR_TX_MASK;
  94              		.loc 1 290 0
  95 0058 164B     		ldr	r3, .L2+68
  96 005a 0022     		movs	r2, #0
  97 005c 1A60     		str	r2, [r3]
 291:Generated_Source\PSoC4/UART_UART.c **** 
 292:Generated_Source\PSoC4/UART_UART.c ****         /* Configure TX interrupt sources to restore. */
 293:Generated_Source\PSoC4/UART_UART.c ****         UART_IntrTxMask = LO16(UART_INTR_TX_MASK_REG);
  98              		.loc 1 293 0
  99 005e 154B     		ldr	r3, .L2+68
 100 0060 1B68     		ldr	r3, [r3]
 101 0062 9AB2     		uxth	r2, r3
 102 0064 144B     		ldr	r3, .L2+72
 103 0066 1A80     		strh	r2, [r3]
 294:Generated_Source\PSoC4/UART_UART.c **** 
 295:Generated_Source\PSoC4/UART_UART.c ****     #if(UART_INTERNAL_RX_SW_BUFFER_CONST)
 296:Generated_Source\PSoC4/UART_UART.c ****         UART_rxBufferHead     = 0u;
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccR7UNHp.s 			page 8


 297:Generated_Source\PSoC4/UART_UART.c ****         UART_rxBufferTail     = 0u;
 298:Generated_Source\PSoC4/UART_UART.c ****         UART_rxBufferOverflow = 0u;
 299:Generated_Source\PSoC4/UART_UART.c ****     #endif /* (UART_INTERNAL_RX_SW_BUFFER_CONST) */
 300:Generated_Source\PSoC4/UART_UART.c **** 
 301:Generated_Source\PSoC4/UART_UART.c ****     #if(UART_INTERNAL_TX_SW_BUFFER_CONST)
 302:Generated_Source\PSoC4/UART_UART.c ****         UART_txBufferHead = 0u;
 303:Generated_Source\PSoC4/UART_UART.c ****         UART_txBufferTail = 0u;
 304:Generated_Source\PSoC4/UART_UART.c ****     #endif /* (UART_INTERNAL_TX_SW_BUFFER_CONST) */
 305:Generated_Source\PSoC4/UART_UART.c ****     }
 104              		.loc 1 305 0
 105 0068 C046     		nop
 106 006a BD46     		mov	sp, r7
 107              		@ sp needed
 108 006c 80BD     		pop	{r7, pc}
 109              	.L3:
 110 006e C046     		.align	2
 111              	.L2:
 112 0070 00000640 		.word	1074135040
 113 0074 07000002 		.word	33554439
 114 0078 40000640 		.word	1074135104
 115 007c 48000640 		.word	1074135112
 116 0080 01000A00 		.word	655361
 117 0084 00030640 		.word	1074135808
 118 0088 04030640 		.word	1074135812
 119 008c 10030640 		.word	1074135824
 120 0090 44000640 		.word	1074135108
 121 0094 00020640 		.word	1074135552
 122 0098 07000080 		.word	-2147483641
 123 009c 04020640 		.word	1074135556
 124 00a0 880E0640 		.word	1074138760
 125 00a4 C80E0640 		.word	1074138824
 126 00a8 480F0640 		.word	1074138952
 127 00ac 080F0640 		.word	1074138888
 128 00b0 C80F0640 		.word	1074139080
 129 00b4 880F0640 		.word	1074139016
 130 00b8 00000000 		.word	UART_IntrTxMask
 131              		.cfi_endproc
 132              	.LFE0:
 133              		.size	UART_UartInit, .-UART_UartInit
 134              		.section	.text.UART_UartPostEnable,"ax",%progbits
 135              		.align	2
 136              		.global	UART_UartPostEnable
 137              		.code	16
 138              		.thumb_func
 139              		.type	UART_UartPostEnable, %function
 140              	UART_UartPostEnable:
 141              	.LFB1:
 306:Generated_Source\PSoC4/UART_UART.c **** #endif /* (UART_SCB_MODE_UNCONFIG_CONST_CFG) */
 307:Generated_Source\PSoC4/UART_UART.c **** 
 308:Generated_Source\PSoC4/UART_UART.c **** 
 309:Generated_Source\PSoC4/UART_UART.c **** /*******************************************************************************
 310:Generated_Source\PSoC4/UART_UART.c **** * Function Name: UART_UartPostEnable
 311:Generated_Source\PSoC4/UART_UART.c **** ****************************************************************************//**
 312:Generated_Source\PSoC4/UART_UART.c **** *
 313:Generated_Source\PSoC4/UART_UART.c **** *  Restores HSIOM settings for the UART output pins (TX and/or RTS) to be
 314:Generated_Source\PSoC4/UART_UART.c **** *  controlled by the SCB UART.
 315:Generated_Source\PSoC4/UART_UART.c **** *
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccR7UNHp.s 			page 9


 316:Generated_Source\PSoC4/UART_UART.c **** *******************************************************************************/
 317:Generated_Source\PSoC4/UART_UART.c **** void UART_UartPostEnable(void)
 318:Generated_Source\PSoC4/UART_UART.c **** {
 142              		.loc 1 318 0
 143              		.cfi_startproc
 144              		@ args = 0, pretend = 0, frame = 0
 145              		@ frame_needed = 1, uses_anonymous_args = 0
 146 0000 80B5     		push	{r7, lr}
 147              		.cfi_def_cfa_offset 8
 148              		.cfi_offset 7, -8
 149              		.cfi_offset 14, -4
 150 0002 00AF     		add	r7, sp, #0
 151              		.cfi_def_cfa_register 7
 319:Generated_Source\PSoC4/UART_UART.c **** #if (UART_SCB_MODE_UNCONFIG_CONST_CFG)
 320:Generated_Source\PSoC4/UART_UART.c ****     #if (UART_TX_SDA_MISO_PIN)
 321:Generated_Source\PSoC4/UART_UART.c ****         if (UART_CHECK_TX_SDA_MISO_PIN_USED)
 322:Generated_Source\PSoC4/UART_UART.c ****         {
 323:Generated_Source\PSoC4/UART_UART.c ****             /* Set SCB UART to drive the output pin */
 324:Generated_Source\PSoC4/UART_UART.c ****             UART_SET_HSIOM_SEL(UART_TX_SDA_MISO_HSIOM_REG, UART_TX_SDA_MISO_HSIOM_MASK,
 325:Generated_Source\PSoC4/UART_UART.c ****                                            UART_TX_SDA_MISO_HSIOM_POS, UART_TX_SDA_MISO_HSIOM_SEL_U
 326:Generated_Source\PSoC4/UART_UART.c ****         }
 327:Generated_Source\PSoC4/UART_UART.c ****     #endif /* (UART_TX_SDA_MISO_PIN_PIN) */
 328:Generated_Source\PSoC4/UART_UART.c **** 
 329:Generated_Source\PSoC4/UART_UART.c ****     #if !(UART_CY_SCBIP_V0 || UART_CY_SCBIP_V1)
 330:Generated_Source\PSoC4/UART_UART.c ****         #if (UART_SS0_PIN)
 331:Generated_Source\PSoC4/UART_UART.c ****             if (UART_CHECK_SS0_PIN_USED)
 332:Generated_Source\PSoC4/UART_UART.c ****             {
 333:Generated_Source\PSoC4/UART_UART.c ****                 /* Set SCB UART to drive the output pin */
 334:Generated_Source\PSoC4/UART_UART.c ****                 UART_SET_HSIOM_SEL(UART_SS0_HSIOM_REG, UART_SS0_HSIOM_MASK,
 335:Generated_Source\PSoC4/UART_UART.c ****                                                UART_SS0_HSIOM_POS, UART_SS0_HSIOM_SEL_UART);
 336:Generated_Source\PSoC4/UART_UART.c ****             }
 337:Generated_Source\PSoC4/UART_UART.c ****         #endif /* (UART_SS0_PIN) */
 338:Generated_Source\PSoC4/UART_UART.c ****     #endif /* !(UART_CY_SCBIP_V0 || UART_CY_SCBIP_V1) */
 339:Generated_Source\PSoC4/UART_UART.c **** 
 340:Generated_Source\PSoC4/UART_UART.c **** #else
 341:Generated_Source\PSoC4/UART_UART.c ****     #if (UART_UART_TX_PIN)
 342:Generated_Source\PSoC4/UART_UART.c ****          /* Set SCB UART to drive the output pin */
 343:Generated_Source\PSoC4/UART_UART.c ****         UART_SET_HSIOM_SEL(UART_TX_HSIOM_REG, UART_TX_HSIOM_MASK,
 152              		.loc 1 343 0
 153 0004 074B     		ldr	r3, .L5
 154 0006 074A     		ldr	r2, .L5
 155 0008 1268     		ldr	r2, [r2]
 156 000a F021     		movs	r1, #240
 157 000c 8A43     		bics	r2, r1
 158 000e 9021     		movs	r1, #144
 159 0010 0A43     		orrs	r2, r1
 160 0012 1A60     		str	r2, [r3]
 344:Generated_Source\PSoC4/UART_UART.c ****                                        UART_TX_HSIOM_POS, UART_TX_HSIOM_SEL_UART);
 345:Generated_Source\PSoC4/UART_UART.c ****     #endif /* (UART_UART_TX_PIN) */
 346:Generated_Source\PSoC4/UART_UART.c **** 
 347:Generated_Source\PSoC4/UART_UART.c ****     #if (UART_UART_RTS_PIN)
 348:Generated_Source\PSoC4/UART_UART.c ****         /* Set SCB UART to drive the output pin */
 349:Generated_Source\PSoC4/UART_UART.c ****         UART_SET_HSIOM_SEL(UART_RTS_HSIOM_REG, UART_RTS_HSIOM_MASK,
 350:Generated_Source\PSoC4/UART_UART.c ****                                        UART_RTS_HSIOM_POS, UART_RTS_HSIOM_SEL_UART);
 351:Generated_Source\PSoC4/UART_UART.c ****     #endif /* (UART_UART_RTS_PIN) */
 352:Generated_Source\PSoC4/UART_UART.c **** #endif /* (UART_SCB_MODE_UNCONFIG_CONST_CFG) */
 353:Generated_Source\PSoC4/UART_UART.c **** 
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccR7UNHp.s 			page 10


 354:Generated_Source\PSoC4/UART_UART.c ****     /* Restore TX interrupt sources. */
 355:Generated_Source\PSoC4/UART_UART.c ****     UART_SetTxInterruptMode(UART_IntrTxMask);
 161              		.loc 1 355 0
 162 0014 044B     		ldr	r3, .L5+4
 163 0016 054A     		ldr	r2, .L5+8
 164 0018 1288     		ldrh	r2, [r2]
 165 001a 1A60     		str	r2, [r3]
 356:Generated_Source\PSoC4/UART_UART.c **** }
 166              		.loc 1 356 0
 167 001c C046     		nop
 168 001e BD46     		mov	sp, r7
 169              		@ sp needed
 170 0020 80BD     		pop	{r7, pc}
 171              	.L6:
 172 0022 C046     		.align	2
 173              	.L5:
 174 0024 10000140 		.word	1073807376
 175 0028 880F0640 		.word	1074139016
 176 002c 00000000 		.word	UART_IntrTxMask
 177              		.cfi_endproc
 178              	.LFE1:
 179              		.size	UART_UartPostEnable, .-UART_UartPostEnable
 180              		.section	.text.UART_UartStop,"ax",%progbits
 181              		.align	2
 182              		.global	UART_UartStop
 183              		.code	16
 184              		.thumb_func
 185              		.type	UART_UartStop, %function
 186              	UART_UartStop:
 187              	.LFB2:
 357:Generated_Source\PSoC4/UART_UART.c **** 
 358:Generated_Source\PSoC4/UART_UART.c **** 
 359:Generated_Source\PSoC4/UART_UART.c **** /*******************************************************************************
 360:Generated_Source\PSoC4/UART_UART.c **** * Function Name: UART_UartStop
 361:Generated_Source\PSoC4/UART_UART.c **** ****************************************************************************//**
 362:Generated_Source\PSoC4/UART_UART.c **** *
 363:Generated_Source\PSoC4/UART_UART.c **** *  Changes the HSIOM settings for the UART output pins (TX and/or RTS) to keep
 364:Generated_Source\PSoC4/UART_UART.c **** *  them inactive after the block is disabled. The output pins are controlled by
 365:Generated_Source\PSoC4/UART_UART.c **** *  the GPIO data register. Also, the function disables the skip start feature
 366:Generated_Source\PSoC4/UART_UART.c **** *  to not cause it to trigger after the component is enabled.
 367:Generated_Source\PSoC4/UART_UART.c **** *
 368:Generated_Source\PSoC4/UART_UART.c **** *******************************************************************************/
 369:Generated_Source\PSoC4/UART_UART.c **** void UART_UartStop(void)
 370:Generated_Source\PSoC4/UART_UART.c **** {
 188              		.loc 1 370 0
 189              		.cfi_startproc
 190              		@ args = 0, pretend = 0, frame = 0
 191              		@ frame_needed = 1, uses_anonymous_args = 0
 192 0000 80B5     		push	{r7, lr}
 193              		.cfi_def_cfa_offset 8
 194              		.cfi_offset 7, -8
 195              		.cfi_offset 14, -4
 196 0002 00AF     		add	r7, sp, #0
 197              		.cfi_def_cfa_register 7
 371:Generated_Source\PSoC4/UART_UART.c **** #if(UART_SCB_MODE_UNCONFIG_CONST_CFG)
 372:Generated_Source\PSoC4/UART_UART.c ****     #if (UART_TX_SDA_MISO_PIN)
 373:Generated_Source\PSoC4/UART_UART.c ****         if (UART_CHECK_TX_SDA_MISO_PIN_USED)
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccR7UNHp.s 			page 11


 374:Generated_Source\PSoC4/UART_UART.c ****         {
 375:Generated_Source\PSoC4/UART_UART.c ****             /* Set GPIO to drive output pin */
 376:Generated_Source\PSoC4/UART_UART.c ****             UART_SET_HSIOM_SEL(UART_TX_SDA_MISO_HSIOM_REG, UART_TX_SDA_MISO_HSIOM_MASK,
 377:Generated_Source\PSoC4/UART_UART.c ****                                            UART_TX_SDA_MISO_HSIOM_POS, UART_TX_SDA_MISO_HSIOM_SEL_G
 378:Generated_Source\PSoC4/UART_UART.c ****         }
 379:Generated_Source\PSoC4/UART_UART.c ****     #endif /* (UART_TX_SDA_MISO_PIN_PIN) */
 380:Generated_Source\PSoC4/UART_UART.c **** 
 381:Generated_Source\PSoC4/UART_UART.c ****     #if !(UART_CY_SCBIP_V0 || UART_CY_SCBIP_V1)
 382:Generated_Source\PSoC4/UART_UART.c ****         #if (UART_SS0_PIN)
 383:Generated_Source\PSoC4/UART_UART.c ****             if (UART_CHECK_SS0_PIN_USED)
 384:Generated_Source\PSoC4/UART_UART.c ****             {
 385:Generated_Source\PSoC4/UART_UART.c ****                 /* Set output pin state after block is disabled */
 386:Generated_Source\PSoC4/UART_UART.c ****                 UART_spi_ss0_Write(UART_GET_UART_RTS_INACTIVE);
 387:Generated_Source\PSoC4/UART_UART.c **** 
 388:Generated_Source\PSoC4/UART_UART.c ****                 /* Set GPIO to drive output pin */
 389:Generated_Source\PSoC4/UART_UART.c ****                 UART_SET_HSIOM_SEL(UART_SS0_HSIOM_REG, UART_SS0_HSIOM_MASK,
 390:Generated_Source\PSoC4/UART_UART.c ****                                                UART_SS0_HSIOM_POS, UART_SS0_HSIOM_SEL_GPIO);
 391:Generated_Source\PSoC4/UART_UART.c ****             }
 392:Generated_Source\PSoC4/UART_UART.c ****         #endif /* (UART_SS0_PIN) */
 393:Generated_Source\PSoC4/UART_UART.c ****     #endif /* !(UART_CY_SCBIP_V0 || UART_CY_SCBIP_V1) */
 394:Generated_Source\PSoC4/UART_UART.c **** 
 395:Generated_Source\PSoC4/UART_UART.c **** #else
 396:Generated_Source\PSoC4/UART_UART.c ****     #if (UART_UART_TX_PIN)
 397:Generated_Source\PSoC4/UART_UART.c ****         /* Set GPIO to drive output pin */
 398:Generated_Source\PSoC4/UART_UART.c ****         UART_SET_HSIOM_SEL(UART_TX_HSIOM_REG, UART_TX_HSIOM_MASK,
 198              		.loc 1 398 0
 199 0004 084B     		ldr	r3, .L8
 200 0006 084A     		ldr	r2, .L8
 201 0008 1268     		ldr	r2, [r2]
 202 000a F021     		movs	r1, #240
 203 000c 8A43     		bics	r2, r1
 204 000e 1A60     		str	r2, [r3]
 399:Generated_Source\PSoC4/UART_UART.c ****                                        UART_TX_HSIOM_POS, UART_TX_HSIOM_SEL_GPIO);
 400:Generated_Source\PSoC4/UART_UART.c ****     #endif /* (UART_UART_TX_PIN) */
 401:Generated_Source\PSoC4/UART_UART.c **** 
 402:Generated_Source\PSoC4/UART_UART.c ****     #if (UART_UART_RTS_PIN)
 403:Generated_Source\PSoC4/UART_UART.c ****         /* Set output pin state after block is disabled */
 404:Generated_Source\PSoC4/UART_UART.c ****         UART_rts_Write(UART_GET_UART_RTS_INACTIVE);
 405:Generated_Source\PSoC4/UART_UART.c **** 
 406:Generated_Source\PSoC4/UART_UART.c ****         /* Set GPIO to drive output pin */
 407:Generated_Source\PSoC4/UART_UART.c ****         UART_SET_HSIOM_SEL(UART_RTS_HSIOM_REG, UART_RTS_HSIOM_MASK,
 408:Generated_Source\PSoC4/UART_UART.c ****                                        UART_RTS_HSIOM_POS, UART_RTS_HSIOM_SEL_GPIO);
 409:Generated_Source\PSoC4/UART_UART.c ****     #endif /* (UART_UART_RTS_PIN) */
 410:Generated_Source\PSoC4/UART_UART.c **** 
 411:Generated_Source\PSoC4/UART_UART.c **** #endif /* (UART_SCB_MODE_UNCONFIG_CONST_CFG) */
 412:Generated_Source\PSoC4/UART_UART.c **** 
 413:Generated_Source\PSoC4/UART_UART.c **** #if (UART_UART_WAKE_ENABLE_CONST)
 414:Generated_Source\PSoC4/UART_UART.c ****     /* Disable skip start feature used for wakeup */
 415:Generated_Source\PSoC4/UART_UART.c ****     UART_UART_RX_CTRL_REG &= (uint32) ~UART_UART_RX_CTRL_SKIP_START;
 416:Generated_Source\PSoC4/UART_UART.c **** #endif /* (UART_UART_WAKE_ENABLE_CONST) */
 417:Generated_Source\PSoC4/UART_UART.c **** 
 418:Generated_Source\PSoC4/UART_UART.c ****     /* Store TX interrupt sources (exclude level triggered). */
 419:Generated_Source\PSoC4/UART_UART.c ****     UART_IntrTxMask = LO16(UART_GetTxInterruptMode() & UART_INTR_UART_TX_RESTORE);
 205              		.loc 1 419 0
 206 0010 064B     		ldr	r3, .L8+4
 207 0012 1B68     		ldr	r3, [r3]
 208 0014 9AB2     		uxth	r2, r3
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccR7UNHp.s 			page 12


 209 0016 E423     		movs	r3, #228
 210 0018 DB00     		lsls	r3, r3, #3
 211 001a 1340     		ands	r3, r2
 212 001c 9AB2     		uxth	r2, r3
 213 001e 044B     		ldr	r3, .L8+8
 214 0020 1A80     		strh	r2, [r3]
 420:Generated_Source\PSoC4/UART_UART.c **** }
 215              		.loc 1 420 0
 216 0022 C046     		nop
 217 0024 BD46     		mov	sp, r7
 218              		@ sp needed
 219 0026 80BD     		pop	{r7, pc}
 220              	.L9:
 221              		.align	2
 222              	.L8:
 223 0028 10000140 		.word	1073807376
 224 002c 880F0640 		.word	1074139016
 225 0030 00000000 		.word	UART_IntrTxMask
 226              		.cfi_endproc
 227              	.LFE2:
 228              		.size	UART_UartStop, .-UART_UartStop
 229              		.section	.text.UART_UartSetRxAddress,"ax",%progbits
 230              		.align	2
 231              		.global	UART_UartSetRxAddress
 232              		.code	16
 233              		.thumb_func
 234              		.type	UART_UartSetRxAddress, %function
 235              	UART_UartSetRxAddress:
 236              	.LFB3:
 421:Generated_Source\PSoC4/UART_UART.c **** 
 422:Generated_Source\PSoC4/UART_UART.c **** 
 423:Generated_Source\PSoC4/UART_UART.c **** /*******************************************************************************
 424:Generated_Source\PSoC4/UART_UART.c **** * Function Name: UART_UartSetRxAddress
 425:Generated_Source\PSoC4/UART_UART.c **** ****************************************************************************//**
 426:Generated_Source\PSoC4/UART_UART.c **** *
 427:Generated_Source\PSoC4/UART_UART.c **** *  Sets the hardware detectable receiver address for the UART in the
 428:Generated_Source\PSoC4/UART_UART.c **** *  Multiprocessor mode.
 429:Generated_Source\PSoC4/UART_UART.c **** *
 430:Generated_Source\PSoC4/UART_UART.c **** *  \param address: Address for hardware address detection.
 431:Generated_Source\PSoC4/UART_UART.c **** *
 432:Generated_Source\PSoC4/UART_UART.c **** *******************************************************************************/
 433:Generated_Source\PSoC4/UART_UART.c **** void UART_UartSetRxAddress(uint32 address)
 434:Generated_Source\PSoC4/UART_UART.c **** {
 237              		.loc 1 434 0
 238              		.cfi_startproc
 239              		@ args = 0, pretend = 0, frame = 16
 240              		@ frame_needed = 1, uses_anonymous_args = 0
 241 0000 80B5     		push	{r7, lr}
 242              		.cfi_def_cfa_offset 8
 243              		.cfi_offset 7, -8
 244              		.cfi_offset 14, -4
 245 0002 84B0     		sub	sp, sp, #16
 246              		.cfi_def_cfa_offset 24
 247 0004 00AF     		add	r7, sp, #0
 248              		.cfi_def_cfa_register 7
 249 0006 7860     		str	r0, [r7, #4]
 435:Generated_Source\PSoC4/UART_UART.c ****      uint32 matchReg;
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccR7UNHp.s 			page 13


 436:Generated_Source\PSoC4/UART_UART.c **** 
 437:Generated_Source\PSoC4/UART_UART.c ****     matchReg = UART_RX_MATCH_REG;
 250              		.loc 1 437 0
 251 0008 094B     		ldr	r3, .L11
 252 000a 1B68     		ldr	r3, [r3]
 253 000c FB60     		str	r3, [r7, #12]
 438:Generated_Source\PSoC4/UART_UART.c **** 
 439:Generated_Source\PSoC4/UART_UART.c ****     matchReg &= ((uint32) ~UART_RX_MATCH_ADDR_MASK); /* Clear address bits */
 254              		.loc 1 439 0
 255 000e FB68     		ldr	r3, [r7, #12]
 256 0010 FF22     		movs	r2, #255
 257 0012 9343     		bics	r3, r2
 258 0014 FB60     		str	r3, [r7, #12]
 440:Generated_Source\PSoC4/UART_UART.c ****     matchReg |= ((uint32)  (address & UART_RX_MATCH_ADDR_MASK)); /* Set address  */
 259              		.loc 1 440 0
 260 0016 7B68     		ldr	r3, [r7, #4]
 261 0018 FF22     		movs	r2, #255
 262 001a 1340     		ands	r3, r2
 263 001c FA68     		ldr	r2, [r7, #12]
 264 001e 1343     		orrs	r3, r2
 265 0020 FB60     		str	r3, [r7, #12]
 441:Generated_Source\PSoC4/UART_UART.c **** 
 442:Generated_Source\PSoC4/UART_UART.c ****     UART_RX_MATCH_REG = matchReg;
 266              		.loc 1 442 0
 267 0022 034B     		ldr	r3, .L11
 268 0024 FA68     		ldr	r2, [r7, #12]
 269 0026 1A60     		str	r2, [r3]
 443:Generated_Source\PSoC4/UART_UART.c **** }
 270              		.loc 1 443 0
 271 0028 C046     		nop
 272 002a BD46     		mov	sp, r7
 273 002c 04B0     		add	sp, sp, #16
 274              		@ sp needed
 275 002e 80BD     		pop	{r7, pc}
 276              	.L12:
 277              		.align	2
 278              	.L11:
 279 0030 10030640 		.word	1074135824
 280              		.cfi_endproc
 281              	.LFE3:
 282              		.size	UART_UartSetRxAddress, .-UART_UartSetRxAddress
 283              		.section	.text.UART_UartSetRxAddressMask,"ax",%progbits
 284              		.align	2
 285              		.global	UART_UartSetRxAddressMask
 286              		.code	16
 287              		.thumb_func
 288              		.type	UART_UartSetRxAddressMask, %function
 289              	UART_UartSetRxAddressMask:
 290              	.LFB4:
 444:Generated_Source\PSoC4/UART_UART.c **** 
 445:Generated_Source\PSoC4/UART_UART.c **** 
 446:Generated_Source\PSoC4/UART_UART.c **** /*******************************************************************************
 447:Generated_Source\PSoC4/UART_UART.c **** * Function Name: UART_UartSetRxAddressMask
 448:Generated_Source\PSoC4/UART_UART.c **** ****************************************************************************//**
 449:Generated_Source\PSoC4/UART_UART.c **** *
 450:Generated_Source\PSoC4/UART_UART.c **** *  Sets the hardware address mask for the UART in the Multiprocessor mode.
 451:Generated_Source\PSoC4/UART_UART.c **** *
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccR7UNHp.s 			page 14


 452:Generated_Source\PSoC4/UART_UART.c **** *  \param addressMask: Address mask.
 453:Generated_Source\PSoC4/UART_UART.c **** *   - Bit value 0 – excludes bit from address comparison.
 454:Generated_Source\PSoC4/UART_UART.c **** *   - Bit value 1 – the bit needs to match with the corresponding bit
 455:Generated_Source\PSoC4/UART_UART.c **** *     of the address.
 456:Generated_Source\PSoC4/UART_UART.c **** *
 457:Generated_Source\PSoC4/UART_UART.c **** *******************************************************************************/
 458:Generated_Source\PSoC4/UART_UART.c **** void UART_UartSetRxAddressMask(uint32 addressMask)
 459:Generated_Source\PSoC4/UART_UART.c **** {
 291              		.loc 1 459 0
 292              		.cfi_startproc
 293              		@ args = 0, pretend = 0, frame = 16
 294              		@ frame_needed = 1, uses_anonymous_args = 0
 295 0000 80B5     		push	{r7, lr}
 296              		.cfi_def_cfa_offset 8
 297              		.cfi_offset 7, -8
 298              		.cfi_offset 14, -4
 299 0002 84B0     		sub	sp, sp, #16
 300              		.cfi_def_cfa_offset 24
 301 0004 00AF     		add	r7, sp, #0
 302              		.cfi_def_cfa_register 7
 303 0006 7860     		str	r0, [r7, #4]
 460:Generated_Source\PSoC4/UART_UART.c ****     uint32 matchReg;
 461:Generated_Source\PSoC4/UART_UART.c **** 
 462:Generated_Source\PSoC4/UART_UART.c ****     matchReg = UART_RX_MATCH_REG;
 304              		.loc 1 462 0
 305 0008 094B     		ldr	r3, .L14
 306 000a 1B68     		ldr	r3, [r3]
 307 000c FB60     		str	r3, [r7, #12]
 463:Generated_Source\PSoC4/UART_UART.c **** 
 464:Generated_Source\PSoC4/UART_UART.c ****     matchReg &= ((uint32) ~UART_RX_MATCH_MASK_MASK); /* Clear address mask bits */
 308              		.loc 1 464 0
 309 000e FB68     		ldr	r3, [r7, #12]
 310 0010 084A     		ldr	r2, .L14+4
 311 0012 1340     		ands	r3, r2
 312 0014 FB60     		str	r3, [r7, #12]
 465:Generated_Source\PSoC4/UART_UART.c ****     matchReg |= ((uint32) (addressMask << UART_RX_MATCH_MASK_POS));
 313              		.loc 1 465 0
 314 0016 7B68     		ldr	r3, [r7, #4]
 315 0018 1B04     		lsls	r3, r3, #16
 316 001a FA68     		ldr	r2, [r7, #12]
 317 001c 1343     		orrs	r3, r2
 318 001e FB60     		str	r3, [r7, #12]
 466:Generated_Source\PSoC4/UART_UART.c **** 
 467:Generated_Source\PSoC4/UART_UART.c ****     UART_RX_MATCH_REG = matchReg;
 319              		.loc 1 467 0
 320 0020 034B     		ldr	r3, .L14
 321 0022 FA68     		ldr	r2, [r7, #12]
 322 0024 1A60     		str	r2, [r3]
 468:Generated_Source\PSoC4/UART_UART.c **** }
 323              		.loc 1 468 0
 324 0026 C046     		nop
 325 0028 BD46     		mov	sp, r7
 326 002a 04B0     		add	sp, sp, #16
 327              		@ sp needed
 328 002c 80BD     		pop	{r7, pc}
 329              	.L15:
 330 002e C046     		.align	2
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccR7UNHp.s 			page 15


 331              	.L14:
 332 0030 10030640 		.word	1074135824
 333 0034 FFFF00FF 		.word	-16711681
 334              		.cfi_endproc
 335              	.LFE4:
 336              		.size	UART_UartSetRxAddressMask, .-UART_UartSetRxAddressMask
 337              		.section	.text.UART_UartPutString,"ax",%progbits
 338              		.align	2
 339              		.global	UART_UartPutString
 340              		.code	16
 341              		.thumb_func
 342              		.type	UART_UartPutString, %function
 343              	UART_UartPutString:
 344              	.LFB5:
 469:Generated_Source\PSoC4/UART_UART.c **** 
 470:Generated_Source\PSoC4/UART_UART.c **** 
 471:Generated_Source\PSoC4/UART_UART.c **** #if(UART_UART_RX_DIRECTION)
 472:Generated_Source\PSoC4/UART_UART.c ****     /*******************************************************************************
 473:Generated_Source\PSoC4/UART_UART.c ****     * Function Name: UART_UartGetChar
 474:Generated_Source\PSoC4/UART_UART.c ****     ****************************************************************************//**
 475:Generated_Source\PSoC4/UART_UART.c ****     *
 476:Generated_Source\PSoC4/UART_UART.c ****     *  Retrieves next data element from receive buffer.
 477:Generated_Source\PSoC4/UART_UART.c ****     *  This function is designed for ASCII characters and returns a char where
 478:Generated_Source\PSoC4/UART_UART.c ****     *  1 to 255 are valid characters and 0 indicates an error occurred or no data
 479:Generated_Source\PSoC4/UART_UART.c ****     *  is present.
 480:Generated_Source\PSoC4/UART_UART.c ****     *  - RX software buffer is disabled: Returns data element retrieved from RX
 481:Generated_Source\PSoC4/UART_UART.c ****     *    FIFO.
 482:Generated_Source\PSoC4/UART_UART.c ****     *  - RX software buffer is enabled: Returns data element from the software
 483:Generated_Source\PSoC4/UART_UART.c ****     *    receive buffer.
 484:Generated_Source\PSoC4/UART_UART.c ****     *
 485:Generated_Source\PSoC4/UART_UART.c ****     *  \return
 486:Generated_Source\PSoC4/UART_UART.c ****     *   Next data element from the receive buffer. ASCII character values from
 487:Generated_Source\PSoC4/UART_UART.c ****     *   1 to 255 are valid. A returned zero signifies an error condition or no
 488:Generated_Source\PSoC4/UART_UART.c ****     *   data available.
 489:Generated_Source\PSoC4/UART_UART.c ****     *
 490:Generated_Source\PSoC4/UART_UART.c ****     *  \sideeffect
 491:Generated_Source\PSoC4/UART_UART.c ****     *   The errors bits may not correspond with reading characters due to
 492:Generated_Source\PSoC4/UART_UART.c ****     *   RX FIFO and software buffer usage.
 493:Generated_Source\PSoC4/UART_UART.c ****     *   RX software buffer is enabled: The internal software buffer overflow
 494:Generated_Source\PSoC4/UART_UART.c ****     *   is not treated as an error condition.
 495:Generated_Source\PSoC4/UART_UART.c ****     *   Check UART_rxBufferOverflow to capture that error condition.
 496:Generated_Source\PSoC4/UART_UART.c ****     *
 497:Generated_Source\PSoC4/UART_UART.c ****     *******************************************************************************/
 498:Generated_Source\PSoC4/UART_UART.c ****     uint32 UART_UartGetChar(void)
 499:Generated_Source\PSoC4/UART_UART.c ****     {
 500:Generated_Source\PSoC4/UART_UART.c ****         uint32 rxData = 0u;
 501:Generated_Source\PSoC4/UART_UART.c **** 
 502:Generated_Source\PSoC4/UART_UART.c ****         /* Reads data only if there is data to read */
 503:Generated_Source\PSoC4/UART_UART.c ****         if (0u != UART_SpiUartGetRxBufferSize())
 504:Generated_Source\PSoC4/UART_UART.c ****         {
 505:Generated_Source\PSoC4/UART_UART.c ****             rxData = UART_SpiUartReadRxData();
 506:Generated_Source\PSoC4/UART_UART.c ****         }
 507:Generated_Source\PSoC4/UART_UART.c **** 
 508:Generated_Source\PSoC4/UART_UART.c ****         if (UART_CHECK_INTR_RX(UART_INTR_RX_ERR))
 509:Generated_Source\PSoC4/UART_UART.c ****         {
 510:Generated_Source\PSoC4/UART_UART.c ****             rxData = 0u; /* Error occurred: returns zero */
 511:Generated_Source\PSoC4/UART_UART.c ****             UART_ClearRxInterruptSource(UART_INTR_RX_ERR);
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccR7UNHp.s 			page 16


 512:Generated_Source\PSoC4/UART_UART.c ****         }
 513:Generated_Source\PSoC4/UART_UART.c **** 
 514:Generated_Source\PSoC4/UART_UART.c ****         return (rxData);
 515:Generated_Source\PSoC4/UART_UART.c ****     }
 516:Generated_Source\PSoC4/UART_UART.c **** 
 517:Generated_Source\PSoC4/UART_UART.c **** 
 518:Generated_Source\PSoC4/UART_UART.c ****     /*******************************************************************************
 519:Generated_Source\PSoC4/UART_UART.c ****     * Function Name: UART_UartGetByte
 520:Generated_Source\PSoC4/UART_UART.c ****     ****************************************************************************//**
 521:Generated_Source\PSoC4/UART_UART.c ****     *
 522:Generated_Source\PSoC4/UART_UART.c ****     *  Retrieves the next data element from the receive buffer, returns the
 523:Generated_Source\PSoC4/UART_UART.c ****     *  received byte and error condition.
 524:Generated_Source\PSoC4/UART_UART.c ****     *   - The RX software buffer is disabled: returns the data element retrieved
 525:Generated_Source\PSoC4/UART_UART.c ****     *     from the RX FIFO. Undefined data will be returned if the RX FIFO is
 526:Generated_Source\PSoC4/UART_UART.c ****     *     empty.
 527:Generated_Source\PSoC4/UART_UART.c ****     *   - The RX software buffer is enabled: returns data element from the
 528:Generated_Source\PSoC4/UART_UART.c ****     *     software receive buffer.
 529:Generated_Source\PSoC4/UART_UART.c ****     *
 530:Generated_Source\PSoC4/UART_UART.c ****     *  \return
 531:Generated_Source\PSoC4/UART_UART.c ****     *   Bits 7-0 contain the next data element from the receive buffer and
 532:Generated_Source\PSoC4/UART_UART.c ****     *   other bits contain the error condition.
 533:Generated_Source\PSoC4/UART_UART.c ****     *   - UART_UART_RX_OVERFLOW - Attempt to write to a full
 534:Generated_Source\PSoC4/UART_UART.c ****     *     receiver FIFO.
 535:Generated_Source\PSoC4/UART_UART.c ****     *   - UART_UART_RX_UNDERFLOW    Attempt to read from an empty
 536:Generated_Source\PSoC4/UART_UART.c ****     *     receiver FIFO.
 537:Generated_Source\PSoC4/UART_UART.c ****     *   - UART_UART_RX_FRAME_ERROR - UART framing error detected.
 538:Generated_Source\PSoC4/UART_UART.c ****     *   - UART_UART_RX_PARITY_ERROR - UART parity error detected.
 539:Generated_Source\PSoC4/UART_UART.c ****     *
 540:Generated_Source\PSoC4/UART_UART.c ****     *  \sideeffect
 541:Generated_Source\PSoC4/UART_UART.c ****     *   The errors bits may not correspond with reading characters due to
 542:Generated_Source\PSoC4/UART_UART.c ****     *   RX FIFO and software buffer usage.
 543:Generated_Source\PSoC4/UART_UART.c ****     *   RX software buffer is enabled: The internal software buffer overflow
 544:Generated_Source\PSoC4/UART_UART.c ****     *   is not treated as an error condition.
 545:Generated_Source\PSoC4/UART_UART.c ****     *   Check UART_rxBufferOverflow to capture that error condition.
 546:Generated_Source\PSoC4/UART_UART.c ****     *
 547:Generated_Source\PSoC4/UART_UART.c ****     *******************************************************************************/
 548:Generated_Source\PSoC4/UART_UART.c ****     uint32 UART_UartGetByte(void)
 549:Generated_Source\PSoC4/UART_UART.c ****     {
 550:Generated_Source\PSoC4/UART_UART.c ****         uint32 rxData;
 551:Generated_Source\PSoC4/UART_UART.c ****         uint32 tmpStatus;
 552:Generated_Source\PSoC4/UART_UART.c **** 
 553:Generated_Source\PSoC4/UART_UART.c ****         #if (UART_CHECK_RX_SW_BUFFER)
 554:Generated_Source\PSoC4/UART_UART.c ****         {
 555:Generated_Source\PSoC4/UART_UART.c ****             UART_DisableInt();
 556:Generated_Source\PSoC4/UART_UART.c ****         }
 557:Generated_Source\PSoC4/UART_UART.c ****         #endif
 558:Generated_Source\PSoC4/UART_UART.c **** 
 559:Generated_Source\PSoC4/UART_UART.c ****         if (0u != UART_SpiUartGetRxBufferSize())
 560:Generated_Source\PSoC4/UART_UART.c ****         {
 561:Generated_Source\PSoC4/UART_UART.c ****             /* Enables interrupt to receive more bytes: at least one byte is in
 562:Generated_Source\PSoC4/UART_UART.c ****             * buffer.
 563:Generated_Source\PSoC4/UART_UART.c ****             */
 564:Generated_Source\PSoC4/UART_UART.c ****             #if (UART_CHECK_RX_SW_BUFFER)
 565:Generated_Source\PSoC4/UART_UART.c ****             {
 566:Generated_Source\PSoC4/UART_UART.c ****                 UART_EnableInt();
 567:Generated_Source\PSoC4/UART_UART.c ****             }
 568:Generated_Source\PSoC4/UART_UART.c ****             #endif
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccR7UNHp.s 			page 17


 569:Generated_Source\PSoC4/UART_UART.c **** 
 570:Generated_Source\PSoC4/UART_UART.c ****             /* Get received byte */
 571:Generated_Source\PSoC4/UART_UART.c ****             rxData = UART_SpiUartReadRxData();
 572:Generated_Source\PSoC4/UART_UART.c ****         }
 573:Generated_Source\PSoC4/UART_UART.c ****         else
 574:Generated_Source\PSoC4/UART_UART.c ****         {
 575:Generated_Source\PSoC4/UART_UART.c ****             /* Reads a byte directly from RX FIFO: underflow is raised in the
 576:Generated_Source\PSoC4/UART_UART.c ****             * case of empty. Otherwise the first received byte will be read.
 577:Generated_Source\PSoC4/UART_UART.c ****             */
 578:Generated_Source\PSoC4/UART_UART.c ****             rxData = UART_RX_FIFO_RD_REG;
 579:Generated_Source\PSoC4/UART_UART.c **** 
 580:Generated_Source\PSoC4/UART_UART.c **** 
 581:Generated_Source\PSoC4/UART_UART.c ****             /* Enables interrupt to receive more bytes. */
 582:Generated_Source\PSoC4/UART_UART.c ****             #if (UART_CHECK_RX_SW_BUFFER)
 583:Generated_Source\PSoC4/UART_UART.c ****             {
 584:Generated_Source\PSoC4/UART_UART.c **** 
 585:Generated_Source\PSoC4/UART_UART.c ****                 /* The byte has been read from RX FIFO. Clear RX interrupt to
 586:Generated_Source\PSoC4/UART_UART.c ****                 * not involve interrupt handler when RX FIFO is empty.
 587:Generated_Source\PSoC4/UART_UART.c ****                 */
 588:Generated_Source\PSoC4/UART_UART.c ****                 UART_ClearRxInterruptSource(UART_INTR_RX_NOT_EMPTY);
 589:Generated_Source\PSoC4/UART_UART.c **** 
 590:Generated_Source\PSoC4/UART_UART.c ****                 UART_EnableInt();
 591:Generated_Source\PSoC4/UART_UART.c ****             }
 592:Generated_Source\PSoC4/UART_UART.c ****             #endif
 593:Generated_Source\PSoC4/UART_UART.c ****         }
 594:Generated_Source\PSoC4/UART_UART.c **** 
 595:Generated_Source\PSoC4/UART_UART.c ****         /* Get and clear RX error mask */
 596:Generated_Source\PSoC4/UART_UART.c ****         tmpStatus = (UART_GetRxInterruptSource() & UART_INTR_RX_ERR);
 597:Generated_Source\PSoC4/UART_UART.c ****         UART_ClearRxInterruptSource(UART_INTR_RX_ERR);
 598:Generated_Source\PSoC4/UART_UART.c **** 
 599:Generated_Source\PSoC4/UART_UART.c ****         /* Puts together data and error status:
 600:Generated_Source\PSoC4/UART_UART.c ****         * MP mode and accept address: 9th bit is set to notify mark.
 601:Generated_Source\PSoC4/UART_UART.c ****         */
 602:Generated_Source\PSoC4/UART_UART.c ****         rxData |= ((uint32) (tmpStatus << 8u));
 603:Generated_Source\PSoC4/UART_UART.c **** 
 604:Generated_Source\PSoC4/UART_UART.c ****         return (rxData);
 605:Generated_Source\PSoC4/UART_UART.c ****     }
 606:Generated_Source\PSoC4/UART_UART.c **** 
 607:Generated_Source\PSoC4/UART_UART.c **** 
 608:Generated_Source\PSoC4/UART_UART.c ****     #if !(UART_CY_SCBIP_V0 || UART_CY_SCBIP_V1)
 609:Generated_Source\PSoC4/UART_UART.c ****         /*******************************************************************************
 610:Generated_Source\PSoC4/UART_UART.c ****         * Function Name: UART_UartSetRtsPolarity
 611:Generated_Source\PSoC4/UART_UART.c ****         ****************************************************************************//**
 612:Generated_Source\PSoC4/UART_UART.c ****         *
 613:Generated_Source\PSoC4/UART_UART.c ****         *  Sets active polarity of RTS output signal.
 614:Generated_Source\PSoC4/UART_UART.c ****         *  Only available for PSoC 4100 BLE / PSoC 4200 BLE / PSoC 4100M / PSoC 4200M /
 615:Generated_Source\PSoC4/UART_UART.c ****         *  PSoC 4200L / PSoC 4000S / PSoC 4100S / PSoC Analog Coprocessor devices.
 616:Generated_Source\PSoC4/UART_UART.c ****         *
 617:Generated_Source\PSoC4/UART_UART.c ****         *  \param polarity: Active polarity of RTS output signal.
 618:Generated_Source\PSoC4/UART_UART.c ****         *   - UART_UART_RTS_ACTIVE_LOW  - RTS signal is active low.
 619:Generated_Source\PSoC4/UART_UART.c ****         *   - UART_UART_RTS_ACTIVE_HIGH - RTS signal is active high.
 620:Generated_Source\PSoC4/UART_UART.c ****         *
 621:Generated_Source\PSoC4/UART_UART.c ****         *******************************************************************************/
 622:Generated_Source\PSoC4/UART_UART.c ****         void UART_UartSetRtsPolarity(uint32 polarity)
 623:Generated_Source\PSoC4/UART_UART.c ****         {
 624:Generated_Source\PSoC4/UART_UART.c ****             if(0u != polarity)
 625:Generated_Source\PSoC4/UART_UART.c ****             {
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccR7UNHp.s 			page 18


 626:Generated_Source\PSoC4/UART_UART.c ****                 UART_UART_FLOW_CTRL_REG |= (uint32)  UART_UART_FLOW_CTRL_RTS_POLARITY;
 627:Generated_Source\PSoC4/UART_UART.c ****             }
 628:Generated_Source\PSoC4/UART_UART.c ****             else
 629:Generated_Source\PSoC4/UART_UART.c ****             {
 630:Generated_Source\PSoC4/UART_UART.c ****                 UART_UART_FLOW_CTRL_REG &= (uint32) ~UART_UART_FLOW_CTRL_RTS_POLARITY;
 631:Generated_Source\PSoC4/UART_UART.c ****             }
 632:Generated_Source\PSoC4/UART_UART.c ****         }
 633:Generated_Source\PSoC4/UART_UART.c **** 
 634:Generated_Source\PSoC4/UART_UART.c **** 
 635:Generated_Source\PSoC4/UART_UART.c ****         /*******************************************************************************
 636:Generated_Source\PSoC4/UART_UART.c ****         * Function Name: UART_UartSetRtsFifoLevel
 637:Generated_Source\PSoC4/UART_UART.c ****         ****************************************************************************//**
 638:Generated_Source\PSoC4/UART_UART.c ****         *
 639:Generated_Source\PSoC4/UART_UART.c ****         *  Sets level in the RX FIFO for RTS signal activation.
 640:Generated_Source\PSoC4/UART_UART.c ****         *  While the RX FIFO has fewer entries than the RX FIFO level the RTS signal
 641:Generated_Source\PSoC4/UART_UART.c ****         *  remains active, otherwise the RTS signal becomes inactive.
 642:Generated_Source\PSoC4/UART_UART.c ****         *  Only available for PSoC 4100 BLE / PSoC 4200 BLE / PSoC 4100M / PSoC 4200M /
 643:Generated_Source\PSoC4/UART_UART.c ****         *  PSoC 4200L / PSoC 4000S / PSoC 4100S / PSoC Analog Coprocessor devices.
 644:Generated_Source\PSoC4/UART_UART.c ****         *
 645:Generated_Source\PSoC4/UART_UART.c ****         *  \param level: Level in the RX FIFO for RTS signal activation.
 646:Generated_Source\PSoC4/UART_UART.c ****         *   The range of valid level values is between 0 and RX FIFO depth - 1.
 647:Generated_Source\PSoC4/UART_UART.c ****         *   Setting level value to 0 disables RTS signal activation.
 648:Generated_Source\PSoC4/UART_UART.c ****         *
 649:Generated_Source\PSoC4/UART_UART.c ****         *******************************************************************************/
 650:Generated_Source\PSoC4/UART_UART.c ****         void UART_UartSetRtsFifoLevel(uint32 level)
 651:Generated_Source\PSoC4/UART_UART.c ****         {
 652:Generated_Source\PSoC4/UART_UART.c ****             uint32 uartFlowCtrl;
 653:Generated_Source\PSoC4/UART_UART.c **** 
 654:Generated_Source\PSoC4/UART_UART.c ****             uartFlowCtrl = UART_UART_FLOW_CTRL_REG;
 655:Generated_Source\PSoC4/UART_UART.c **** 
 656:Generated_Source\PSoC4/UART_UART.c ****             uartFlowCtrl &= ((uint32) ~UART_UART_FLOW_CTRL_TRIGGER_LEVEL_MASK); /* Clear level mask
 657:Generated_Source\PSoC4/UART_UART.c ****             uartFlowCtrl |= ((uint32) (UART_UART_FLOW_CTRL_TRIGGER_LEVEL_MASK & level));
 658:Generated_Source\PSoC4/UART_UART.c **** 
 659:Generated_Source\PSoC4/UART_UART.c ****             UART_UART_FLOW_CTRL_REG = uartFlowCtrl;
 660:Generated_Source\PSoC4/UART_UART.c ****         }
 661:Generated_Source\PSoC4/UART_UART.c ****     #endif /* !(UART_CY_SCBIP_V0 || UART_CY_SCBIP_V1) */
 662:Generated_Source\PSoC4/UART_UART.c **** 
 663:Generated_Source\PSoC4/UART_UART.c **** #endif /* (UART_UART_RX_DIRECTION) */
 664:Generated_Source\PSoC4/UART_UART.c **** 
 665:Generated_Source\PSoC4/UART_UART.c **** 
 666:Generated_Source\PSoC4/UART_UART.c **** #if(UART_UART_TX_DIRECTION)
 667:Generated_Source\PSoC4/UART_UART.c ****     /*******************************************************************************
 668:Generated_Source\PSoC4/UART_UART.c ****     * Function Name: UART_UartPutString
 669:Generated_Source\PSoC4/UART_UART.c ****     ****************************************************************************//**
 670:Generated_Source\PSoC4/UART_UART.c ****     *
 671:Generated_Source\PSoC4/UART_UART.c ****     *  Places a NULL terminated string in the transmit buffer to be sent at the
 672:Generated_Source\PSoC4/UART_UART.c ****     *  next available bus time.
 673:Generated_Source\PSoC4/UART_UART.c ****     *  This function is blocking and waits until there is a space available to put
 674:Generated_Source\PSoC4/UART_UART.c ****     *  requested data in transmit buffer.
 675:Generated_Source\PSoC4/UART_UART.c ****     *
 676:Generated_Source\PSoC4/UART_UART.c ****     *  \param string: pointer to the null terminated string array to be placed in the
 677:Generated_Source\PSoC4/UART_UART.c ****     *   transmit buffer.
 678:Generated_Source\PSoC4/UART_UART.c ****     *
 679:Generated_Source\PSoC4/UART_UART.c ****     *******************************************************************************/
 680:Generated_Source\PSoC4/UART_UART.c ****     void UART_UartPutString(const char8 string[])
 681:Generated_Source\PSoC4/UART_UART.c ****     {
 345              		.loc 1 681 0
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccR7UNHp.s 			page 19


 346              		.cfi_startproc
 347              		@ args = 0, pretend = 0, frame = 16
 348              		@ frame_needed = 1, uses_anonymous_args = 0
 349 0000 80B5     		push	{r7, lr}
 350              		.cfi_def_cfa_offset 8
 351              		.cfi_offset 7, -8
 352              		.cfi_offset 14, -4
 353 0002 84B0     		sub	sp, sp, #16
 354              		.cfi_def_cfa_offset 24
 355 0004 00AF     		add	r7, sp, #0
 356              		.cfi_def_cfa_register 7
 357 0006 7860     		str	r0, [r7, #4]
 682:Generated_Source\PSoC4/UART_UART.c ****         uint32 bufIndex;
 683:Generated_Source\PSoC4/UART_UART.c **** 
 684:Generated_Source\PSoC4/UART_UART.c ****         bufIndex = 0u;
 358              		.loc 1 684 0
 359 0008 0023     		movs	r3, #0
 360 000a FB60     		str	r3, [r7, #12]
 685:Generated_Source\PSoC4/UART_UART.c **** 
 686:Generated_Source\PSoC4/UART_UART.c ****         /* Blocks the control flow until all data has been sent */
 687:Generated_Source\PSoC4/UART_UART.c ****         while(string[bufIndex] != ((char8) 0))
 361              		.loc 1 687 0
 362 000c 09E0     		b	.L17
 363              	.L18:
 688:Generated_Source\PSoC4/UART_UART.c ****         {
 689:Generated_Source\PSoC4/UART_UART.c ****             UART_UartPutChar((uint32) string[bufIndex]);
 364              		.loc 1 689 0
 365 000e 7A68     		ldr	r2, [r7, #4]
 366 0010 FB68     		ldr	r3, [r7, #12]
 367 0012 D318     		adds	r3, r2, r3
 368 0014 1B78     		ldrb	r3, [r3]
 369 0016 1800     		movs	r0, r3
 370 0018 FFF7FEFF 		bl	UART_SpiUartWriteTxData
 690:Generated_Source\PSoC4/UART_UART.c ****             bufIndex++;
 371              		.loc 1 690 0
 372 001c FB68     		ldr	r3, [r7, #12]
 373 001e 0133     		adds	r3, r3, #1
 374 0020 FB60     		str	r3, [r7, #12]
 375              	.L17:
 687:Generated_Source\PSoC4/UART_UART.c ****         {
 376              		.loc 1 687 0
 377 0022 7A68     		ldr	r2, [r7, #4]
 378 0024 FB68     		ldr	r3, [r7, #12]
 379 0026 D318     		adds	r3, r2, r3
 380 0028 1B78     		ldrb	r3, [r3]
 381 002a 002B     		cmp	r3, #0
 382 002c EFD1     		bne	.L18
 691:Generated_Source\PSoC4/UART_UART.c ****         }
 692:Generated_Source\PSoC4/UART_UART.c ****     }
 383              		.loc 1 692 0
 384 002e C046     		nop
 385 0030 BD46     		mov	sp, r7
 386 0032 04B0     		add	sp, sp, #16
 387              		@ sp needed
 388 0034 80BD     		pop	{r7, pc}
 389              		.cfi_endproc
 390              	.LFE5:
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccR7UNHp.s 			page 20


 391              		.size	UART_UartPutString, .-UART_UartPutString
 392 0036 C046     		.section	.text.UART_UartPutCRLF,"ax",%progbits
 393              		.align	2
 394              		.global	UART_UartPutCRLF
 395              		.code	16
 396              		.thumb_func
 397              		.type	UART_UartPutCRLF, %function
 398              	UART_UartPutCRLF:
 399              	.LFB6:
 693:Generated_Source\PSoC4/UART_UART.c **** 
 694:Generated_Source\PSoC4/UART_UART.c **** 
 695:Generated_Source\PSoC4/UART_UART.c ****     /*******************************************************************************
 696:Generated_Source\PSoC4/UART_UART.c ****     * Function Name: UART_UartPutCRLF
 697:Generated_Source\PSoC4/UART_UART.c ****     ****************************************************************************//**
 698:Generated_Source\PSoC4/UART_UART.c ****     *
 699:Generated_Source\PSoC4/UART_UART.c ****     *  Places byte of data followed by a carriage return (0x0D) and line feed
 700:Generated_Source\PSoC4/UART_UART.c ****     *  (0x0A) in the transmit buffer.
 701:Generated_Source\PSoC4/UART_UART.c ****     *  This function is blocking and waits until there is a space available to put
 702:Generated_Source\PSoC4/UART_UART.c ****     *  all requested data in transmit buffer.
 703:Generated_Source\PSoC4/UART_UART.c ****     *
 704:Generated_Source\PSoC4/UART_UART.c ****     *  \param txDataByte: the data to be transmitted.
 705:Generated_Source\PSoC4/UART_UART.c ****     *
 706:Generated_Source\PSoC4/UART_UART.c ****     *******************************************************************************/
 707:Generated_Source\PSoC4/UART_UART.c ****     void UART_UartPutCRLF(uint32 txDataByte)
 708:Generated_Source\PSoC4/UART_UART.c ****     {
 400              		.loc 1 708 0
 401              		.cfi_startproc
 402              		@ args = 0, pretend = 0, frame = 8
 403              		@ frame_needed = 1, uses_anonymous_args = 0
 404 0000 80B5     		push	{r7, lr}
 405              		.cfi_def_cfa_offset 8
 406              		.cfi_offset 7, -8
 407              		.cfi_offset 14, -4
 408 0002 82B0     		sub	sp, sp, #8
 409              		.cfi_def_cfa_offset 16
 410 0004 00AF     		add	r7, sp, #0
 411              		.cfi_def_cfa_register 7
 412 0006 7860     		str	r0, [r7, #4]
 709:Generated_Source\PSoC4/UART_UART.c ****         UART_UartPutChar(txDataByte);  /* Blocks control flow until all data has been sent */
 413              		.loc 1 709 0
 414 0008 7B68     		ldr	r3, [r7, #4]
 415 000a 1800     		movs	r0, r3
 416 000c FFF7FEFF 		bl	UART_SpiUartWriteTxData
 710:Generated_Source\PSoC4/UART_UART.c ****         UART_UartPutChar(0x0Du);       /* Blocks control flow until all data has been sent */
 417              		.loc 1 710 0
 418 0010 0D20     		movs	r0, #13
 419 0012 FFF7FEFF 		bl	UART_SpiUartWriteTxData
 711:Generated_Source\PSoC4/UART_UART.c ****         UART_UartPutChar(0x0Au);       /* Blocks control flow until all data has been sent */
 420              		.loc 1 711 0
 421 0016 0A20     		movs	r0, #10
 422 0018 FFF7FEFF 		bl	UART_SpiUartWriteTxData
 712:Generated_Source\PSoC4/UART_UART.c ****     }
 423              		.loc 1 712 0
 424 001c C046     		nop
 425 001e BD46     		mov	sp, r7
 426 0020 02B0     		add	sp, sp, #8
 427              		@ sp needed
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccR7UNHp.s 			page 21


 428 0022 80BD     		pop	{r7, pc}
 429              		.cfi_endproc
 430              	.LFE6:
 431              		.size	UART_UartPutCRLF, .-UART_UartPutCRLF
 432              		.section	.text.UART_UartSendBreakBlocking,"ax",%progbits
 433              		.align	2
 434              		.global	UART_UartSendBreakBlocking
 435              		.code	16
 436              		.thumb_func
 437              		.type	UART_UartSendBreakBlocking, %function
 438              	UART_UartSendBreakBlocking:
 439              	.LFB7:
 713:Generated_Source\PSoC4/UART_UART.c **** 
 714:Generated_Source\PSoC4/UART_UART.c **** 
 715:Generated_Source\PSoC4/UART_UART.c ****     #if !(UART_CY_SCBIP_V0 || UART_CY_SCBIP_V1)
 716:Generated_Source\PSoC4/UART_UART.c ****         /*******************************************************************************
 717:Generated_Source\PSoC4/UART_UART.c ****         * Function Name: UARTSCB_UartEnableCts
 718:Generated_Source\PSoC4/UART_UART.c ****         ****************************************************************************//**
 719:Generated_Source\PSoC4/UART_UART.c ****         *
 720:Generated_Source\PSoC4/UART_UART.c ****         *  Enables usage of CTS input signal by the UART transmitter.
 721:Generated_Source\PSoC4/UART_UART.c ****         *  Only available for PSoC 4100 BLE / PSoC 4200 BLE / PSoC 4100M / PSoC 4200M /
 722:Generated_Source\PSoC4/UART_UART.c ****         *  PSoC 4200L / PSoC 4000S / PSoC 4100S / PSoC Analog Coprocessor devices.
 723:Generated_Source\PSoC4/UART_UART.c ****         *
 724:Generated_Source\PSoC4/UART_UART.c ****         *******************************************************************************/
 725:Generated_Source\PSoC4/UART_UART.c ****         void UART_UartEnableCts(void)
 726:Generated_Source\PSoC4/UART_UART.c ****         {
 727:Generated_Source\PSoC4/UART_UART.c ****             UART_UART_FLOW_CTRL_REG |= (uint32)  UART_UART_FLOW_CTRL_CTS_ENABLE;
 728:Generated_Source\PSoC4/UART_UART.c ****         }
 729:Generated_Source\PSoC4/UART_UART.c **** 
 730:Generated_Source\PSoC4/UART_UART.c **** 
 731:Generated_Source\PSoC4/UART_UART.c ****         /*******************************************************************************
 732:Generated_Source\PSoC4/UART_UART.c ****         * Function Name: UART_UartDisableCts
 733:Generated_Source\PSoC4/UART_UART.c ****         ****************************************************************************//**
 734:Generated_Source\PSoC4/UART_UART.c ****         *
 735:Generated_Source\PSoC4/UART_UART.c ****         *  Disables usage of CTS input signal by the UART transmitter.
 736:Generated_Source\PSoC4/UART_UART.c ****         *  Only available for PSoC 4100 BLE / PSoC 4200 BLE / PSoC 4100M / PSoC 4200M /
 737:Generated_Source\PSoC4/UART_UART.c ****         *  PSoC 4200L / PSoC 4000S / PSoC 4100S / PSoC Analog Coprocessor devices.
 738:Generated_Source\PSoC4/UART_UART.c ****         *
 739:Generated_Source\PSoC4/UART_UART.c ****         *******************************************************************************/
 740:Generated_Source\PSoC4/UART_UART.c ****         void UART_UartDisableCts(void)
 741:Generated_Source\PSoC4/UART_UART.c ****         {
 742:Generated_Source\PSoC4/UART_UART.c ****             UART_UART_FLOW_CTRL_REG &= (uint32) ~UART_UART_FLOW_CTRL_CTS_ENABLE;
 743:Generated_Source\PSoC4/UART_UART.c ****         }
 744:Generated_Source\PSoC4/UART_UART.c **** 
 745:Generated_Source\PSoC4/UART_UART.c **** 
 746:Generated_Source\PSoC4/UART_UART.c ****         /*******************************************************************************
 747:Generated_Source\PSoC4/UART_UART.c ****         * Function Name: UART_UartSetCtsPolarity
 748:Generated_Source\PSoC4/UART_UART.c ****         ****************************************************************************//**
 749:Generated_Source\PSoC4/UART_UART.c ****         *
 750:Generated_Source\PSoC4/UART_UART.c ****         *  Sets active polarity of CTS input signal.
 751:Generated_Source\PSoC4/UART_UART.c ****         *  Only available for PSoC 4100 BLE / PSoC 4200 BLE / PSoC 4100M / PSoC 4200M /
 752:Generated_Source\PSoC4/UART_UART.c ****         *  PSoC 4200L / PSoC 4000S / PSoC 4100S / PSoC Analog Coprocessor devices.
 753:Generated_Source\PSoC4/UART_UART.c ****         *
 754:Generated_Source\PSoC4/UART_UART.c ****         * \param
 755:Generated_Source\PSoC4/UART_UART.c ****         * polarity: Active polarity of CTS output signal.
 756:Generated_Source\PSoC4/UART_UART.c ****         *   - UART_UART_CTS_ACTIVE_LOW  - CTS signal is active low.
 757:Generated_Source\PSoC4/UART_UART.c ****         *   - UART_UART_CTS_ACTIVE_HIGH - CTS signal is active high.
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccR7UNHp.s 			page 22


 758:Generated_Source\PSoC4/UART_UART.c ****         *
 759:Generated_Source\PSoC4/UART_UART.c ****         *******************************************************************************/
 760:Generated_Source\PSoC4/UART_UART.c ****         void UART_UartSetCtsPolarity(uint32 polarity)
 761:Generated_Source\PSoC4/UART_UART.c ****         {
 762:Generated_Source\PSoC4/UART_UART.c ****             if (0u != polarity)
 763:Generated_Source\PSoC4/UART_UART.c ****             {
 764:Generated_Source\PSoC4/UART_UART.c ****                 UART_UART_FLOW_CTRL_REG |= (uint32)  UART_UART_FLOW_CTRL_CTS_POLARITY;
 765:Generated_Source\PSoC4/UART_UART.c ****             }
 766:Generated_Source\PSoC4/UART_UART.c ****             else
 767:Generated_Source\PSoC4/UART_UART.c ****             {
 768:Generated_Source\PSoC4/UART_UART.c ****                 UART_UART_FLOW_CTRL_REG &= (uint32) ~UART_UART_FLOW_CTRL_CTS_POLARITY;
 769:Generated_Source\PSoC4/UART_UART.c ****             }
 770:Generated_Source\PSoC4/UART_UART.c ****         }
 771:Generated_Source\PSoC4/UART_UART.c ****     #endif /* !(UART_CY_SCBIP_V0 || UART_CY_SCBIP_V1) */
 772:Generated_Source\PSoC4/UART_UART.c **** 
 773:Generated_Source\PSoC4/UART_UART.c **** 
 774:Generated_Source\PSoC4/UART_UART.c ****     /*******************************************************************************
 775:Generated_Source\PSoC4/UART_UART.c ****     * Function Name: UART_UartSendBreakBlocking
 776:Generated_Source\PSoC4/UART_UART.c ****     ****************************************************************************//**
 777:Generated_Source\PSoC4/UART_UART.c ****     *
 778:Generated_Source\PSoC4/UART_UART.c ****     * Sends a break condition (logic low) of specified width on UART TX line.
 779:Generated_Source\PSoC4/UART_UART.c ****     * Blocks until break is completed. Only call this function when UART TX FIFO
 780:Generated_Source\PSoC4/UART_UART.c ****     * and shifter are empty.
 781:Generated_Source\PSoC4/UART_UART.c ****     *
 782:Generated_Source\PSoC4/UART_UART.c ****     * \param breakWidth
 783:Generated_Source\PSoC4/UART_UART.c ****     * Width of break condition. Valid range is 4 to 16 bits.
 784:Generated_Source\PSoC4/UART_UART.c ****     *
 785:Generated_Source\PSoC4/UART_UART.c ****     * \note
 786:Generated_Source\PSoC4/UART_UART.c ****     * Before sending break all UART TX interrupt sources are disabled. The state
 787:Generated_Source\PSoC4/UART_UART.c ****     * of UART TX interrupt sources is restored before function returns.
 788:Generated_Source\PSoC4/UART_UART.c ****     *
 789:Generated_Source\PSoC4/UART_UART.c ****     * \sideeffect
 790:Generated_Source\PSoC4/UART_UART.c ****     * If this function is called while there is data in the TX FIFO or shifter that
 791:Generated_Source\PSoC4/UART_UART.c ****     * data will be shifted out in packets the size of breakWidth.
 792:Generated_Source\PSoC4/UART_UART.c ****     *
 793:Generated_Source\PSoC4/UART_UART.c ****     *******************************************************************************/
 794:Generated_Source\PSoC4/UART_UART.c ****     void UART_UartSendBreakBlocking(uint32 breakWidth)
 795:Generated_Source\PSoC4/UART_UART.c ****     {
 440              		.loc 1 795 0
 441              		.cfi_startproc
 442              		@ args = 0, pretend = 0, frame = 16
 443              		@ frame_needed = 1, uses_anonymous_args = 0
 444 0000 80B5     		push	{r7, lr}
 445              		.cfi_def_cfa_offset 8
 446              		.cfi_offset 7, -8
 447              		.cfi_offset 14, -4
 448 0002 84B0     		sub	sp, sp, #16
 449              		.cfi_def_cfa_offset 24
 450 0004 00AF     		add	r7, sp, #0
 451              		.cfi_def_cfa_register 7
 452 0006 7860     		str	r0, [r7, #4]
 796:Generated_Source\PSoC4/UART_UART.c ****         uint32 txCtrlReg;
 797:Generated_Source\PSoC4/UART_UART.c ****         uint32 txIntrReg;
 798:Generated_Source\PSoC4/UART_UART.c **** 
 799:Generated_Source\PSoC4/UART_UART.c ****         /* Disable all UART TX interrupt source and clear UART TX Done history */
 800:Generated_Source\PSoC4/UART_UART.c ****         txIntrReg = UART_GetTxInterruptMode();
 453              		.loc 1 800 0
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccR7UNHp.s 			page 23


 454 0008 174B     		ldr	r3, .L22
 455 000a 1B68     		ldr	r3, [r3]
 456 000c FB60     		str	r3, [r7, #12]
 801:Generated_Source\PSoC4/UART_UART.c ****         UART_SetTxInterruptMode(0u);
 457              		.loc 1 801 0
 458 000e 164B     		ldr	r3, .L22
 459 0010 0022     		movs	r2, #0
 460 0012 1A60     		str	r2, [r3]
 802:Generated_Source\PSoC4/UART_UART.c ****         UART_ClearTxInterruptSource(UART_INTR_TX_UART_DONE);
 461              		.loc 1 802 0
 462 0014 154B     		ldr	r3, .L22+4
 463 0016 8022     		movs	r2, #128
 464 0018 9200     		lsls	r2, r2, #2
 465 001a 1A60     		str	r2, [r3]
 803:Generated_Source\PSoC4/UART_UART.c **** 
 804:Generated_Source\PSoC4/UART_UART.c ****         /* Store TX CTRL configuration */
 805:Generated_Source\PSoC4/UART_UART.c ****         txCtrlReg = UART_TX_CTRL_REG;
 466              		.loc 1 805 0
 467 001c 144B     		ldr	r3, .L22+8
 468 001e 1B68     		ldr	r3, [r3]
 469 0020 BB60     		str	r3, [r7, #8]
 806:Generated_Source\PSoC4/UART_UART.c **** 
 807:Generated_Source\PSoC4/UART_UART.c ****         /* Set break width */
 808:Generated_Source\PSoC4/UART_UART.c ****         UART_TX_CTRL_REG = (UART_TX_CTRL_REG & (uint32) ~UART_TX_CTRL_DATA_WIDTH_MASK) |
 470              		.loc 1 808 0
 471 0022 134B     		ldr	r3, .L22+8
 472 0024 124A     		ldr	r2, .L22+8
 473 0026 1268     		ldr	r2, [r2]
 474 0028 0F21     		movs	r1, #15
 475 002a 8A43     		bics	r2, r1
 476 002c 1100     		movs	r1, r2
 809:Generated_Source\PSoC4/UART_UART.c ****                                         UART_GET_TX_CTRL_DATA_WIDTH(breakWidth);
 477              		.loc 1 809 0
 478 002e 7A68     		ldr	r2, [r7, #4]
 479 0030 013A     		subs	r2, r2, #1
 480 0032 0F20     		movs	r0, #15
 481 0034 0240     		ands	r2, r0
 808:Generated_Source\PSoC4/UART_UART.c ****                                         UART_GET_TX_CTRL_DATA_WIDTH(breakWidth);
 482              		.loc 1 808 0
 483 0036 0A43     		orrs	r2, r1
 484 0038 1A60     		str	r2, [r3]
 810:Generated_Source\PSoC4/UART_UART.c **** 
 811:Generated_Source\PSoC4/UART_UART.c ****         /* Generate break */
 812:Generated_Source\PSoC4/UART_UART.c ****         UART_TX_FIFO_WR_REG = 0u;
 485              		.loc 1 812 0
 486 003a 0E4B     		ldr	r3, .L22+12
 487 003c 0022     		movs	r2, #0
 488 003e 1A60     		str	r2, [r3]
 813:Generated_Source\PSoC4/UART_UART.c **** 
 814:Generated_Source\PSoC4/UART_UART.c ****         /* Wait for break completion */
 815:Generated_Source\PSoC4/UART_UART.c ****         while (0u == (UART_GetTxInterruptSource() & UART_INTR_TX_UART_DONE))
 489              		.loc 1 815 0
 490 0040 C046     		nop
 491              	.L21:
 492              		.loc 1 815 0 is_stmt 0 discriminator 1
 493 0042 0A4B     		ldr	r3, .L22+4
 494 0044 1A68     		ldr	r2, [r3]
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccR7UNHp.s 			page 24


 495 0046 8023     		movs	r3, #128
 496 0048 9B00     		lsls	r3, r3, #2
 497 004a 1340     		ands	r3, r2
 498 004c F9D0     		beq	.L21
 816:Generated_Source\PSoC4/UART_UART.c ****         {
 817:Generated_Source\PSoC4/UART_UART.c ****         }
 818:Generated_Source\PSoC4/UART_UART.c **** 
 819:Generated_Source\PSoC4/UART_UART.c ****         /* Clear all UART TX interrupt sources to  */
 820:Generated_Source\PSoC4/UART_UART.c ****         UART_ClearTxInterruptSource(UART_INTR_TX_ALL);
 499              		.loc 1 820 0 is_stmt 1
 500 004e 074B     		ldr	r3, .L22+4
 501 0050 094A     		ldr	r2, .L22+16
 502 0052 1A60     		str	r2, [r3]
 821:Generated_Source\PSoC4/UART_UART.c **** 
 822:Generated_Source\PSoC4/UART_UART.c ****         /* Restore TX interrupt sources and data width */
 823:Generated_Source\PSoC4/UART_UART.c ****         UART_TX_CTRL_REG = txCtrlReg;
 503              		.loc 1 823 0
 504 0054 064B     		ldr	r3, .L22+8
 505 0056 BA68     		ldr	r2, [r7, #8]
 506 0058 1A60     		str	r2, [r3]
 824:Generated_Source\PSoC4/UART_UART.c ****         UART_SetTxInterruptMode(txIntrReg);
 507              		.loc 1 824 0
 508 005a 034B     		ldr	r3, .L22
 509 005c FA68     		ldr	r2, [r7, #12]
 510 005e 1A60     		str	r2, [r3]
 825:Generated_Source\PSoC4/UART_UART.c ****     }
 511              		.loc 1 825 0
 512 0060 C046     		nop
 513 0062 BD46     		mov	sp, r7
 514 0064 04B0     		add	sp, sp, #16
 515              		@ sp needed
 516 0066 80BD     		pop	{r7, pc}
 517              	.L23:
 518              		.align	2
 519              	.L22:
 520 0068 880F0640 		.word	1074139016
 521 006c 800F0640 		.word	1074139008
 522 0070 00020640 		.word	1074135552
 523 0074 40020640 		.word	1074135616
 524 0078 F3070000 		.word	2035
 525              		.cfi_endproc
 526              	.LFE7:
 527              		.size	UART_UartSendBreakBlocking, .-UART_UartSendBreakBlocking
 528              		.text
 529              	.Letext0:
 530              		.file 2 "Generated_Source\\PSoC4/cytypes.h"
 531              		.file 3 "Generated_Source\\PSoC4\\UART_PVT.h"
 532              		.section	.debug_info,"",%progbits
 533              	.Ldebug_info0:
 534 0000 14020000 		.4byte	0x214
 535 0004 0400     		.2byte	0x4
 536 0006 00000000 		.4byte	.Ldebug_abbrev0
 537 000a 04       		.byte	0x4
 538 000b 01       		.uleb128 0x1
 539 000c FA000000 		.4byte	.LASF35
 540 0010 0C       		.byte	0xc
 541 0011 A2020000 		.4byte	.LASF36
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccR7UNHp.s 			page 25


 542 0015 1B020000 		.4byte	.LASF37
 543 0019 00000000 		.4byte	.Ldebug_ranges0+0
 544 001d 00000000 		.4byte	0
 545 0021 00000000 		.4byte	.Ldebug_line0
 546 0025 02       		.uleb128 0x2
 547 0026 01       		.byte	0x1
 548 0027 06       		.byte	0x6
 549 0028 C5020000 		.4byte	.LASF0
 550 002c 02       		.uleb128 0x2
 551 002d 01       		.byte	0x1
 552 002e 08       		.byte	0x8
 553 002f 8E000000 		.4byte	.LASF1
 554 0033 02       		.uleb128 0x2
 555 0034 02       		.byte	0x2
 556 0035 05       		.byte	0x5
 557 0036 7A020000 		.4byte	.LASF2
 558 003a 02       		.uleb128 0x2
 559 003b 02       		.byte	0x2
 560 003c 07       		.byte	0x7
 561 003d D6000000 		.4byte	.LASF3
 562 0041 02       		.uleb128 0x2
 563 0042 04       		.byte	0x4
 564 0043 05       		.byte	0x5
 565 0044 84020000 		.4byte	.LASF4
 566 0048 02       		.uleb128 0x2
 567 0049 04       		.byte	0x4
 568 004a 07       		.byte	0x7
 569 004b B6000000 		.4byte	.LASF5
 570 004f 02       		.uleb128 0x2
 571 0050 08       		.byte	0x8
 572 0051 05       		.byte	0x5
 573 0052 00000000 		.4byte	.LASF6
 574 0056 02       		.uleb128 0x2
 575 0057 08       		.byte	0x8
 576 0058 07       		.byte	0x7
 577 0059 E2010000 		.4byte	.LASF7
 578 005d 03       		.uleb128 0x3
 579 005e 04       		.byte	0x4
 580 005f 05       		.byte	0x5
 581 0060 696E7400 		.ascii	"int\000"
 582 0064 02       		.uleb128 0x2
 583 0065 04       		.byte	0x4
 584 0066 07       		.byte	0x7
 585 0067 BF010000 		.4byte	.LASF8
 586 006b 04       		.uleb128 0x4
 587 006c B1010000 		.4byte	.LASF9
 588 0070 02       		.byte	0x2
 589 0071 E501     		.2byte	0x1e5
 590 0073 3A000000 		.4byte	0x3a
 591 0077 04       		.uleb128 0x4
 592 0078 B8010000 		.4byte	.LASF10
 593 007c 02       		.byte	0x2
 594 007d E601     		.2byte	0x1e6
 595 007f 48000000 		.4byte	0x48
 596 0083 02       		.uleb128 0x2
 597 0084 04       		.byte	0x4
 598 0085 04       		.byte	0x4
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccR7UNHp.s 			page 26


 599 0086 3E000000 		.4byte	.LASF11
 600 008a 02       		.uleb128 0x2
 601 008b 08       		.byte	0x8
 602 008c 04       		.byte	0x4
 603 008d 94010000 		.4byte	.LASF12
 604 0091 04       		.uleb128 0x4
 605 0092 9C000000 		.4byte	.LASF13
 606 0096 02       		.byte	0x2
 607 0097 F501     		.2byte	0x1f5
 608 0099 9D000000 		.4byte	0x9d
 609 009d 02       		.uleb128 0x2
 610 009e 01       		.byte	0x1
 611 009f 08       		.byte	0x8
 612 00a0 16020000 		.4byte	.LASF14
 613 00a4 04       		.uleb128 0x4
 614 00a5 0E000000 		.4byte	.LASF15
 615 00a9 02       		.byte	0x2
 616 00aa 9002     		.2byte	0x290
 617 00ac B0000000 		.4byte	0xb0
 618 00b0 05       		.uleb128 0x5
 619 00b1 77000000 		.4byte	0x77
 620 00b5 02       		.uleb128 0x2
 621 00b6 08       		.byte	0x8
 622 00b7 04       		.byte	0x4
 623 00b8 96020000 		.4byte	.LASF16
 624 00bc 02       		.uleb128 0x2
 625 00bd 04       		.byte	0x4
 626 00be 07       		.byte	0x7
 627 00bf 02020000 		.4byte	.LASF17
 628 00c3 06       		.uleb128 0x6
 629 00c4 CC010000 		.4byte	.LASF18
 630 00c8 01       		.byte	0x1
 631 00c9 F7       		.byte	0xf7
 632 00ca 00000000 		.4byte	.LFB0
 633 00ce BC000000 		.4byte	.LFE0-.LFB0
 634 00d2 01       		.uleb128 0x1
 635 00d3 9C       		.byte	0x9c
 636 00d4 07       		.uleb128 0x7
 637 00d5 A2000000 		.4byte	.LASF19
 638 00d9 01       		.byte	0x1
 639 00da 3D01     		.2byte	0x13d
 640 00dc 00000000 		.4byte	.LFB1
 641 00e0 30000000 		.4byte	.LFE1-.LFB1
 642 00e4 01       		.uleb128 0x1
 643 00e5 9C       		.byte	0x9c
 644 00e6 07       		.uleb128 0x7
 645 00e7 C8000000 		.4byte	.LASF20
 646 00eb 01       		.byte	0x1
 647 00ec 7101     		.2byte	0x171
 648 00ee 00000000 		.4byte	.LFB2
 649 00f2 34000000 		.4byte	.LFE2-.LFB2
 650 00f6 01       		.uleb128 0x1
 651 00f7 9C       		.byte	0x9c
 652 00f8 08       		.uleb128 0x8
 653 00f9 9B010000 		.4byte	.LASF21
 654 00fd 01       		.byte	0x1
 655 00fe B101     		.2byte	0x1b1
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccR7UNHp.s 			page 27


 656 0100 00000000 		.4byte	.LFB3
 657 0104 34000000 		.4byte	.LFE3-.LFB3
 658 0108 01       		.uleb128 0x1
 659 0109 9C       		.byte	0x9c
 660 010a 2D010000 		.4byte	0x12d
 661 010e 09       		.uleb128 0x9
 662 010f DA010000 		.4byte	.LASF23
 663 0113 01       		.byte	0x1
 664 0114 B101     		.2byte	0x1b1
 665 0116 77000000 		.4byte	0x77
 666 011a 02       		.uleb128 0x2
 667 011b 91       		.byte	0x91
 668 011c 6C       		.sleb128 -20
 669 011d 0A       		.uleb128 0xa
 670 011e 8D020000 		.4byte	.LASF25
 671 0122 01       		.byte	0x1
 672 0123 B301     		.2byte	0x1b3
 673 0125 77000000 		.4byte	0x77
 674 0129 02       		.uleb128 0x2
 675 012a 91       		.byte	0x91
 676 012b 74       		.sleb128 -12
 677 012c 00       		.byte	0
 678 012d 08       		.uleb128 0x8
 679 012e 24000000 		.4byte	.LASF22
 680 0132 01       		.byte	0x1
 681 0133 CA01     		.2byte	0x1ca
 682 0135 00000000 		.4byte	.LFB4
 683 0139 38000000 		.4byte	.LFE4-.LFB4
 684 013d 01       		.uleb128 0x1
 685 013e 9C       		.byte	0x9c
 686 013f 62010000 		.4byte	0x162
 687 0143 09       		.uleb128 0x9
 688 0144 88010000 		.4byte	.LASF24
 689 0148 01       		.byte	0x1
 690 0149 CA01     		.2byte	0x1ca
 691 014b 77000000 		.4byte	0x77
 692 014f 02       		.uleb128 0x2
 693 0150 91       		.byte	0x91
 694 0151 6C       		.sleb128 -20
 695 0152 0A       		.uleb128 0xa
 696 0153 8D020000 		.4byte	.LASF25
 697 0157 01       		.byte	0x1
 698 0158 CC01     		.2byte	0x1cc
 699 015a 77000000 		.4byte	0x77
 700 015e 02       		.uleb128 0x2
 701 015f 91       		.byte	0x91
 702 0160 74       		.sleb128 -12
 703 0161 00       		.byte	0
 704 0162 0B       		.uleb128 0xb
 705 0163 4B000000 		.4byte	.LASF26
 706 0167 01       		.byte	0x1
 707 0168 A802     		.2byte	0x2a8
 708 016a 00000000 		.4byte	.LFB5
 709 016e 36000000 		.4byte	.LFE5-.LFB5
 710 0172 01       		.uleb128 0x1
 711 0173 9C       		.byte	0x9c
 712 0174 97010000 		.4byte	0x197
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccR7UNHp.s 			page 28


 713 0178 09       		.uleb128 0x9
 714 0179 44000000 		.4byte	.LASF27
 715 017d 01       		.byte	0x1
 716 017e A802     		.2byte	0x2a8
 717 0180 97010000 		.4byte	0x197
 718 0184 02       		.uleb128 0x2
 719 0185 91       		.byte	0x91
 720 0186 6C       		.sleb128 -20
 721 0187 0A       		.uleb128 0xa
 722 0188 F9010000 		.4byte	.LASF28
 723 018c 01       		.byte	0x1
 724 018d AA02     		.2byte	0x2aa
 725 018f 77000000 		.4byte	0x77
 726 0193 02       		.uleb128 0x2
 727 0194 91       		.byte	0x91
 728 0195 74       		.sleb128 -12
 729 0196 00       		.byte	0
 730 0197 0C       		.uleb128 0xc
 731 0198 04       		.byte	0x4
 732 0199 9D010000 		.4byte	0x19d
 733 019d 0D       		.uleb128 0xd
 734 019e 91000000 		.4byte	0x91
 735 01a2 0B       		.uleb128 0xb
 736 01a3 E9000000 		.4byte	.LASF29
 737 01a7 01       		.byte	0x1
 738 01a8 C302     		.2byte	0x2c3
 739 01aa 00000000 		.4byte	.LFB6
 740 01ae 24000000 		.4byte	.LFE6-.LFB6
 741 01b2 01       		.uleb128 0x1
 742 01b3 9C       		.byte	0x9c
 743 01b4 C8010000 		.4byte	0x1c8
 744 01b8 09       		.uleb128 0x9
 745 01b9 0B020000 		.4byte	.LASF30
 746 01bd 01       		.byte	0x1
 747 01be C302     		.2byte	0x2c3
 748 01c0 77000000 		.4byte	0x77
 749 01c4 02       		.uleb128 0x2
 750 01c5 91       		.byte	0x91
 751 01c6 74       		.sleb128 -12
 752 01c7 00       		.byte	0
 753 01c8 08       		.uleb128 0x8
 754 01c9 69000000 		.4byte	.LASF31
 755 01cd 01       		.byte	0x1
 756 01ce 1A03     		.2byte	0x31a
 757 01d0 00000000 		.4byte	.LFB7
 758 01d4 7C000000 		.4byte	.LFE7-.LFB7
 759 01d8 01       		.uleb128 0x1
 760 01d9 9C       		.byte	0x9c
 761 01da 0C020000 		.4byte	0x20c
 762 01de 09       		.uleb128 0x9
 763 01df 5E000000 		.4byte	.LASF32
 764 01e3 01       		.byte	0x1
 765 01e4 1A03     		.2byte	0x31a
 766 01e6 77000000 		.4byte	0x77
 767 01ea 02       		.uleb128 0x2
 768 01eb 91       		.byte	0x91
 769 01ec 6C       		.sleb128 -20
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccR7UNHp.s 			page 29


 770 01ed 0A       		.uleb128 0xa
 771 01ee D1020000 		.4byte	.LASF33
 772 01f2 01       		.byte	0x1
 773 01f3 1C03     		.2byte	0x31c
 774 01f5 77000000 		.4byte	0x77
 775 01f9 02       		.uleb128 0x2
 776 01fa 91       		.byte	0x91
 777 01fb 70       		.sleb128 -16
 778 01fc 0A       		.uleb128 0xa
 779 01fd 84000000 		.4byte	.LASF34
 780 0201 01       		.byte	0x1
 781 0202 1D03     		.2byte	0x31d
 782 0204 77000000 		.4byte	0x77
 783 0208 02       		.uleb128 0x2
 784 0209 91       		.byte	0x91
 785 020a 74       		.sleb128 -12
 786 020b 00       		.byte	0
 787 020c 0E       		.uleb128 0xe
 788 020d 14000000 		.4byte	.LASF38
 789 0211 03       		.byte	0x3
 790 0212 5B       		.byte	0x5b
 791 0213 6B000000 		.4byte	0x6b
 792 0217 00       		.byte	0
 793              		.section	.debug_abbrev,"",%progbits
 794              	.Ldebug_abbrev0:
 795 0000 01       		.uleb128 0x1
 796 0001 11       		.uleb128 0x11
 797 0002 01       		.byte	0x1
 798 0003 25       		.uleb128 0x25
 799 0004 0E       		.uleb128 0xe
 800 0005 13       		.uleb128 0x13
 801 0006 0B       		.uleb128 0xb
 802 0007 03       		.uleb128 0x3
 803 0008 0E       		.uleb128 0xe
 804 0009 1B       		.uleb128 0x1b
 805 000a 0E       		.uleb128 0xe
 806 000b 55       		.uleb128 0x55
 807 000c 17       		.uleb128 0x17
 808 000d 11       		.uleb128 0x11
 809 000e 01       		.uleb128 0x1
 810 000f 10       		.uleb128 0x10
 811 0010 17       		.uleb128 0x17
 812 0011 00       		.byte	0
 813 0012 00       		.byte	0
 814 0013 02       		.uleb128 0x2
 815 0014 24       		.uleb128 0x24
 816 0015 00       		.byte	0
 817 0016 0B       		.uleb128 0xb
 818 0017 0B       		.uleb128 0xb
 819 0018 3E       		.uleb128 0x3e
 820 0019 0B       		.uleb128 0xb
 821 001a 03       		.uleb128 0x3
 822 001b 0E       		.uleb128 0xe
 823 001c 00       		.byte	0
 824 001d 00       		.byte	0
 825 001e 03       		.uleb128 0x3
 826 001f 24       		.uleb128 0x24
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccR7UNHp.s 			page 30


 827 0020 00       		.byte	0
 828 0021 0B       		.uleb128 0xb
 829 0022 0B       		.uleb128 0xb
 830 0023 3E       		.uleb128 0x3e
 831 0024 0B       		.uleb128 0xb
 832 0025 03       		.uleb128 0x3
 833 0026 08       		.uleb128 0x8
 834 0027 00       		.byte	0
 835 0028 00       		.byte	0
 836 0029 04       		.uleb128 0x4
 837 002a 16       		.uleb128 0x16
 838 002b 00       		.byte	0
 839 002c 03       		.uleb128 0x3
 840 002d 0E       		.uleb128 0xe
 841 002e 3A       		.uleb128 0x3a
 842 002f 0B       		.uleb128 0xb
 843 0030 3B       		.uleb128 0x3b
 844 0031 05       		.uleb128 0x5
 845 0032 49       		.uleb128 0x49
 846 0033 13       		.uleb128 0x13
 847 0034 00       		.byte	0
 848 0035 00       		.byte	0
 849 0036 05       		.uleb128 0x5
 850 0037 35       		.uleb128 0x35
 851 0038 00       		.byte	0
 852 0039 49       		.uleb128 0x49
 853 003a 13       		.uleb128 0x13
 854 003b 00       		.byte	0
 855 003c 00       		.byte	0
 856 003d 06       		.uleb128 0x6
 857 003e 2E       		.uleb128 0x2e
 858 003f 00       		.byte	0
 859 0040 3F       		.uleb128 0x3f
 860 0041 19       		.uleb128 0x19
 861 0042 03       		.uleb128 0x3
 862 0043 0E       		.uleb128 0xe
 863 0044 3A       		.uleb128 0x3a
 864 0045 0B       		.uleb128 0xb
 865 0046 3B       		.uleb128 0x3b
 866 0047 0B       		.uleb128 0xb
 867 0048 27       		.uleb128 0x27
 868 0049 19       		.uleb128 0x19
 869 004a 11       		.uleb128 0x11
 870 004b 01       		.uleb128 0x1
 871 004c 12       		.uleb128 0x12
 872 004d 06       		.uleb128 0x6
 873 004e 40       		.uleb128 0x40
 874 004f 18       		.uleb128 0x18
 875 0050 9742     		.uleb128 0x2117
 876 0052 19       		.uleb128 0x19
 877 0053 00       		.byte	0
 878 0054 00       		.byte	0
 879 0055 07       		.uleb128 0x7
 880 0056 2E       		.uleb128 0x2e
 881 0057 00       		.byte	0
 882 0058 3F       		.uleb128 0x3f
 883 0059 19       		.uleb128 0x19
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccR7UNHp.s 			page 31


 884 005a 03       		.uleb128 0x3
 885 005b 0E       		.uleb128 0xe
 886 005c 3A       		.uleb128 0x3a
 887 005d 0B       		.uleb128 0xb
 888 005e 3B       		.uleb128 0x3b
 889 005f 05       		.uleb128 0x5
 890 0060 27       		.uleb128 0x27
 891 0061 19       		.uleb128 0x19
 892 0062 11       		.uleb128 0x11
 893 0063 01       		.uleb128 0x1
 894 0064 12       		.uleb128 0x12
 895 0065 06       		.uleb128 0x6
 896 0066 40       		.uleb128 0x40
 897 0067 18       		.uleb128 0x18
 898 0068 9742     		.uleb128 0x2117
 899 006a 19       		.uleb128 0x19
 900 006b 00       		.byte	0
 901 006c 00       		.byte	0
 902 006d 08       		.uleb128 0x8
 903 006e 2E       		.uleb128 0x2e
 904 006f 01       		.byte	0x1
 905 0070 3F       		.uleb128 0x3f
 906 0071 19       		.uleb128 0x19
 907 0072 03       		.uleb128 0x3
 908 0073 0E       		.uleb128 0xe
 909 0074 3A       		.uleb128 0x3a
 910 0075 0B       		.uleb128 0xb
 911 0076 3B       		.uleb128 0x3b
 912 0077 05       		.uleb128 0x5
 913 0078 27       		.uleb128 0x27
 914 0079 19       		.uleb128 0x19
 915 007a 11       		.uleb128 0x11
 916 007b 01       		.uleb128 0x1
 917 007c 12       		.uleb128 0x12
 918 007d 06       		.uleb128 0x6
 919 007e 40       		.uleb128 0x40
 920 007f 18       		.uleb128 0x18
 921 0080 9742     		.uleb128 0x2117
 922 0082 19       		.uleb128 0x19
 923 0083 01       		.uleb128 0x1
 924 0084 13       		.uleb128 0x13
 925 0085 00       		.byte	0
 926 0086 00       		.byte	0
 927 0087 09       		.uleb128 0x9
 928 0088 05       		.uleb128 0x5
 929 0089 00       		.byte	0
 930 008a 03       		.uleb128 0x3
 931 008b 0E       		.uleb128 0xe
 932 008c 3A       		.uleb128 0x3a
 933 008d 0B       		.uleb128 0xb
 934 008e 3B       		.uleb128 0x3b
 935 008f 05       		.uleb128 0x5
 936 0090 49       		.uleb128 0x49
 937 0091 13       		.uleb128 0x13
 938 0092 02       		.uleb128 0x2
 939 0093 18       		.uleb128 0x18
 940 0094 00       		.byte	0
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccR7UNHp.s 			page 32


 941 0095 00       		.byte	0
 942 0096 0A       		.uleb128 0xa
 943 0097 34       		.uleb128 0x34
 944 0098 00       		.byte	0
 945 0099 03       		.uleb128 0x3
 946 009a 0E       		.uleb128 0xe
 947 009b 3A       		.uleb128 0x3a
 948 009c 0B       		.uleb128 0xb
 949 009d 3B       		.uleb128 0x3b
 950 009e 05       		.uleb128 0x5
 951 009f 49       		.uleb128 0x49
 952 00a0 13       		.uleb128 0x13
 953 00a1 02       		.uleb128 0x2
 954 00a2 18       		.uleb128 0x18
 955 00a3 00       		.byte	0
 956 00a4 00       		.byte	0
 957 00a5 0B       		.uleb128 0xb
 958 00a6 2E       		.uleb128 0x2e
 959 00a7 01       		.byte	0x1
 960 00a8 3F       		.uleb128 0x3f
 961 00a9 19       		.uleb128 0x19
 962 00aa 03       		.uleb128 0x3
 963 00ab 0E       		.uleb128 0xe
 964 00ac 3A       		.uleb128 0x3a
 965 00ad 0B       		.uleb128 0xb
 966 00ae 3B       		.uleb128 0x3b
 967 00af 05       		.uleb128 0x5
 968 00b0 27       		.uleb128 0x27
 969 00b1 19       		.uleb128 0x19
 970 00b2 11       		.uleb128 0x11
 971 00b3 01       		.uleb128 0x1
 972 00b4 12       		.uleb128 0x12
 973 00b5 06       		.uleb128 0x6
 974 00b6 40       		.uleb128 0x40
 975 00b7 18       		.uleb128 0x18
 976 00b8 9642     		.uleb128 0x2116
 977 00ba 19       		.uleb128 0x19
 978 00bb 01       		.uleb128 0x1
 979 00bc 13       		.uleb128 0x13
 980 00bd 00       		.byte	0
 981 00be 00       		.byte	0
 982 00bf 0C       		.uleb128 0xc
 983 00c0 0F       		.uleb128 0xf
 984 00c1 00       		.byte	0
 985 00c2 0B       		.uleb128 0xb
 986 00c3 0B       		.uleb128 0xb
 987 00c4 49       		.uleb128 0x49
 988 00c5 13       		.uleb128 0x13
 989 00c6 00       		.byte	0
 990 00c7 00       		.byte	0
 991 00c8 0D       		.uleb128 0xd
 992 00c9 26       		.uleb128 0x26
 993 00ca 00       		.byte	0
 994 00cb 49       		.uleb128 0x49
 995 00cc 13       		.uleb128 0x13
 996 00cd 00       		.byte	0
 997 00ce 00       		.byte	0
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccR7UNHp.s 			page 33


 998 00cf 0E       		.uleb128 0xe
 999 00d0 34       		.uleb128 0x34
 1000 00d1 00       		.byte	0
 1001 00d2 03       		.uleb128 0x3
 1002 00d3 0E       		.uleb128 0xe
 1003 00d4 3A       		.uleb128 0x3a
 1004 00d5 0B       		.uleb128 0xb
 1005 00d6 3B       		.uleb128 0x3b
 1006 00d7 0B       		.uleb128 0xb
 1007 00d8 49       		.uleb128 0x49
 1008 00d9 13       		.uleb128 0x13
 1009 00da 3F       		.uleb128 0x3f
 1010 00db 19       		.uleb128 0x19
 1011 00dc 3C       		.uleb128 0x3c
 1012 00dd 19       		.uleb128 0x19
 1013 00de 00       		.byte	0
 1014 00df 00       		.byte	0
 1015 00e0 00       		.byte	0
 1016              		.section	.debug_aranges,"",%progbits
 1017 0000 54000000 		.4byte	0x54
 1018 0004 0200     		.2byte	0x2
 1019 0006 00000000 		.4byte	.Ldebug_info0
 1020 000a 04       		.byte	0x4
 1021 000b 00       		.byte	0
 1022 000c 0000     		.2byte	0
 1023 000e 0000     		.2byte	0
 1024 0010 00000000 		.4byte	.LFB0
 1025 0014 BC000000 		.4byte	.LFE0-.LFB0
 1026 0018 00000000 		.4byte	.LFB1
 1027 001c 30000000 		.4byte	.LFE1-.LFB1
 1028 0020 00000000 		.4byte	.LFB2
 1029 0024 34000000 		.4byte	.LFE2-.LFB2
 1030 0028 00000000 		.4byte	.LFB3
 1031 002c 34000000 		.4byte	.LFE3-.LFB3
 1032 0030 00000000 		.4byte	.LFB4
 1033 0034 38000000 		.4byte	.LFE4-.LFB4
 1034 0038 00000000 		.4byte	.LFB5
 1035 003c 36000000 		.4byte	.LFE5-.LFB5
 1036 0040 00000000 		.4byte	.LFB6
 1037 0044 24000000 		.4byte	.LFE6-.LFB6
 1038 0048 00000000 		.4byte	.LFB7
 1039 004c 7C000000 		.4byte	.LFE7-.LFB7
 1040 0050 00000000 		.4byte	0
 1041 0054 00000000 		.4byte	0
 1042              		.section	.debug_ranges,"",%progbits
 1043              	.Ldebug_ranges0:
 1044 0000 00000000 		.4byte	.LFB0
 1045 0004 BC000000 		.4byte	.LFE0
 1046 0008 00000000 		.4byte	.LFB1
 1047 000c 30000000 		.4byte	.LFE1
 1048 0010 00000000 		.4byte	.LFB2
 1049 0014 34000000 		.4byte	.LFE2
 1050 0018 00000000 		.4byte	.LFB3
 1051 001c 34000000 		.4byte	.LFE3
 1052 0020 00000000 		.4byte	.LFB4
 1053 0024 38000000 		.4byte	.LFE4
 1054 0028 00000000 		.4byte	.LFB5
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccR7UNHp.s 			page 34


 1055 002c 36000000 		.4byte	.LFE5
 1056 0030 00000000 		.4byte	.LFB6
 1057 0034 24000000 		.4byte	.LFE6
 1058 0038 00000000 		.4byte	.LFB7
 1059 003c 7C000000 		.4byte	.LFE7
 1060 0040 00000000 		.4byte	0
 1061 0044 00000000 		.4byte	0
 1062              		.section	.debug_line,"",%progbits
 1063              	.Ldebug_line0:
 1064 0000 25010000 		.section	.debug_str,"MS",%progbits,1
 1064      02005400 
 1064      00000201 
 1064      FB0E0D00 
 1064      01010101 
 1065              	.LASF6:
 1066 0000 6C6F6E67 		.ascii	"long long int\000"
 1066      206C6F6E 
 1066      6720696E 
 1066      7400
 1067              	.LASF15:
 1068 000e 72656733 		.ascii	"reg32\000"
 1068      3200
 1069              	.LASF38:
 1070 0014 55415254 		.ascii	"UART_IntrTxMask\000"
 1070      5F496E74 
 1070      7254784D 
 1070      61736B00 
 1071              	.LASF22:
 1072 0024 55415254 		.ascii	"UART_UartSetRxAddressMask\000"
 1072      5F556172 
 1072      74536574 
 1072      52784164 
 1072      64726573 
 1073              	.LASF11:
 1074 003e 666C6F61 		.ascii	"float\000"
 1074      7400
 1075              	.LASF27:
 1076 0044 73747269 		.ascii	"string\000"
 1076      6E6700
 1077              	.LASF26:
 1078 004b 55415254 		.ascii	"UART_UartPutString\000"
 1078      5F556172 
 1078      74507574 
 1078      53747269 
 1078      6E6700
 1079              	.LASF32:
 1080 005e 62726561 		.ascii	"breakWidth\000"
 1080      6B576964 
 1080      746800
 1081              	.LASF31:
 1082 0069 55415254 		.ascii	"UART_UartSendBreakBlocking\000"
 1082      5F556172 
 1082      7453656E 
 1082      64427265 
 1082      616B426C 
 1083              	.LASF34:
 1084 0084 7478496E 		.ascii	"txIntrReg\000"
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccR7UNHp.s 			page 35


 1084      74725265 
 1084      6700
 1085              	.LASF1:
 1086 008e 756E7369 		.ascii	"unsigned char\000"
 1086      676E6564 
 1086      20636861 
 1086      7200
 1087              	.LASF13:
 1088 009c 63686172 		.ascii	"char8\000"
 1088      3800
 1089              	.LASF19:
 1090 00a2 55415254 		.ascii	"UART_UartPostEnable\000"
 1090      5F556172 
 1090      74506F73 
 1090      74456E61 
 1090      626C6500 
 1091              	.LASF5:
 1092 00b6 6C6F6E67 		.ascii	"long unsigned int\000"
 1092      20756E73 
 1092      69676E65 
 1092      6420696E 
 1092      7400
 1093              	.LASF20:
 1094 00c8 55415254 		.ascii	"UART_UartStop\000"
 1094      5F556172 
 1094      7453746F 
 1094      7000
 1095              	.LASF3:
 1096 00d6 73686F72 		.ascii	"short unsigned int\000"
 1096      7420756E 
 1096      7369676E 
 1096      65642069 
 1096      6E7400
 1097              	.LASF29:
 1098 00e9 55415254 		.ascii	"UART_UartPutCRLF\000"
 1098      5F556172 
 1098      74507574 
 1098      43524C46 
 1098      00
 1099              	.LASF35:
 1100 00fa 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1100      43313120 
 1100      352E342E 
 1100      31203230 
 1100      31363036 
 1101 012d 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 1101      20726576 
 1101      6973696F 
 1101      6E203233 
 1101      37373135 
 1102 0160 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 1102      66756E63 
 1102      74696F6E 
 1102      2D736563 
 1102      74696F6E 
 1103              	.LASF24:
 1104 0188 61646472 		.ascii	"addressMask\000"
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccR7UNHp.s 			page 36


 1104      6573734D 
 1104      61736B00 
 1105              	.LASF12:
 1106 0194 646F7562 		.ascii	"double\000"
 1106      6C6500
 1107              	.LASF21:
 1108 019b 55415254 		.ascii	"UART_UartSetRxAddress\000"
 1108      5F556172 
 1108      74536574 
 1108      52784164 
 1108      64726573 
 1109              	.LASF9:
 1110 01b1 75696E74 		.ascii	"uint16\000"
 1110      313600
 1111              	.LASF10:
 1112 01b8 75696E74 		.ascii	"uint32\000"
 1112      333200
 1113              	.LASF8:
 1114 01bf 756E7369 		.ascii	"unsigned int\000"
 1114      676E6564 
 1114      20696E74 
 1114      00
 1115              	.LASF18:
 1116 01cc 55415254 		.ascii	"UART_UartInit\000"
 1116      5F556172 
 1116      74496E69 
 1116      7400
 1117              	.LASF23:
 1118 01da 61646472 		.ascii	"address\000"
 1118      65737300 
 1119              	.LASF7:
 1120 01e2 6C6F6E67 		.ascii	"long long unsigned int\000"
 1120      206C6F6E 
 1120      6720756E 
 1120      7369676E 
 1120      65642069 
 1121              	.LASF28:
 1122 01f9 62756649 		.ascii	"bufIndex\000"
 1122      6E646578 
 1122      00
 1123              	.LASF17:
 1124 0202 73697A65 		.ascii	"sizetype\000"
 1124      74797065 
 1124      00
 1125              	.LASF30:
 1126 020b 74784461 		.ascii	"txDataByte\000"
 1126      74614279 
 1126      746500
 1127              	.LASF14:
 1128 0216 63686172 		.ascii	"char\000"
 1128      00
 1129              	.LASF37:
 1130 021b 443A5C55 		.ascii	"D:\\Users\\jagumiel\\Documents\\PSoC Creator\\PSoC-"
 1130      73657273 
 1130      5C6A6167 
 1130      756D6965 
 1130      6C5C446F 
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccR7UNHp.s 			page 37


 1131 0249 3130315C 		.ascii	"101\\PSoC-101\\TrainingProjects\\ADC-PWM-UART.cydsn"
 1131      50536F43 
 1131      2D313031 
 1131      5C547261 
 1131      696E696E 
 1132 0279 00       		.ascii	"\000"
 1133              	.LASF2:
 1134 027a 73686F72 		.ascii	"short int\000"
 1134      7420696E 
 1134      7400
 1135              	.LASF4:
 1136 0284 6C6F6E67 		.ascii	"long int\000"
 1136      20696E74 
 1136      00
 1137              	.LASF25:
 1138 028d 6D617463 		.ascii	"matchReg\000"
 1138      68526567 
 1138      00
 1139              	.LASF16:
 1140 0296 6C6F6E67 		.ascii	"long double\000"
 1140      20646F75 
 1140      626C6500 
 1141              	.LASF36:
 1142 02a2 47656E65 		.ascii	"Generated_Source\\PSoC4\\UART_UART.c\000"
 1142      72617465 
 1142      645F536F 
 1142      75726365 
 1142      5C50536F 
 1143              	.LASF0:
 1144 02c5 7369676E 		.ascii	"signed char\000"
 1144      65642063 
 1144      68617200 
 1145              	.LASF33:
 1146 02d1 74784374 		.ascii	"txCtrlReg\000"
 1146      726C5265 
 1146      6700
 1147              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
