ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccaiT5A1.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CyLib.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	cydelayFreqHz
  20              		.data
  21              		.align	2
  22              		.type	cydelayFreqHz, %object
  23              		.size	cydelayFreqHz, 4
  24              	cydelayFreqHz:
  25 0000 00366E01 		.word	24000000
  26              		.global	cydelayFreqKhz
  27              		.align	2
  28              		.type	cydelayFreqKhz, %object
  29              		.size	cydelayFreqKhz, 4
  30              	cydelayFreqKhz:
  31 0004 C05D0000 		.word	24000
  32              		.global	cydelayFreqMhz
  33              		.type	cydelayFreqMhz, %object
  34              		.size	cydelayFreqMhz, 1
  35              	cydelayFreqMhz:
  36 0008 18       		.byte	24
  37              		.global	cydelay32kMs
  38 0009 000000   		.align	2
  39              		.type	cydelay32kMs, %object
  40              		.size	cydelay32kMs, 4
  41              	cydelay32kMs:
  42 000c 0000E02E 		.word	786432000
  43              		.bss
  44              		.align	2
  45              	CySysTickCallbacks:
  46 0000 00000000 		.space	20
  46      00000000 
  46      00000000 
  46      00000000 
  46      00000000 
  47              		.global	CySysTickInitVar
  48              		.align	2
  49              		.type	CySysTickInitVar, %object
  50              		.size	CySysTickInitVar, 4
  51              	CySysTickInitVar:
  52 0014 00000000 		.space	4
  53              		.global	cyImoFreqMhz2Reg
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccaiT5A1.s 			page 2


  54              		.section	.rodata
  55              		.align	2
  56              		.type	cyImoFreqMhz2Reg, %object
  57              		.size	cyImoFreqMhz2Reg, 46
  58              	cyImoFreqMhz2Reg:
  59 0000 03       		.byte	3
  60 0001 04       		.byte	4
  61 0002 05       		.byte	5
  62 0003 06       		.byte	6
  63 0004 07       		.byte	7
  64 0005 08       		.byte	8
  65 0006 09       		.byte	9
  66 0007 0A       		.byte	10
  67 0008 0B       		.byte	11
  68 0009 0C       		.byte	12
  69 000a 0E       		.byte	14
  70 000b 0F       		.byte	15
  71 000c 10       		.byte	16
  72 000d 11       		.byte	17
  73 000e 12       		.byte	18
  74 000f 13       		.byte	19
  75 0010 14       		.byte	20
  76 0011 15       		.byte	21
  77 0012 16       		.byte	22
  78 0013 17       		.byte	23
  79 0014 18       		.byte	24
  80 0015 19       		.byte	25
  81 0016 1B       		.byte	27
  82 0017 1C       		.byte	28
  83 0018 1D       		.byte	29
  84 0019 1E       		.byte	30
  85 001a 1F       		.byte	31
  86 001b 20       		.byte	32
  87 001c 21       		.byte	33
  88 001d 22       		.byte	34
  89 001e 23       		.byte	35
  90 001f 25       		.byte	37
  91 0020 26       		.byte	38
  92 0021 27       		.byte	39
  93 0022 28       		.byte	40
  94 0023 29       		.byte	41
  95 0024 2A       		.byte	42
  96 0025 2B       		.byte	43
  97 0026 2E       		.byte	46
  98 0027 2F       		.byte	47
  99 0028 30       		.byte	48
 100 0029 31       		.byte	49
 101 002a 32       		.byte	50
 102 002b 33       		.byte	51
 103 002c 34       		.byte	52
 104 002d 35       		.byte	53
 105              		.global	CySysClkPumpConfig
 106              		.data
 107              		.align	2
 108              		.type	CySysClkPumpConfig, %object
 109              		.size	CySysClkPumpConfig, 4
 110              	CySysClkPumpConfig:
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccaiT5A1.s 			page 3


 111 0010 01000000 		.word	1
 112              		.section	.text.CySysClkImoStart,"ax",%progbits
 113              		.align	2
 114              		.global	CySysClkImoStart
 115              		.code	16
 116              		.thumb_func
 117              		.type	CySysClkImoStart, %function
 118              	CySysClkImoStart:
 119              	.LFB0:
 120              		.file 1 "Generated_Source\\PSoC4\\CyLib.c"
   1:Generated_Source\PSoC4/CyLib.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/CyLib.c **** * \file CyLib.c
   3:Generated_Source\PSoC4/CyLib.c **** * \version 5.70
   4:Generated_Source\PSoC4/CyLib.c **** *
   5:Generated_Source\PSoC4/CyLib.c **** * \brief Provides a system API for the Clocking, Interrupts, SysTick, and
   6:Generated_Source\PSoC4/CyLib.c **** * Voltage Detect.
   7:Generated_Source\PSoC4/CyLib.c **** *
   8:Generated_Source\PSoC4/CyLib.c **** * \note Documentation of the API's in this file is located in the PSoC 4 System
   9:Generated_Source\PSoC4/CyLib.c **** * Reference Guide provided with PSoC Creator.
  10:Generated_Source\PSoC4/CyLib.c **** *
  11:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
  12:Generated_Source\PSoC4/CyLib.c **** * \copyright
  13:Generated_Source\PSoC4/CyLib.c **** * Copyright 2010-2018, Cypress Semiconductor Corporation.  All rights reserved.
  14:Generated_Source\PSoC4/CyLib.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:Generated_Source\PSoC4/CyLib.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:Generated_Source\PSoC4/CyLib.c **** * the software package with which this file was provided.
  17:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  18:Generated_Source\PSoC4/CyLib.c **** 
  19:Generated_Source\PSoC4/CyLib.c **** #include "CyLib.h"
  20:Generated_Source\PSoC4/CyLib.c **** 
  21:Generated_Source\PSoC4/CyLib.c **** /* CySysClkWriteImoFreq() || CySysClkImoEnableWcoLock() */
  22:Generated_Source\PSoC4/CyLib.c **** #if ((CY_IP_SRSSV2 && CY_IP_FMLT) || CY_IP_IMO_TRIMMABLE_BY_WCO)
  23:Generated_Source\PSoC4/CyLib.c ****     #include "CyFlash.h"
  24:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_FMLT) */
  25:Generated_Source\PSoC4/CyLib.c **** 
  26:Generated_Source\PSoC4/CyLib.c **** /* Do not use these definitions directly in your application */
  27:Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqHz  = CYDEV_BCLK__SYSCLK__HZ;
  28:Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqKhz = (CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRE
  29:Generated_Source\PSoC4/CyLib.c **** uint8  cydelayFreqMhz = (uint8)((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY
  30:Generated_Source\PSoC4/CyLib.c **** uint32 cydelay32kMs   = CY_DELAY_MS_OVERFLOW * ((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRES
  31:Generated_Source\PSoC4/CyLib.c ****                         CY_DELAY_1K_THRESHOLD);
  32:Generated_Source\PSoC4/CyLib.c **** 
  33:Generated_Source\PSoC4/CyLib.c **** 
  34:Generated_Source\PSoC4/CyLib.c **** static cySysTickCallback CySysTickCallbacks[CY_SYS_SYST_NUM_OF_CALLBACKS];
  35:Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void);
  36:Generated_Source\PSoC4/CyLib.c **** 
  37:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_PLL)
  38:Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkPllGetBypassMode(uint32 pll);
  39:Generated_Source\PSoC4/CyLib.c ****     static cystatus CySysClkPllConfigChangeAllowed(uint32 pll);
  40:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_PLL) */
  41:Generated_Source\PSoC4/CyLib.c **** 
  42:Generated_Source\PSoC4/CyLib.c **** 
  43:Generated_Source\PSoC4/CyLib.c **** /***************************************************************************//**
  44:Generated_Source\PSoC4/CyLib.c **** * Indicates whether or not the SysTick has been initialized. The variable is
  45:Generated_Source\PSoC4/CyLib.c **** * initialized to 0 and set to 1 the first time CySysTickStart() is called.
  46:Generated_Source\PSoC4/CyLib.c **** *
  47:Generated_Source\PSoC4/CyLib.c **** * This allows the component to restart without reinitialization after the first
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccaiT5A1.s 			page 4


  48:Generated_Source\PSoC4/CyLib.c **** * call to the CySysTickStart() routine.
  49:Generated_Source\PSoC4/CyLib.c **** *
  50:Generated_Source\PSoC4/CyLib.c **** * If reinitialization of the SysTick is required, call CySysTickInit() before
  51:Generated_Source\PSoC4/CyLib.c **** * calling CySysTickStart(). Alternatively, the SysTick can be reinitialized by
  52:Generated_Source\PSoC4/CyLib.c **** * calling the CySysTickInit() and CySysTickEnable() functions.
  53:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  54:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickInitVar = 0u;
  55:Generated_Source\PSoC4/CyLib.c **** 
  56:Generated_Source\PSoC4/CyLib.c **** 
  57:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
  58:Generated_Source\PSoC4/CyLib.c ****         /* Conversion between CySysClkWriteImoFreq() parameter and register's value */
  59:Generated_Source\PSoC4/CyLib.c ****         const uint8 cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_FREQ_TABLE_SIZE] = {
  60:Generated_Source\PSoC4/CyLib.c ****             /*  3 MHz */ 0x03u,  /*  4 MHz */ 0x04u,  /*  5 MHz */ 0x05u,  /*  6 MHz */ 0x06u,
  61:Generated_Source\PSoC4/CyLib.c ****             /*  7 MHz */ 0x07u,  /*  8 MHz */ 0x08u,  /*  9 MHz */ 0x09u,  /* 10 MHz */ 0x0Au,
  62:Generated_Source\PSoC4/CyLib.c ****             /* 11 MHz */ 0x0Bu,  /* 12 MHz */ 0x0Cu,  /* 13 MHz */ 0x0Eu,  /* 14 MHz */ 0x0Fu,
  63:Generated_Source\PSoC4/CyLib.c ****             /* 15 MHz */ 0x10u,  /* 16 MHz */ 0x11u,  /* 17 MHz */ 0x12u,  /* 18 MHz */ 0x13u,
  64:Generated_Source\PSoC4/CyLib.c ****             /* 19 MHz */ 0x14u,  /* 20 MHz */ 0x15u,  /* 21 MHz */ 0x16u,  /* 22 MHz */ 0x17u,
  65:Generated_Source\PSoC4/CyLib.c ****             /* 23 MHz */ 0x18u,  /* 24 MHz */ 0x19u,  /* 25 MHz */ 0x1Bu,  /* 26 MHz */ 0x1Cu,
  66:Generated_Source\PSoC4/CyLib.c ****             /* 27 MHz */ 0x1Du,  /* 28 MHz */ 0x1Eu,  /* 29 MHz */ 0x1Fu,  /* 30 MHz */ 0x20u,
  67:Generated_Source\PSoC4/CyLib.c ****             /* 31 MHz */ 0x21u,  /* 32 MHz */ 0x22u,  /* 33 MHz */ 0x23u,  /* 34 MHz */ 0x25u,
  68:Generated_Source\PSoC4/CyLib.c ****             /* 35 MHz */ 0x26u,  /* 36 MHz */ 0x27u,  /* 37 MHz */ 0x28u,  /* 38 MHz */ 0x29u,
  69:Generated_Source\PSoC4/CyLib.c ****             /* 39 MHz */ 0x2Au,  /* 40 MHz */ 0x2Bu,  /* 41 MHz */ 0x2Eu,  /* 42 MHz */ 0x2Fu,
  70:Generated_Source\PSoC4/CyLib.c ****             /* 43 MHz */ 0x30u,  /* 44 MHz */ 0x31u,  /* 45 MHz */ 0x32u,  /* 46 MHz */ 0x33u,
  71:Generated_Source\PSoC4/CyLib.c ****             /* 47 MHz */ 0x34u,  /* 48 MHz */ 0x35u };
  72:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
  73:Generated_Source\PSoC4/CyLib.c **** 
  74:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
  75:Generated_Source\PSoC4/CyLib.c ****         /* Conversion between IMO frequency and WCO DPLL max offset steps */
  76:Generated_Source\PSoC4/CyLib.c ****         const uint8 cyImoFreqMhz2DpllOffset[CY_SYS_CLK_IMO_FREQ_WCO_DPLL_TABLE_SIZE] = {
  77:Generated_Source\PSoC4/CyLib.c ****             /* 26 MHz */  238u, /* 27 MHz */  219u, /* 28 MHz */  201u, /* 29 MHz */  185u,
  78:Generated_Source\PSoC4/CyLib.c ****             /* 30 MHz */  170u, /* 31 MHz */  155u, /* 32 MHz */  142u, /* 33 MHz */  130u,
  79:Generated_Source\PSoC4/CyLib.c ****             /* 34 MHz */  118u, /* 35 MHz */  107u, /* 36 MHz */   96u, /* 37 MHz */  86u,
  80:Generated_Source\PSoC4/CyLib.c ****             /* 38 MHz */   77u, /* 39 MHz */   68u, /* 40 MHz */   59u, /* 41 MHz */  51u,
  81:Generated_Source\PSoC4/CyLib.c ****             /* 42 MHz */   44u, /* 43 MHz */   36u, /* 44 MHz */   29u, /* 45 MHz */  23u,
  82:Generated_Source\PSoC4/CyLib.c ****             /* 46 MHz */   16u, /* 47 MHz */   10u, /* 48 MHz */   4u };
  83:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
  84:Generated_Source\PSoC4/CyLib.c **** 
  85:Generated_Source\PSoC4/CyLib.c **** /* Stored CY_SYS_CLK_IMO_TRIM4_REG when modified for USB lock */
  86:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_USB && CY_IP_SRSSV2)
  87:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoTrim4 = 0u;
  88:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoTrim5 = 0u;
  89:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_USB && CY_IP_SRSSV2) */
  90:Generated_Source\PSoC4/CyLib.c **** 
  91:Generated_Source\PSoC4/CyLib.c **** /* Stored PUMP_SEL configuration during disable (IMO output by default) */
  92:Generated_Source\PSoC4/CyLib.c **** uint32 CySysClkPumpConfig = CY_SYS_CLK_PUMP_ENABLE;
  93:Generated_Source\PSoC4/CyLib.c **** 
  94:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
  95:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStart
  96:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
  97:Generated_Source\PSoC4/CyLib.c **** *
  98:Generated_Source\PSoC4/CyLib.c **** * Enables the IMO.
  99:Generated_Source\PSoC4/CyLib.c **** *
 100:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4100M / PSoC 4200M / PSoC 4000S / PSoC 4100S / PSoC Analog 
 101:Generated_Source\PSoC4/CyLib.c **** * Coprocessor devices, this function will also enable WCO lock if selected in 
 102:Generated_Source\PSoC4/CyLib.c **** * the Design Wide Resources tab.
 103:Generated_Source\PSoC4/CyLib.c **** *
 104:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200L devices, this function will also enable USB lock if selected
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccaiT5A1.s 			page 5


 105:Generated_Source\PSoC4/CyLib.c **** * in the Design Wide Resources tab.
 106:Generated_Source\PSoC4/CyLib.c **** *
 107:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 108:Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStart(void)
 109:Generated_Source\PSoC4/CyLib.c **** {
 121              		.loc 1 109 0
 122              		.cfi_startproc
 123              		@ args = 0, pretend = 0, frame = 0
 124              		@ frame_needed = 1, uses_anonymous_args = 0
 125 0000 80B5     		push	{r7, lr}
 126              		.cfi_def_cfa_offset 8
 127              		.cfi_offset 7, -8
 128              		.cfi_offset 14, -4
 129 0002 00AF     		add	r7, sp, #0
 130              		.cfi_def_cfa_register 7
 110:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG |= CY_SYS_CLK_IMO_CONFIG_ENABLE;
 131              		.loc 1 110 0
 132 0004 044B     		ldr	r3, .L2
 133 0006 044A     		ldr	r2, .L2
 134 0008 1268     		ldr	r2, [r2]
 135 000a 8021     		movs	r1, #128
 136 000c 0906     		lsls	r1, r1, #24
 137 000e 0A43     		orrs	r2, r1
 138 0010 1A60     		str	r2, [r3]
 111:Generated_Source\PSoC4/CyLib.c **** 
 112:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 113:Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_WCO == 1u)
 114:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableWcoLock();
 115:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_WCO == 1u) */
 116:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 117:Generated_Source\PSoC4/CyLib.c **** 
 118:Generated_Source\PSoC4/CyLib.c **** 
 119:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 120:Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_USB == 1u)
 121:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableUsbLock();
 122:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 1u) */
 123:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 124:Generated_Source\PSoC4/CyLib.c **** 
 125:Generated_Source\PSoC4/CyLib.c **** }
 139              		.loc 1 125 0
 140 0012 C046     		nop
 141 0014 BD46     		mov	sp, r7
 142              		@ sp needed
 143 0016 80BD     		pop	{r7, pc}
 144              	.L3:
 145              		.align	2
 146              	.L2:
 147 0018 08010B40 		.word	1074462984
 148              		.cfi_endproc
 149              	.LFE0:
 150              		.size	CySysClkImoStart, .-CySysClkImoStart
 151              		.section	.text.CySysClkImoStop,"ax",%progbits
 152              		.align	2
 153              		.global	CySysClkImoStop
 154              		.code	16
 155              		.thumb_func
 156              		.type	CySysClkImoStop, %function
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccaiT5A1.s 			page 6


 157              	CySysClkImoStop:
 158              	.LFB1:
 126:Generated_Source\PSoC4/CyLib.c **** 
 127:Generated_Source\PSoC4/CyLib.c **** 
 128:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 129:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStop
 130:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 131:Generated_Source\PSoC4/CyLib.c **** *
 132:Generated_Source\PSoC4/CyLib.c **** * Disables the IMO.
 133:Generated_Source\PSoC4/CyLib.c **** *
 134:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4100M / PSoC 4200M / PSoC 4200L / PSoC 4000S / PSoC 4100S / 
 135:Generated_Source\PSoC4/CyLib.c **** * PSoC Analog Coprocessor devices, this function will also disable WCO lock.
 136:Generated_Source\PSoC4/CyLib.c **** *
 137:Generated_Source\PSoC4/CyLib.c **** * For PSoC PSoC 4200L devices, this function will also disable USB lock.
 138:Generated_Source\PSoC4/CyLib.c **** *
 139:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 140:Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStop(void)
 141:Generated_Source\PSoC4/CyLib.c **** {
 159              		.loc 1 141 0
 160              		.cfi_startproc
 161              		@ args = 0, pretend = 0, frame = 0
 162              		@ frame_needed = 1, uses_anonymous_args = 0
 163 0000 80B5     		push	{r7, lr}
 164              		.cfi_def_cfa_offset 8
 165              		.cfi_offset 7, -8
 166              		.cfi_offset 14, -4
 167 0002 00AF     		add	r7, sp, #0
 168              		.cfi_def_cfa_register 7
 142:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 143:Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableWcoLock();
 144:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 145:Generated_Source\PSoC4/CyLib.c **** 
 146:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 147:Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableUsbLock();
 148:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 149:Generated_Source\PSoC4/CyLib.c **** 
 150:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG &= ( uint32 ) ( ~( uint32 )CY_SYS_CLK_IMO_CONFIG_ENABLE);
 169              		.loc 1 150 0
 170 0004 044B     		ldr	r3, .L5
 171 0006 044A     		ldr	r2, .L5
 172 0008 1268     		ldr	r2, [r2]
 173 000a 5200     		lsls	r2, r2, #1
 174 000c 5208     		lsrs	r2, r2, #1
 175 000e 1A60     		str	r2, [r3]
 151:Generated_Source\PSoC4/CyLib.c **** }
 176              		.loc 1 151 0
 177 0010 C046     		nop
 178 0012 BD46     		mov	sp, r7
 179              		@ sp needed
 180 0014 80BD     		pop	{r7, pc}
 181              	.L6:
 182 0016 C046     		.align	2
 183              	.L5:
 184 0018 08010B40 		.word	1074462984
 185              		.cfi_endproc
 186              	.LFE1:
 187              		.size	CySysClkImoStop, .-CySysClkImoStop
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccaiT5A1.s 			page 7


 188              		.section	.text.CySysClkWriteHfclkDirect,"ax",%progbits
 189              		.align	2
 190              		.global	CySysClkWriteHfclkDirect
 191              		.code	16
 192              		.thumb_func
 193              		.type	CySysClkWriteHfclkDirect, %function
 194              	CySysClkWriteHfclkDirect:
 195              	.LFB2:
 152:Generated_Source\PSoC4/CyLib.c **** 
 153:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 154:Generated_Source\PSoC4/CyLib.c **** 
 155:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 156:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableWcoLock
 157:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 158:Generated_Source\PSoC4/CyLib.c ****     *
 159:Generated_Source\PSoC4/CyLib.c ****     * Enables the IMO to WCO lock feature. This function works only if the WCO is
 160:Generated_Source\PSoC4/CyLib.c ****     * already enabled. If the WCO is not enabled then this function returns
 161:Generated_Source\PSoC4/CyLib.c ****     * without enabling the lock feature.
 162:Generated_Source\PSoC4/CyLib.c ****     *
 163:Generated_Source\PSoC4/CyLib.c ****     * It takes up to 20 ms for the IMO to stabilize. The delay is implemented with
 164:Generated_Source\PSoC4/CyLib.c ****     * CyDelay() function. The delay interval is measured based on the system
 165:Generated_Source\PSoC4/CyLib.c ****     * frequency defined by PSoC Creator at build time. If System clock frequency
 166:Generated_Source\PSoC4/CyLib.c ****     * is changed in runtime, the CyDelayFreq() with the appropriate parameter
 167:Generated_Source\PSoC4/CyLib.c ****     * should be called.
 168:Generated_Source\PSoC4/CyLib.c ****     *
 169:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, note that the IMO can lock to either WCO or USB
 170:Generated_Source\PSoC4/CyLib.c ****     * but not both.
 171:Generated_Source\PSoC4/CyLib.c ****     *
 172:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 173:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC Analog Coprocessor / PSoC 4200L.
 174:Generated_Source\PSoC4/CyLib.c ****     *
 175:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 176:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableWcoLock(void)
 177:Generated_Source\PSoC4/CyLib.c ****     {
 178:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 179:Generated_Source\PSoC4/CyLib.c ****             uint32 i;
 180:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 181:Generated_Source\PSoC4/CyLib.c **** 
 182:Generated_Source\PSoC4/CyLib.c ****         uint32 freq;
 183:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 184:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
 185:Generated_Source\PSoC4/CyLib.c ****         uint32 lfLimit = 0u;
 186:Generated_Source\PSoC4/CyLib.c ****         volatile uint32 flashCtlReg;
 187:Generated_Source\PSoC4/CyLib.c **** 
 188:Generated_Source\PSoC4/CyLib.c ****         if (0u != CySysClkWcoEnabled())
 189:Generated_Source\PSoC4/CyLib.c ****         {
 190:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 191:Generated_Source\PSoC4/CyLib.c **** 
 192:Generated_Source\PSoC4/CyLib.c ****             /* Set oscillator interface control port to WCO */
 193:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB)
 194:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_OSCINTF_CTL_REG =
 195:Generated_Source\PSoC4/CyLib.c ****                     (CY_SYS_CLK_OSCINTF_CTL_REG & (uint32) ~CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_MASK) |
 196:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_WCO;
 197:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB) */
 198:Generated_Source\PSoC4/CyLib.c **** 
 199:Generated_Source\PSoC4/CyLib.c ****             /* Get current IMO frequency based on the register value */
 200:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccaiT5A1.s 			page 8


 201:Generated_Source\PSoC4/CyLib.c ****                 freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;
 202:Generated_Source\PSoC4/CyLib.c ****                 for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 203:Generated_Source\PSoC4/CyLib.c ****                 {
 204:Generated_Source\PSoC4/CyLib.c ****                     if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImo
 205:Generated_Source\PSoC4/CyLib.c ****                     {
 206:Generated_Source\PSoC4/CyLib.c ****                         freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 207:Generated_Source\PSoC4/CyLib.c ****                         break;
 208:Generated_Source\PSoC4/CyLib.c ****                     }
 209:Generated_Source\PSoC4/CyLib.c ****                 }
 210:Generated_Source\PSoC4/CyLib.c ****             #else
 211:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate frequency by shifting register field value and adding constant. */
 212:Generated_Source\PSoC4/CyLib.c ****                 #if(CY_IP_SRSSLT)
 213:Generated_Source\PSoC4/CyLib.c ****                     freq = (((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT
 214:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ
 215:Generated_Source\PSoC4/CyLib.c ****                                       ((CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)
 216:Generated_Source\PSoC4/CyLib.c ****                                        (uint32) CY_SYS_CLK_SELECT_HFCLK_DIV_MASK));
 217:Generated_Source\PSoC4/CyLib.c ****                 #else
 218:Generated_Source\PSoC4/CyLib.c ****                     freq = ((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT_
 219:Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ_
 220:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CY_IP_SRSSLT) */
 221:Generated_Source\PSoC4/CyLib.c **** 
 222:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_SRSSV2) */
 223:Generated_Source\PSoC4/CyLib.c **** 
 224:Generated_Source\PSoC4/CyLib.c ****             /* For the WCO locking mode, the IMO gain needs to be CY_SYS_CLK_IMO_TRIM4_GAIN */
 225:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
 226:Generated_Source\PSoC4/CyLib.c ****                 if ((CY_SYS_CLK_IMO_TRIM4_REG & CY_SYS_CLK_IMO_TRIM4_GAIN_MASK) == 0u)
 227:Generated_Source\PSoC4/CyLib.c ****                 {
 228:Generated_Source\PSoC4/CyLib.c **** 			         CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_G
 229:Generated_Source\PSoC4/CyLib.c **** 			                  				     CY_SYS_CLK_IMO_TRIM4_WCO_GAIN;
 230:Generated_Source\PSoC4/CyLib.c ****                 }
 231:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_SRSSV2) */
 232:Generated_Source\PSoC4/CyLib.c **** 
 233:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_WCO_DPLL_REG & ~(CY_SYS_CLK_WCO_DPLL_MULT_MASK |
 234:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN_MASK |
 235:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN_MASK |
 236:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MASK);
 237:Generated_Source\PSoC4/CyLib.c **** 
 238:Generated_Source\PSoC4/CyLib.c ****             /* Set multiplier to determine IMO frequency in multiples of the WCO frequency */
 239:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_DPLL_MULT_VALUE(freq) & CY_SYS_CLK_WCO_DPLL_MULT_MASK);
 240:Generated_Source\PSoC4/CyLib.c **** 
 241:Generated_Source\PSoC4/CyLib.c ****             /* Set DPLL Loop Filter Integral and Proportional Gains Setting */
 242:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN | CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN);
 243:Generated_Source\PSoC4/CyLib.c **** 
 244:Generated_Source\PSoC4/CyLib.c ****             /* Set maximum allowed IMO offset */
 245:Generated_Source\PSoC4/CyLib.c ****             if (freq < CY_SYS_CLK_IMO_FREQ_WCO_DPLL_SAFE_POINT)
 246:Generated_Source\PSoC4/CyLib.c ****             {
 247:Generated_Source\PSoC4/CyLib.c ****                 regTmp |= (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX << CY_SYS_CLK_WCO_CONFIG_DPLL_LF
 248:Generated_Source\PSoC4/CyLib.c ****             }
 249:Generated_Source\PSoC4/CyLib.c ****             else
 250:Generated_Source\PSoC4/CyLib.c ****             {
 251:Generated_Source\PSoC4/CyLib.c ****                 lfLimit = (uint32) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) +
 252:Generated_Source\PSoC4/CyLib.c ****                     cyImoFreqMhz2DpllOffset[freq - CY_SYS_CLK_IMO_FREQ_WCO_DPLL_TABLE_OFFSET];
 253:Generated_Source\PSoC4/CyLib.c **** 
 254:Generated_Source\PSoC4/CyLib.c ****                 lfLimit = (lfLimit > CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX) ?
 255:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX : lfLimit;
 256:Generated_Source\PSoC4/CyLib.c **** 
 257:Generated_Source\PSoC4/CyLib.c ****                 regTmp |= (lfLimit << CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_SHIFT);
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccaiT5A1.s 			page 9


 258:Generated_Source\PSoC4/CyLib.c ****             }
 259:Generated_Source\PSoC4/CyLib.c **** 
 260:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_DPLL_REG = regTmp;
 261:Generated_Source\PSoC4/CyLib.c **** 
 262:Generated_Source\PSoC4/CyLib.c ****             flashCtlReg = CY_FLASH_CTL_REG;
 263:Generated_Source\PSoC4/CyLib.c ****             CySysFlashSetWaitCycles(CY_SYS_CLK_IMO_MAX_FREQ_MHZ);
 264:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_CONFIG_REG |= CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 265:Generated_Source\PSoC4/CyLib.c ****             CyDelay(CY_SYS_CLK_WCO_IMO_TIMEOUT_MS);
 266:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CTL_REG = flashCtlReg;
 267:Generated_Source\PSoC4/CyLib.c **** 
 268:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
 269:Generated_Source\PSoC4/CyLib.c ****         }
 270:Generated_Source\PSoC4/CyLib.c ****     }
 271:Generated_Source\PSoC4/CyLib.c **** 
 272:Generated_Source\PSoC4/CyLib.c **** 
 273:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 274:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableWcoLock
 275:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 276:Generated_Source\PSoC4/CyLib.c ****     *
 277:Generated_Source\PSoC4/CyLib.c ****     * Disables the IMO to WCO lock feature.
 278:Generated_Source\PSoC4/CyLib.c ****     *
 279:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, note that the IMO can lock to either WCO or USB
 280:Generated_Source\PSoC4/CyLib.c ****     * but not both.
 281:Generated_Source\PSoC4/CyLib.c ****     *
 282:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 283:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC Analog Coprocessor / PSoC 4200L.
 284:Generated_Source\PSoC4/CyLib.c ****     *
 285:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 286:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableWcoLock(void)
 287:Generated_Source\PSoC4/CyLib.c ****     {
 288:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_WCO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 289:Generated_Source\PSoC4/CyLib.c ****     }
 290:Generated_Source\PSoC4/CyLib.c **** 
 291:Generated_Source\PSoC4/CyLib.c **** 
 292:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 293:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetWcoLock
 294:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 295:Generated_Source\PSoC4/CyLib.c ****     *
 296:Generated_Source\PSoC4/CyLib.c ****     * Reports the IMO to WCO lock enable state.
 297:Generated_Source\PSoC4/CyLib.c ****     *
 298:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 299:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC Analog Coprocessor / PSoC 4200L.
 300:Generated_Source\PSoC4/CyLib.c ****     *
 301:Generated_Source\PSoC4/CyLib.c ****     * \return 1 if IMO to WCO lock is enabled.
 302:Generated_Source\PSoC4/CyLib.c ****     * \return 0 if IMO to WCO lock is disabled.
 303:Generated_Source\PSoC4/CyLib.c ****     *
 304:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 305:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoGetWcoLock(void)
 306:Generated_Source\PSoC4/CyLib.c ****     {
 307:Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_WCO_CONFIG_REG & CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE)) ?
 308:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 309:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 310:Generated_Source\PSoC4/CyLib.c ****     }
 311:Generated_Source\PSoC4/CyLib.c **** 
 312:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 313:Generated_Source\PSoC4/CyLib.c **** 
 314:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccaiT5A1.s 			page 10


 315:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 316:Generated_Source\PSoC4/CyLib.c **** 
 317:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 318:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableUsbLock
 319:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 320:Generated_Source\PSoC4/CyLib.c ****     *
 321:Generated_Source\PSoC4/CyLib.c ****     * Enables the IMO to USB lock feature.
 322:Generated_Source\PSoC4/CyLib.c ****     *
 323:Generated_Source\PSoC4/CyLib.c ****     * This function must be called before CySysClkWriteImoFreq().
 324:Generated_Source\PSoC4/CyLib.c ****     *
 325:Generated_Source\PSoC4/CyLib.c ****     * This function is called from CySysClkImoStart() function if USB lock
 326:Generated_Source\PSoC4/CyLib.c ****     * selected in the Design Wide Resources tab.
 327:Generated_Source\PSoC4/CyLib.c ****     *
 328:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 329:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 330:Generated_Source\PSoC4/CyLib.c ****     *
 331:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 332:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableUsbLock(void)
 333:Generated_Source\PSoC4/CyLib.c ****     {
 334:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 335:Generated_Source\PSoC4/CyLib.c ****             uint32 i;
 336:Generated_Source\PSoC4/CyLib.c ****             
 337:Generated_Source\PSoC4/CyLib.c ****             /* Check for new trim algorithm */
 338:Generated_Source\PSoC4/CyLib.c ****             uint32 CySysClkUsbCuSortTrim = ((CY_SFLASH_S1_TESTPGM_OLD_REV < (CY_SFLASH_S1_TESTPGM_R
 339:Generated_Source\PSoC4/CyLib.c ****                                                                             CY_SFLASH_S1_TESTPGM_RE
 340:Generated_Source\PSoC4/CyLib.c **** 
 341:Generated_Source\PSoC4/CyLib.c ****             /* Get current IMO frequency based on the register value */
 342:Generated_Source\PSoC4/CyLib.c ****             uint32 freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;
 343:Generated_Source\PSoC4/CyLib.c **** 
 344:Generated_Source\PSoC4/CyLib.c ****             for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 345:Generated_Source\PSoC4/CyLib.c ****             {
 346:Generated_Source\PSoC4/CyLib.c ****                 if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImoFreq
 347:Generated_Source\PSoC4/CyLib.c ****                 {
 348:Generated_Source\PSoC4/CyLib.c ****                     freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 349:Generated_Source\PSoC4/CyLib.c ****                     break;
 350:Generated_Source\PSoC4/CyLib.c ****                 }
 351:Generated_Source\PSoC4/CyLib.c ****             }
 352:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 353:Generated_Source\PSoC4/CyLib.c ****         
 354:Generated_Source\PSoC4/CyLib.c ****         /* Set oscillator interface control port to USB */
 355:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB)
 356:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_OSCINTF_CTL_REG = (CY_SYS_CLK_OSCINTF_CTL_REG & (uint32) ~CY_SYS_CLK_OSCINTF
 357:Generated_Source\PSoC4/CyLib.c ****                                           CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_USB;
 358:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB) */
 359:Generated_Source\PSoC4/CyLib.c **** 
 360:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 361:Generated_Source\PSoC4/CyLib.c ****            
 362:Generated_Source\PSoC4/CyLib.c ****             /* Save CY_SYS_CLK_IMO_TRIM4_REG and set IMO gain for USB lock */
 363:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoTrim4 = CY_SYS_CLK_IMO_TRIM4_REG;
 364:Generated_Source\PSoC4/CyLib.c ****             
 365:Generated_Source\PSoC4/CyLib.c ****             if(0u != CySysClkUsbCuSortTrim)
 366:Generated_Source\PSoC4/CyLib.c ****             {
 367:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoTrim5 = CY_PWR_BG_TRIM5_REG;
 368:Generated_Source\PSoC4/CyLib.c ****                 
 369:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM4_REG = (CySysClkImoTrim4 & (uint32) ~CY_SYS_CLK_IMO_TRIM4_GAIN_
 370:Generated_Source\PSoC4/CyLib.c ****                                             CY_SFLASH_USBMODE_IMO_GAIN_TRIM_REG;
 371:Generated_Source\PSoC4/CyLib.c ****                 CY_PWR_BG_TRIM5_REG = CY_SFLASH_USBMODE_IMO_TEMPCO_REG;
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccaiT5A1.s 			page 11


 372:Generated_Source\PSoC4/CyLib.c ****                 
 373:Generated_Source\PSoC4/CyLib.c ****             }
 374:Generated_Source\PSoC4/CyLib.c ****             else
 375:Generated_Source\PSoC4/CyLib.c ****             {
 376:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM4_REG = (CySysClkImoTrim4 & (uint32) ~CY_SYS_CLK_IMO_TRIM4_GAIN_
 377:Generated_Source\PSoC4/CyLib.c ****                                             CY_SYS_CLK_IMO_TRIM4_USB_GAIN;
 378:Generated_Source\PSoC4/CyLib.c **** 
 379:Generated_Source\PSoC4/CyLib.c ****             }
 380:Generated_Source\PSoC4/CyLib.c **** 
 381:Generated_Source\PSoC4/CyLib.c ****             if (48u == freq)
 382:Generated_Source\PSoC4/CyLib.c ****             {
 383:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM1_REG = (0u != CySysClkUsbCuSortTrim) ? 
 384:Generated_Source\PSoC4/CyLib.c ****                                            (uint32)CY_SFLASH_CU_IMO_TRIM_USBMODE_48_REG :
 385:Generated_Source\PSoC4/CyLib.c ****                                            (uint32)CY_SFLASH_IMO_TRIM_USBMODE_48_REG;
 386:Generated_Source\PSoC4/CyLib.c ****             }
 387:Generated_Source\PSoC4/CyLib.c ****             else if (24u == freq)
 388:Generated_Source\PSoC4/CyLib.c ****             {
 389:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM1_REG = (0u != CySysClkUsbCuSortTrim) ? 
 390:Generated_Source\PSoC4/CyLib.c ****                                            (uint32)CY_SFLASH_CU_IMO_TRIM_USBMODE_24_REG :
 391:Generated_Source\PSoC4/CyLib.c ****                                            (uint32)CY_SFLASH_IMO_TRIM_USBMODE_24_REG;
 392:Generated_Source\PSoC4/CyLib.c ****             }
 393:Generated_Source\PSoC4/CyLib.c ****             else
 394:Generated_Source\PSoC4/CyLib.c ****             {
 395:Generated_Source\PSoC4/CyLib.c ****                 /* Do nothing */
 396:Generated_Source\PSoC4/CyLib.c ****             }
 397:Generated_Source\PSoC4/CyLib.c ****             
 398:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 399:Generated_Source\PSoC4/CyLib.c **** 
 400:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_USBDEVv2_CR1_REG |= CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK;
 401:Generated_Source\PSoC4/CyLib.c ****     }
 402:Generated_Source\PSoC4/CyLib.c **** 
 403:Generated_Source\PSoC4/CyLib.c **** 
 404:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 405:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableUsbLock
 406:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 407:Generated_Source\PSoC4/CyLib.c ****     *
 408:Generated_Source\PSoC4/CyLib.c ****     * Disables the IMO to USB lock feature.
 409:Generated_Source\PSoC4/CyLib.c ****     *
 410:Generated_Source\PSoC4/CyLib.c ****     * This function is called from CySysClkImoStop() function if USB lock selected
 411:Generated_Source\PSoC4/CyLib.c ****     * in the Design Wide Resources tab.
 412:Generated_Source\PSoC4/CyLib.c ****     *
 413:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 414:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 415:Generated_Source\PSoC4/CyLib.c ****     *
 416:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 417:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableUsbLock(void)
 418:Generated_Source\PSoC4/CyLib.c ****     {
 419:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 420:Generated_Source\PSoC4/CyLib.c ****             uint32 i;
 421:Generated_Source\PSoC4/CyLib.c ****             
 422:Generated_Source\PSoC4/CyLib.c ****             /* Check for new trim algorithm */
 423:Generated_Source\PSoC4/CyLib.c ****             uint32 CySysClkUsbCuSortTrim = ((CY_SFLASH_S1_TESTPGM_OLD_REV < (CY_SFLASH_S1_TESTPGM_R
 424:Generated_Source\PSoC4/CyLib.c ****                                                                             CY_SFLASH_S1_TESTPGM_RE
 425:Generated_Source\PSoC4/CyLib.c **** 
 426:Generated_Source\PSoC4/CyLib.c ****             /* Get current IMO frequency based on the register value */
 427:Generated_Source\PSoC4/CyLib.c ****             uint32 freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;;
 428:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccaiT5A1.s 			page 12


 429:Generated_Source\PSoC4/CyLib.c ****             for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 430:Generated_Source\PSoC4/CyLib.c ****             {
 431:Generated_Source\PSoC4/CyLib.c ****                 if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImoFreq
 432:Generated_Source\PSoC4/CyLib.c ****                 {
 433:Generated_Source\PSoC4/CyLib.c ****                     freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 434:Generated_Source\PSoC4/CyLib.c ****                     break;
 435:Generated_Source\PSoC4/CyLib.c ****                 }
 436:Generated_Source\PSoC4/CyLib.c ****             }           
 437:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 438:Generated_Source\PSoC4/CyLib.c ****         
 439:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_USBDEVv2_CR1_REG &= (uint32) ~CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK;
 440:Generated_Source\PSoC4/CyLib.c **** 
 441:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 442:Generated_Source\PSoC4/CyLib.c ****             /* Restore CY_SYS_CLK_IMO_TRIM4_REG */
 443:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM4_REG = ((CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_
 444:Generated_Source\PSoC4/CyLib.c ****                                         (CySysClkImoTrim4 & CY_SYS_CLK_IMO_TRIM4_GAIN_MASK));
 445:Generated_Source\PSoC4/CyLib.c **** 
 446:Generated_Source\PSoC4/CyLib.c ****             if(0u != CySysClkUsbCuSortTrim)
 447:Generated_Source\PSoC4/CyLib.c ****             {
 448:Generated_Source\PSoC4/CyLib.c ****                 CY_PWR_BG_TRIM5_REG = CySysClkImoTrim5;
 449:Generated_Source\PSoC4/CyLib.c ****             }
 450:Generated_Source\PSoC4/CyLib.c ****             
 451:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
 452:Generated_Source\PSoC4/CyLib.c ****             
 453:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 454:Generated_Source\PSoC4/CyLib.c ****     }
 455:Generated_Source\PSoC4/CyLib.c **** 
 456:Generated_Source\PSoC4/CyLib.c **** 
 457:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 458:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetUsbLock
 459:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 460:Generated_Source\PSoC4/CyLib.c ****     *
 461:Generated_Source\PSoC4/CyLib.c ****     * Reports the IMO to USB lock enable state.
 462:Generated_Source\PSoC4/CyLib.c ****     *
 463:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 464:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 465:Generated_Source\PSoC4/CyLib.c ****     *
 466:Generated_Source\PSoC4/CyLib.c ****     * \return 1 if IMO to USB lock is enabled.
 467:Generated_Source\PSoC4/CyLib.c ****     * \return 0 if IMO to USB lock is disabled.
 468:Generated_Source\PSoC4/CyLib.c ****     *
 469:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 470:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoGetUsbLock(void)
 471:Generated_Source\PSoC4/CyLib.c ****     {
 472:Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_USBDEVv2_CR1_REG & CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK)) ?
 473:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 474:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 475:Generated_Source\PSoC4/CyLib.c ****     }
 476:Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 477:Generated_Source\PSoC4/CyLib.c **** 
 478:Generated_Source\PSoC4/CyLib.c **** 
 479:Generated_Source\PSoC4/CyLib.c **** 
 480:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 481:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteHfclkDirect
 482:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 483:Generated_Source\PSoC4/CyLib.c **** *
 484:Generated_Source\PSoC4/CyLib.c **** * Selects the direct source for the HFCLK.
 485:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccaiT5A1.s 			page 13


 486:Generated_Source\PSoC4/CyLib.c **** * The new source must be running and stable before calling this function.
 487:Generated_Source\PSoC4/CyLib.c **** *
 488:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000:
 489:Generated_Source\PSoC4/CyLib.c **** * The SYSCLK has a maximum speed of 16 MHz, so HFCLK and SYSCLK dividers should
 490:Generated_Source\PSoC4/CyLib.c **** * be selected in a way to not to exceed 16 MHz for the System clock.
 491:Generated_Source\PSoC4/CyLib.c **** *
 492:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during device operation, call
 493:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
 494:Generated_Source\PSoC4/CyLib.c **** * of clock cycles the cache will wait before sampling data comes back from
 495:Generated_Source\PSoC4/CyLib.c **** * Flash. If the SYSCLK clock frequency decreases, you can call
 496:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() to improve the CPU performance. See
 497:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() description for more information.
 498:Generated_Source\PSoC4/CyLib.c **** *
 499:Generated_Source\PSoC4/CyLib.c **** * Do not select PLL as the source for HFCLK if PLL output frequency exceeds
 500:Generated_Source\PSoC4/CyLib.c **** * maximum permissible value for HFCLK.
 501:Generated_Source\PSoC4/CyLib.c **** *
 502:Generated_Source\PSoC4/CyLib.c **** * \param clkSelect One of the available HFCLK direct sources.
 503:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_IMO     IMO.
 504:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_EXTCLK  External clock pin.
 505:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_ECO     External crystal oscillator. Applicable for
 506:Generated_Source\PSoC4/CyLib.c **** *                          PSoC 4100 BLE / PSoC 4200 BLE / PSoC 4200L /
 507:Generated_Source\PSoC4/CyLib.c **** *                          4100S with ECO.
 508:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_PLL0    PLL#0. Applicable for PSoC 4200L /
 509:Generated_Source\PSoC4/CyLib.c **** *                          4100S with PLL.
 510:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_PLL1    PLL#1. Applicable for PSoC 4200L.
 511:Generated_Source\PSoC4/CyLib.c **** *
 512:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 513:Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteHfclkDirect(uint32 clkSelect)
 514:Generated_Source\PSoC4/CyLib.c **** {
 196              		.loc 1 514 0
 197              		.cfi_startproc
 198              		@ args = 0, pretend = 0, frame = 16
 199              		@ frame_needed = 1, uses_anonymous_args = 0
 200 0000 90B5     		push	{r4, r7, lr}
 201              		.cfi_def_cfa_offset 12
 202              		.cfi_offset 4, -12
 203              		.cfi_offset 7, -8
 204              		.cfi_offset 14, -4
 205 0002 85B0     		sub	sp, sp, #20
 206              		.cfi_def_cfa_offset 32
 207 0004 00AF     		add	r7, sp, #0
 208              		.cfi_def_cfa_register 7
 209 0006 7860     		str	r0, [r7, #4]
 515:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 516:Generated_Source\PSoC4/CyLib.c ****     uint32 tmpReg;
 517:Generated_Source\PSoC4/CyLib.c ****     
 518:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_SRSSLT && CY_IP_PLL)
 519:Generated_Source\PSoC4/CyLib.c ****         uint8 i = 0u;
 520:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_IP_SRSSLT && CY_IP_PLL) */
 521:Generated_Source\PSoC4/CyLib.c **** 
 522:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 210              		.loc 1 522 0
 211 0008 0F23     		movs	r3, #15
 212 000a FC18     		adds	r4, r7, r3
 213 000c FFF7FEFF 		bl	CyEnterCriticalSection
 214 0010 0300     		movs	r3, r0
 215 0012 2370     		strb	r3, [r4]
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccaiT5A1.s 			page 14


 523:Generated_Source\PSoC4/CyLib.c **** 
 524:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSLT && CY_IP_PLL)
 525:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_HFCLK_PLL0 == clkSelect) || (CY_SYS_CLK_HFCLK_ECO == clkSelect))
 526:Generated_Source\PSoC4/CyLib.c ****     {
 527:Generated_Source\PSoC4/CyLib.c ****         tmpReg = CY_SYS_CLK_SELECT_REG & ~CY_SYS_CLK_SELECT_DIRECT_SEL_MASK;
 528:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= CY_SYS_CLK_HFCLK_IMO;
 529:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_SELECT_REG = tmpReg;        
 530:Generated_Source\PSoC4/CyLib.c ****         
 531:Generated_Source\PSoC4/CyLib.c ****         /* SRSSLT block does not have registers to select PLL. It is part of EXCO */ 
 532:Generated_Source\PSoC4/CyLib.c ****         tmpReg = CY_SYS_ECO_CLK_SELECT_REG & ~CY_SYS_ECO_CLK_SELECT_ECO_PLL_MASK;
 533:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= ((clkSelect & CY_SYS_CLK_SELECT_HFCLK_SEL_PLL_MASK) >> CY_SYS_CLK_SELECT_HFCLK_PL
 534:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_ECO_CLK_SELECT_REG = tmpReg;
 535:Generated_Source\PSoC4/CyLib.c ****         
 536:Generated_Source\PSoC4/CyLib.c ****         /* Generate clock sequence to change clock source in CY_SYS_ECO_CLK_SELECT_REG */
 537:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_EXCO_PGM_CLK_REG |= CY_SYS_EXCO_PGM_CLK_ENABLE_MASK;
 538:Generated_Source\PSoC4/CyLib.c ****         
 539:Generated_Source\PSoC4/CyLib.c ****         for(i = 0u; i < CY_SYS_EXCO_PGM_CLK_SEQ_GENERATOR; i++)
 540:Generated_Source\PSoC4/CyLib.c ****         {
 541:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_EXCO_PGM_CLK_REG |= CY_SYS_EXCO_PGM_CLK_CLK_ECO_MASK;
 542:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_EXCO_PGM_CLK_REG &= ~CY_SYS_EXCO_PGM_CLK_CLK_ECO_MASK;
 543:Generated_Source\PSoC4/CyLib.c ****         }
 544:Generated_Source\PSoC4/CyLib.c ****         
 545:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_EXCO_PGM_CLK_REG &= ~CY_SYS_EXCO_PGM_CLK_ENABLE_MASK;    
 546:Generated_Source\PSoC4/CyLib.c ****     }
 547:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSLT && CY_IP_PLL) */
 548:Generated_Source\PSoC4/CyLib.c **** 
 549:Generated_Source\PSoC4/CyLib.c ****     tmpReg = CY_SYS_CLK_SELECT_REG & ~(CY_SYS_CLK_SELECT_DIRECT_SEL_MASK |
 216              		.loc 1 549 0
 217 0014 0B4B     		ldr	r3, .L8
 218 0016 1B68     		ldr	r3, [r3]
 219 0018 0722     		movs	r2, #7
 220 001a 9343     		bics	r3, r2
 221 001c BB60     		str	r3, [r7, #8]
 550:Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 551:Generated_Source\PSoC4/CyLib.c **** 
 552:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
 553:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_HFCLK_PLL0 == clkSelect) || (CY_SYS_CLK_HFCLK_PLL1 == clkSelect))
 554:Generated_Source\PSoC4/CyLib.c ****     {
 555:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= (clkSelect & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 556:Generated_Source\PSoC4/CyLib.c ****     }
 557:Generated_Source\PSoC4/CyLib.c ****     else
 558:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
 559:Generated_Source\PSoC4/CyLib.c ****     {
 560:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= (clkSelect & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
 222              		.loc 1 560 0
 223 001e 7B68     		ldr	r3, [r7, #4]
 224 0020 0722     		movs	r2, #7
 225 0022 1340     		ands	r3, r2
 226 0024 BA68     		ldr	r2, [r7, #8]
 227 0026 1343     		orrs	r3, r2
 228 0028 BB60     		str	r3, [r7, #8]
 561:Generated_Source\PSoC4/CyLib.c ****     }   
 562:Generated_Source\PSoC4/CyLib.c ****     
 563:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = tmpReg;
 229              		.loc 1 563 0
 230 002a 064B     		ldr	r3, .L8
 231 002c BA68     		ldr	r2, [r7, #8]
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccaiT5A1.s 			page 15


 232 002e 1A60     		str	r2, [r3]
 564:Generated_Source\PSoC4/CyLib.c ****     
 565:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 233              		.loc 1 565 0
 234 0030 0F23     		movs	r3, #15
 235 0032 FB18     		adds	r3, r7, r3
 236 0034 1B78     		ldrb	r3, [r3]
 237 0036 1800     		movs	r0, r3
 238 0038 FFF7FEFF 		bl	CyExitCriticalSection
 566:Generated_Source\PSoC4/CyLib.c **** }
 239              		.loc 1 566 0
 240 003c C046     		nop
 241 003e BD46     		mov	sp, r7
 242 0040 05B0     		add	sp, sp, #20
 243              		@ sp needed
 244 0042 90BD     		pop	{r4, r7, pc}
 245              	.L9:
 246              		.align	2
 247              	.L8:
 248 0044 00010B40 		.word	1074462976
 249              		.cfi_endproc
 250              	.LFE2:
 251              		.size	CySysClkWriteHfclkDirect, .-CySysClkWriteHfclkDirect
 252              		.section	.text.CySysEnablePumpClock,"ax",%progbits
 253              		.align	2
 254              		.global	CySysEnablePumpClock
 255              		.code	16
 256              		.thumb_func
 257              		.type	CySysEnablePumpClock, %function
 258              	CySysEnablePumpClock:
 259              	.LFB3:
 567:Generated_Source\PSoC4/CyLib.c **** 
 568:Generated_Source\PSoC4/CyLib.c **** 
 569:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 570:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysEnablePumpClock
 571:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 572:Generated_Source\PSoC4/CyLib.c **** *
 573:Generated_Source\PSoC4/CyLib.c **** * Enables / disables the pump clock.
 574:Generated_Source\PSoC4/CyLib.c **** *
 575:Generated_Source\PSoC4/CyLib.c **** * \param enable  
 576:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_PUMP_DISABLE - Disables the pump clock
 577:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_PUMP_ENABLE - Enables and restores the operating source of 
 578:Generated_Source\PSoC4/CyLib.c **** * the pump clock.
 579:Generated_Source\PSoC4/CyLib.c **** *
 580:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
 581:Generated_Source\PSoC4/CyLib.c **** *  Enabling/disabling the pump clock does not guarantee glitch free operation 
 582:Generated_Source\PSoC4/CyLib.c **** *  when changing the IMO parameters or clock divider settings.
 583:Generated_Source\PSoC4/CyLib.c **** *
 584:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 585:Generated_Source\PSoC4/CyLib.c **** void CySysEnablePumpClock(uint32 enable)
 586:Generated_Source\PSoC4/CyLib.c **** {
 260              		.loc 1 586 0
 261              		.cfi_startproc
 262              		@ args = 0, pretend = 0, frame = 8
 263              		@ frame_needed = 1, uses_anonymous_args = 0
 264 0000 80B5     		push	{r7, lr}
 265              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccaiT5A1.s 			page 16


 266              		.cfi_offset 7, -8
 267              		.cfi_offset 14, -4
 268 0002 82B0     		sub	sp, sp, #8
 269              		.cfi_def_cfa_offset 16
 270 0004 00AF     		add	r7, sp, #0
 271              		.cfi_def_cfa_register 7
 272 0006 7860     		str	r0, [r7, #4]
 587:Generated_Source\PSoC4/CyLib.c ****     #if(CY_IP_SRSSV2)
 588:Generated_Source\PSoC4/CyLib.c ****         if (0u != (CY_SYS_CLK_PUMP_ENABLE & enable))
 273              		.loc 1 588 0
 274 0008 7B68     		ldr	r3, [r7, #4]
 275 000a 0122     		movs	r2, #1
 276 000c 1340     		ands	r3, r2
 277 000e 08D0     		beq	.L11
 589:Generated_Source\PSoC4/CyLib.c ****         {
 590:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_CONFIG_REG |= (CySysClkPumpConfig << CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_SHIF
 278              		.loc 1 590 0
 279 0010 0C4A     		ldr	r2, .L14
 280 0012 0C4B     		ldr	r3, .L14
 281 0014 1968     		ldr	r1, [r3]
 282 0016 0C4B     		ldr	r3, .L14+4
 283 0018 1B68     		ldr	r3, [r3]
 284 001a 5B06     		lsls	r3, r3, #25
 285 001c 0B43     		orrs	r3, r1
 286 001e 1360     		str	r3, [r2]
 591:Generated_Source\PSoC4/CyLib.c ****         }
 592:Generated_Source\PSoC4/CyLib.c ****         else
 593:Generated_Source\PSoC4/CyLib.c ****         {
 594:Generated_Source\PSoC4/CyLib.c ****             CySysClkPumpConfig = (CY_SYS_CLK_IMO_CONFIG_REG >> CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_SHIFT
 595:Generated_Source\PSoC4/CyLib.c ****                                   CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_MASK;
 596:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_CONFIG_REG &= ~(CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_MASK << CY_SYS_CLK_IMO_CO
 597:Generated_Source\PSoC4/CyLib.c ****         }
 598:Generated_Source\PSoC4/CyLib.c ****     #else /* CY_IP_SRSSLT */
 599:Generated_Source\PSoC4/CyLib.c ****         if (0u != (CY_SYS_CLK_PUMP_ENABLE & enable))
 600:Generated_Source\PSoC4/CyLib.c ****         {
 601:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG |= (CySysClkPumpConfig << CY_SYS_CLK_SELECT_PUMP_SEL_SHIFT);
 602:Generated_Source\PSoC4/CyLib.c ****         }
 603:Generated_Source\PSoC4/CyLib.c ****         else
 604:Generated_Source\PSoC4/CyLib.c ****         {
 605:Generated_Source\PSoC4/CyLib.c ****             CySysClkPumpConfig = (CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_PUMP_SEL_SHIFT) & 
 606:Generated_Source\PSoC4/CyLib.c ****                                   CY_SYS_CLK_SELECT_PUMP_SEL_MASK;
 607:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG &= ~(CY_SYS_CLK_SELECT_PUMP_SEL_MASK << CY_SYS_CLK_SELECT_PUMP_SE
 608:Generated_Source\PSoC4/CyLib.c ****         }
 609:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_SRSSV2) */
 610:Generated_Source\PSoC4/CyLib.c **** }
 287              		.loc 1 610 0
 288 0020 0CE0     		b	.L13
 289              	.L11:
 594:Generated_Source\PSoC4/CyLib.c ****                                   CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_MASK;
 290              		.loc 1 594 0
 291 0022 084B     		ldr	r3, .L14
 292 0024 1B68     		ldr	r3, [r3]
 293 0026 5B0E     		lsrs	r3, r3, #25
 294 0028 0722     		movs	r2, #7
 295 002a 1A40     		ands	r2, r3
 296 002c 064B     		ldr	r3, .L14+4
 297 002e 1A60     		str	r2, [r3]
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccaiT5A1.s 			page 17


 596:Generated_Source\PSoC4/CyLib.c ****         }
 298              		.loc 1 596 0
 299 0030 044B     		ldr	r3, .L14
 300 0032 044A     		ldr	r2, .L14
 301 0034 1268     		ldr	r2, [r2]
 302 0036 0549     		ldr	r1, .L14+8
 303 0038 0A40     		ands	r2, r1
 304 003a 1A60     		str	r2, [r3]
 305              	.L13:
 306              		.loc 1 610 0
 307 003c C046     		nop
 308 003e BD46     		mov	sp, r7
 309 0040 02B0     		add	sp, sp, #8
 310              		@ sp needed
 311 0042 80BD     		pop	{r7, pc}
 312              	.L15:
 313              		.align	2
 314              	.L14:
 315 0044 08010B40 		.word	1074462984
 316 0048 00000000 		.word	CySysClkPumpConfig
 317 004c FFFFFFF1 		.word	-234881025
 318              		.cfi_endproc
 319              	.LFE3:
 320              		.size	CySysEnablePumpClock, .-CySysEnablePumpClock
 321              		.section	.text.CySysClkGetSysclkSource,"ax",%progbits
 322              		.align	2
 323              		.global	CySysClkGetSysclkSource
 324              		.code	16
 325              		.thumb_func
 326              		.type	CySysClkGetSysclkSource, %function
 327              	CySysClkGetSysclkSource:
 328              	.LFB4:
 611:Generated_Source\PSoC4/CyLib.c **** 
 612:Generated_Source\PSoC4/CyLib.c **** 
 613:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 614:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkGetSysclkSource
 615:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 616:Generated_Source\PSoC4/CyLib.c **** *
 617:Generated_Source\PSoC4/CyLib.c **** * Returns the source of the System clock.
 618:Generated_Source\PSoC4/CyLib.c **** *
 619:Generated_Source\PSoC4/CyLib.c **** * \return The same as \ref CySysClkWriteHfclkDirect() function parameters.
 620:Generated_Source\PSoC4/CyLib.c **** *
 621:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 622:Generated_Source\PSoC4/CyLib.c **** uint32 CySysClkGetSysclkSource(void)
 623:Generated_Source\PSoC4/CyLib.c **** {
 329              		.loc 1 623 0
 330              		.cfi_startproc
 331              		@ args = 0, pretend = 0, frame = 8
 332              		@ frame_needed = 1, uses_anonymous_args = 0
 333 0000 90B5     		push	{r4, r7, lr}
 334              		.cfi_def_cfa_offset 12
 335              		.cfi_offset 4, -12
 336              		.cfi_offset 7, -8
 337              		.cfi_offset 14, -4
 338 0002 83B0     		sub	sp, sp, #12
 339              		.cfi_def_cfa_offset 24
 340 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccaiT5A1.s 			page 18


 341              		.cfi_def_cfa_register 7
 624:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 625:Generated_Source\PSoC4/CyLib.c ****     uint32 sysclkSource;
 626:Generated_Source\PSoC4/CyLib.c **** 
 627:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 342              		.loc 1 627 0
 343 0006 FC1D     		adds	r4, r7, #7
 344 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 345 000c 0300     		movs	r3, r0
 346 000e 2370     		strb	r3, [r4]
 628:Generated_Source\PSoC4/CyLib.c **** 
 629:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
 630:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK) != 0u)
 631:Generated_Source\PSoC4/CyLib.c ****     {
 632:Generated_Source\PSoC4/CyLib.c ****         sysclkSource = (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 633:Generated_Source\PSoC4/CyLib.c ****     }
 634:Generated_Source\PSoC4/CyLib.c ****     else
 635:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
 636:Generated_Source\PSoC4/CyLib.c ****     {
 637:Generated_Source\PSoC4/CyLib.c ****         sysclkSource = (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
 347              		.loc 1 637 0
 348 0010 074B     		ldr	r3, .L18
 349 0012 1B68     		ldr	r3, [r3]
 350 0014 0722     		movs	r2, #7
 351 0016 1340     		ands	r3, r2
 352 0018 3B60     		str	r3, [r7]
 638:Generated_Source\PSoC4/CyLib.c **** 
 639:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_SRSSLT && CY_IP_PLL)
 640:Generated_Source\PSoC4/CyLib.c ****         sysclkSource |= (((uint32)(CY_SYS_ECO_CLK_SELECT_REG & CY_SYS_ECO_CLK_SELECT_ECO_PLL_MASK))
 641:Generated_Source\PSoC4/CyLib.c ****                          CY_SYS_CLK_SELECT_HFCLK_PLL_SHIFT);
 642:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_IP_SRSSLT && CY_IP_PLL) */
 643:Generated_Source\PSoC4/CyLib.c ****         
 644:Generated_Source\PSoC4/CyLib.c ****     }
 645:Generated_Source\PSoC4/CyLib.c **** 
 646:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 353              		.loc 1 646 0
 354 001a FB1D     		adds	r3, r7, #7
 355 001c 1B78     		ldrb	r3, [r3]
 356 001e 1800     		movs	r0, r3
 357 0020 FFF7FEFF 		bl	CyExitCriticalSection
 647:Generated_Source\PSoC4/CyLib.c **** 
 648:Generated_Source\PSoC4/CyLib.c ****     return (sysclkSource);
 358              		.loc 1 648 0
 359 0024 3B68     		ldr	r3, [r7]
 649:Generated_Source\PSoC4/CyLib.c **** }
 360              		.loc 1 649 0
 361 0026 1800     		movs	r0, r3
 362 0028 BD46     		mov	sp, r7
 363 002a 03B0     		add	sp, sp, #12
 364              		@ sp needed
 365 002c 90BD     		pop	{r4, r7, pc}
 366              	.L19:
 367 002e C046     		.align	2
 368              	.L18:
 369 0030 00010B40 		.word	1074462976
 370              		.cfi_endproc
 371              	.LFE4:
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccaiT5A1.s 			page 19


 372              		.size	CySysClkGetSysclkSource, .-CySysClkGetSysclkSource
 373              		.section	.text.CySysClkWriteSysclkDiv,"ax",%progbits
 374              		.align	2
 375              		.global	CySysClkWriteSysclkDiv
 376              		.code	16
 377              		.thumb_func
 378              		.type	CySysClkWriteSysclkDiv, %function
 379              	CySysClkWriteSysclkDiv:
 380              	.LFB5:
 650:Generated_Source\PSoC4/CyLib.c **** 
 651:Generated_Source\PSoC4/CyLib.c **** 
 652:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 653:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteSysclkDiv
 654:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 655:Generated_Source\PSoC4/CyLib.c **** *
 656:Generated_Source\PSoC4/CyLib.c **** * Selects the prescaler divide amount for SYSCLK from HFCLK.
 657:Generated_Source\PSoC4/CyLib.c **** *
 658:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 659:Generated_Source\PSoC4/CyLib.c **** * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 660:Generated_Source\PSoC4/CyLib.c **** *
 661:Generated_Source\PSoC4/CyLib.c **** * PSoC 4100 \ PSoC 4100 BLE \ PSoC 4100M: The SYSCLK has the speed of 24 MHz,
 662:Generated_Source\PSoC4/CyLib.c **** * so HFCLK and SYSCLK dividers should be selected in a way, not to exceed 24 MHz
 663:Generated_Source\PSoC4/CyLib.c **** * for SYSCLK.
 664:Generated_Source\PSoC4/CyLib.c **** *
 665:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during the device operation, call
 666:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 667:Generated_Source\PSoC4/CyLib.c **** * number of clock cycles the cache will wait before sampling data comes back
 668:Generated_Source\PSoC4/CyLib.c **** * from Flash. If the SYSCLK clock frequency decreases, you can call
 669:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 670:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() description for more information.
 671:Generated_Source\PSoC4/CyLib.c **** *
 672:Generated_Source\PSoC4/CyLib.c **** * \param divider Power of 2 prescaler selection
 673:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV1        SYSCLK = HFCLK / 1
 674:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV2        SYSCLK = HFCLK / 2
 675:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV4        SYSCLK = HFCLK / 4
 676:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV8        SYSCLK = HFCLK / 8
 677:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV16       SYSCLK = HFCLK / 16  (N/A for 4000 Family)
 678:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV32       SYSCLK = HFCLK / 32  (N/A for 4000 Family)
 679:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV64       SYSCLK = HFCLK / 64  (N/A for 4000 Family)
 680:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV128      SYSCLK = HFCLK / 128 (N/A for 4000 Family)
 681:Generated_Source\PSoC4/CyLib.c **** *
 682:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 683:Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteSysclkDiv(uint32 divider)
 684:Generated_Source\PSoC4/CyLib.c **** {
 381              		.loc 1 684 0
 382              		.cfi_startproc
 383              		@ args = 0, pretend = 0, frame = 16
 384              		@ frame_needed = 1, uses_anonymous_args = 0
 385 0000 90B5     		push	{r4, r7, lr}
 386              		.cfi_def_cfa_offset 12
 387              		.cfi_offset 4, -12
 388              		.cfi_offset 7, -8
 389              		.cfi_offset 14, -4
 390 0002 85B0     		sub	sp, sp, #20
 391              		.cfi_def_cfa_offset 32
 392 0004 00AF     		add	r7, sp, #0
 393              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccaiT5A1.s 			page 20


 394 0006 7860     		str	r0, [r7, #4]
 685:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 686:Generated_Source\PSoC4/CyLib.c **** 
 687:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 395              		.loc 1 687 0
 396 0008 0F23     		movs	r3, #15
 397 000a FC18     		adds	r4, r7, r3
 398 000c FFF7FEFF 		bl	CyEnterCriticalSection
 399 0010 0300     		movs	r3, r0
 400 0012 2370     		strb	r3, [r4]
 688:Generated_Source\PSoC4/CyLib.c **** 
 689:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = ((uint32)(((uint32)divider & CY_SYS_CLK_SELECT_SYSCLK_DIV_MASK) <<
 401              		.loc 1 689 0
 402 0014 0A4B     		ldr	r3, .L21
 403 0016 7A68     		ldr	r2, [r7, #4]
 404 0018 D104     		lsls	r1, r2, #19
 405 001a E022     		movs	r2, #224
 406 001c 9203     		lsls	r2, r2, #14
 407 001e 1140     		ands	r1, r2
 690:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 691:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_CLK_SELECT_REG & ((uint32)(~(uint32)(CY_SYS_CLK_SELECT_SYSCLK_D
 408              		.loc 1 691 0
 409 0020 074A     		ldr	r2, .L21
 410 0022 1268     		ldr	r2, [r2]
 411 0024 0748     		ldr	r0, .L21+4
 412 0026 0240     		ands	r2, r0
 690:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 413              		.loc 1 690 0
 414 0028 0A43     		orrs	r2, r1
 689:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 415              		.loc 1 689 0
 416 002a 1A60     		str	r2, [r3]
 692:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT))));
 693:Generated_Source\PSoC4/CyLib.c **** 
 694:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 417              		.loc 1 694 0
 418 002c 0F23     		movs	r3, #15
 419 002e FB18     		adds	r3, r7, r3
 420 0030 1B78     		ldrb	r3, [r3]
 421 0032 1800     		movs	r0, r3
 422 0034 FFF7FEFF 		bl	CyExitCriticalSection
 695:Generated_Source\PSoC4/CyLib.c **** }
 423              		.loc 1 695 0
 424 0038 C046     		nop
 425 003a BD46     		mov	sp, r7
 426 003c 05B0     		add	sp, sp, #20
 427              		@ sp needed
 428 003e 90BD     		pop	{r4, r7, pc}
 429              	.L22:
 430              		.align	2
 431              	.L21:
 432 0040 00010B40 		.word	1074462976
 433 0044 FFFFC7FF 		.word	-3670017
 434              		.cfi_endproc
 435              	.LFE5:
 436              		.size	CySysClkWriteSysclkDiv, .-CySysClkWriteSysclkDiv
 437              		.section	.text.CySysClkWriteImoFreq,"ax",%progbits
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccaiT5A1.s 			page 21


 438              		.align	2
 439              		.global	CySysClkWriteImoFreq
 440              		.code	16
 441              		.thumb_func
 442              		.type	CySysClkWriteImoFreq, %function
 443              	CySysClkWriteImoFreq:
 444              	.LFB6:
 696:Generated_Source\PSoC4/CyLib.c **** 
 697:Generated_Source\PSoC4/CyLib.c **** 
 698:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 699:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteImoFreq
 700:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 701:Generated_Source\PSoC4/CyLib.c **** *
 702:Generated_Source\PSoC4/CyLib.c **** * Sets the frequency of the IMO.
 703:Generated_Source\PSoC4/CyLib.c **** *
 704:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 705:Generated_Source\PSoC4/CyLib.c **** * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 706:Generated_Source\PSoC4/CyLib.c **** *
 707:Generated_Source\PSoC4/CyLib.c **** * PSoC 4100 \ PSoC 4100 BLE \ PSoC 4100M: The SYSCLK has the speed of 24 MHz,
 708:Generated_Source\PSoC4/CyLib.c **** * so HFCLK and SYSCLK dividers should be selected in a way, not to exceed 24 MHz
 709:Generated_Source\PSoC4/CyLib.c **** * for SYSCLK.
 710:Generated_Source\PSoC4/CyLib.c **** *
 711:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200M and PSoC 4200L device families, if WCO lock feature is enabled
 712:Generated_Source\PSoC4/CyLib.c **** * then this API will disable the lock, write the new IMO frequency and then
 713:Generated_Source\PSoC4/CyLib.c **** * re-enable the lock.
 714:Generated_Source\PSoC4/CyLib.c **** *
 715:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200L device families, this function enables the USB lock when 24 or
 716:Generated_Source\PSoC4/CyLib.c **** * 48 MHz passed as a parameter if the USB lock option is enabled in Design Wide
 717:Generated_Source\PSoC4/CyLib.c **** * Resources tab or CySysClkImoEnableUsbLock() was called before. Note the USB
 718:Generated_Source\PSoC4/CyLib.c **** * lock is disabled during IMO frequency change.
 719:Generated_Source\PSoC4/CyLib.c **** *
 720:Generated_Source\PSoC4/CyLib.c **** * The CPU is halted if new frequency is invalid and project is compiled
 721:Generated_Source\PSoC4/CyLib.c **** * in debug mode.
 722:Generated_Source\PSoC4/CyLib.c **** *
 723:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during the device operation, call
 724:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 725:Generated_Source\PSoC4/CyLib.c **** * number of clock cycles the cache will wait before sampling data comes back
 726:Generated_Source\PSoC4/CyLib.c **** * from Flash. If the SYSCLK clock frequency decreases, you can call
 727:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 728:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() description for more information.
 729:Generated_Source\PSoC4/CyLib.c **** *
 730:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The System Clock (SYSCLK) has maximum speed of 16 MHz, so HFCLK
 731:Generated_Source\PSoC4/CyLib.c **** * and SYSCLK dividers should be selected in a way, to not to exceed 16 MHz for
 732:Generated_Source\PSoC4/CyLib.c **** * the System clock.
 733:Generated_Source\PSoC4/CyLib.c **** *
 734:Generated_Source\PSoC4/CyLib.c **** * \param freq All PSoC 4 families excluding the following: Valid range [3-48]
 735:Generated_Source\PSoC4/CyLib.c **** * with step size equals 1. PSoC 4000: Valid values are 24, 32, and 48.
 736:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000S / PSoC 4100S / PSoC Analog Coprocessor: Valid range [24-48] with 
 737:Generated_Source\PSoC4/CyLib.c **** * step size equals 4.
 738:Generated_Source\PSoC4/CyLib.c **** *
 739:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 740:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
 741:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
 742:Generated_Source\PSoC4/CyLib.c ****     {
 445              		.loc 1 742 0
 446              		.cfi_startproc
 447              		@ args = 0, pretend = 0, frame = 16
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccaiT5A1.s 			page 22


 448              		@ frame_needed = 1, uses_anonymous_args = 0
 449 0000 90B5     		push	{r4, r7, lr}
 450              		.cfi_def_cfa_offset 12
 451              		.cfi_offset 4, -12
 452              		.cfi_offset 7, -8
 453              		.cfi_offset 14, -4
 454 0002 85B0     		sub	sp, sp, #20
 455              		.cfi_def_cfa_offset 32
 456 0004 00AF     		add	r7, sp, #0
 457              		.cfi_def_cfa_register 7
 458 0006 7860     		str	r0, [r7, #4]
 743:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 744:Generated_Source\PSoC4/CyLib.c ****             volatile uint32   parameters[2u];
 745:Generated_Source\PSoC4/CyLib.c ****             volatile uint32   regValues[4u];
 746:Generated_Source\PSoC4/CyLib.c ****         #else
 747:Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim4;
 748:Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim5;
 749:Generated_Source\PSoC4/CyLib.c ****             uint8  newImoTrim2Value;
 750:Generated_Source\PSoC4/CyLib.c ****             uint8  currentImoTrim2Value;
 751:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FM) */
 752:Generated_Source\PSoC4/CyLib.c **** 
 753:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 754:Generated_Source\PSoC4/CyLib.c ****             uint32 wcoLock = 0u;
 755:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 756:Generated_Source\PSoC4/CyLib.c **** 
 757:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 758:Generated_Source\PSoC4/CyLib.c ****             uint32 usbLock = 0u;
 759:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 760:Generated_Source\PSoC4/CyLib.c **** 
 761:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 762:Generated_Source\PSoC4/CyLib.c **** 
 763:Generated_Source\PSoC4/CyLib.c **** 
 764:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 459              		.loc 1 764 0
 460 0008 0C23     		movs	r3, #12
 461 000a FC18     		adds	r4, r7, r3
 462 000c FFF7FEFF 		bl	CyEnterCriticalSection
 463 0010 0300     		movs	r3, r0
 464 0012 2370     		strb	r3, [r4]
 765:Generated_Source\PSoC4/CyLib.c **** 
 766:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 767:Generated_Source\PSoC4/CyLib.c ****             if(0u != CySysClkImoGetWcoLock())
 768:Generated_Source\PSoC4/CyLib.c ****             {
 769:Generated_Source\PSoC4/CyLib.c ****                 wcoLock = 1u;
 770:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoDisableWcoLock();
 771:Generated_Source\PSoC4/CyLib.c ****             }
 772:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 773:Generated_Source\PSoC4/CyLib.c **** 
 774:Generated_Source\PSoC4/CyLib.c **** 
 775:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 776:Generated_Source\PSoC4/CyLib.c **** 
 777:Generated_Source\PSoC4/CyLib.c ****             #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 778:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkImoGetUsbLock())
 779:Generated_Source\PSoC4/CyLib.c ****                 {
 780:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 781:Generated_Source\PSoC4/CyLib.c **** 
 782:Generated_Source\PSoC4/CyLib.c ****                 if ((24u == freq) || (48u == freq))
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccaiT5A1.s 			page 23


 783:Generated_Source\PSoC4/CyLib.c ****                 {
 784:Generated_Source\PSoC4/CyLib.c ****                     usbLock = 1u;
 785:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableUsbLock();
 786:Generated_Source\PSoC4/CyLib.c ****                 }
 787:Generated_Source\PSoC4/CyLib.c **** 
 788:Generated_Source\PSoC4/CyLib.c ****             #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 789:Generated_Source\PSoC4/CyLib.c ****                 }
 790:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 791:Generated_Source\PSoC4/CyLib.c **** 
 792:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 793:Generated_Source\PSoC4/CyLib.c **** 
 794:Generated_Source\PSoC4/CyLib.c **** 
 795:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 796:Generated_Source\PSoC4/CyLib.c **** 
 797:Generated_Source\PSoC4/CyLib.c ****             /* FM-Lite Clock Restore */
 798:Generated_Source\PSoC4/CyLib.c ****             regValues[0u] = CY_SYS_CLK_IMO_CONFIG_REG;
 799:Generated_Source\PSoC4/CyLib.c ****             regValues[1u] = CY_SYS_CLK_SELECT_REG;
 800:Generated_Source\PSoC4/CyLib.c ****             regValues[2u] = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 801:Generated_Source\PSoC4/CyLib.c ****             regValues[3u] = CY_FLASH_CTL_REG;
 802:Generated_Source\PSoC4/CyLib.c **** 
 803:Generated_Source\PSoC4/CyLib.c ****             parameters[0u] =
 804:Generated_Source\PSoC4/CyLib.c ****                 (uint32) ((CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_CLK_RESTORE) <<  CY_FLASH_PARAM_KEY
 805:Generated_Source\PSoC4/CyLib.c ****                             CY_FLASH_KEY_ONE);
 806:Generated_Source\PSoC4/CyLib.c ****             parameters[1u] = (uint32) &regValues[0u];
 807:Generated_Source\PSoC4/CyLib.c **** 
 808:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSARG_REG = (uint32) &parameters[0u];
 809:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_CLK_RESTORE;
 810:Generated_Source\PSoC4/CyLib.c ****             (void) CY_FLASH_CPUSS_SYSARG_REG;
 811:Generated_Source\PSoC4/CyLib.c **** 
 812:Generated_Source\PSoC4/CyLib.c ****         #else /* (CY_IP_FM) */
 813:Generated_Source\PSoC4/CyLib.c **** 
 814:Generated_Source\PSoC4/CyLib.c ****         if ((freq >= CY_SYS_CLK_IMO_MIN_FREQ_MHZ) && (freq <= CY_SYS_CLK_IMO_MAX_FREQ_MHZ))
 465              		.loc 1 814 0
 466 0014 7B68     		ldr	r3, [r7, #4]
 467 0016 022B     		cmp	r3, #2
 468 0018 00D8     		bhi	.LCB302
 469 001a AFE0     		b	.L24	@long jump
 470              	.LCB302:
 471              		.loc 1 814 0 is_stmt 0 discriminator 1
 472 001c 7B68     		ldr	r3, [r7, #4]
 473 001e 302B     		cmp	r3, #48
 474 0020 00D9     		bls	.LCB305
 475 0022 ABE0     		b	.L24	@long jump
 476              	.LCB305:
 815:Generated_Source\PSoC4/CyLib.c ****         {
 816:Generated_Source\PSoC4/CyLib.c ****             if(freq <= CY_SFLASH_IMO_MAXF0_REG)
 477              		.loc 1 816 0 is_stmt 1
 478 0024 5C4B     		ldr	r3, .L35
 479 0026 1B78     		ldrb	r3, [r3]
 480 0028 DBB2     		uxtb	r3, r3
 481 002a 1A00     		movs	r2, r3
 482 002c 7B68     		ldr	r3, [r7, #4]
 483 002e 9A42     		cmp	r2, r3
 484 0030 0AD3     		bcc	.L25
 817:Generated_Source\PSoC4/CyLib.c ****             {
 818:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS0_REG;
 485              		.loc 1 818 0
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccaiT5A1.s 			page 24


 486 0032 5A4A     		ldr	r2, .L35+4
 487 0034 0F23     		movs	r3, #15
 488 0036 FB18     		adds	r3, r7, r3
 489 0038 1278     		ldrb	r2, [r2]
 490 003a 1A70     		strb	r2, [r3]
 819:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO0_REG;
 491              		.loc 1 819 0
 492 003c 584A     		ldr	r2, .L35+8
 493 003e 0E23     		movs	r3, #14
 494 0040 FB18     		adds	r3, r7, r3
 495 0042 1278     		ldrb	r2, [r2]
 496 0044 1A70     		strb	r2, [r3]
 497 0046 3FE0     		b	.L26
 498              	.L25:
 820:Generated_Source\PSoC4/CyLib.c ****             }
 821:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF1_REG)
 499              		.loc 1 821 0
 500 0048 564B     		ldr	r3, .L35+12
 501 004a 1B78     		ldrb	r3, [r3]
 502 004c DBB2     		uxtb	r3, r3
 503 004e 1A00     		movs	r2, r3
 504 0050 7B68     		ldr	r3, [r7, #4]
 505 0052 9A42     		cmp	r2, r3
 506 0054 0AD3     		bcc	.L27
 822:Generated_Source\PSoC4/CyLib.c ****             {
 823:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS1_REG;
 507              		.loc 1 823 0
 508 0056 544A     		ldr	r2, .L35+16
 509 0058 0F23     		movs	r3, #15
 510 005a FB18     		adds	r3, r7, r3
 511 005c 1278     		ldrb	r2, [r2]
 512 005e 1A70     		strb	r2, [r3]
 824:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO1_REG;
 513              		.loc 1 824 0
 514 0060 524A     		ldr	r2, .L35+20
 515 0062 0E23     		movs	r3, #14
 516 0064 FB18     		adds	r3, r7, r3
 517 0066 1278     		ldrb	r2, [r2]
 518 0068 1A70     		strb	r2, [r3]
 519 006a 2DE0     		b	.L26
 520              	.L27:
 825:Generated_Source\PSoC4/CyLib.c ****             }
 826:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF2_REG)
 521              		.loc 1 826 0
 522 006c 504B     		ldr	r3, .L35+24
 523 006e 1B78     		ldrb	r3, [r3]
 524 0070 DBB2     		uxtb	r3, r3
 525 0072 1A00     		movs	r2, r3
 526 0074 7B68     		ldr	r3, [r7, #4]
 527 0076 9A42     		cmp	r2, r3
 528 0078 0AD3     		bcc	.L28
 827:Generated_Source\PSoC4/CyLib.c ****             {
 828:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS2_REG;
 529              		.loc 1 828 0
 530 007a 4E4A     		ldr	r2, .L35+28
 531 007c 0F23     		movs	r3, #15
 532 007e FB18     		adds	r3, r7, r3
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccaiT5A1.s 			page 25


 533 0080 1278     		ldrb	r2, [r2]
 534 0082 1A70     		strb	r2, [r3]
 829:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO2_REG;
 535              		.loc 1 829 0
 536 0084 4C4A     		ldr	r2, .L35+32
 537 0086 0E23     		movs	r3, #14
 538 0088 FB18     		adds	r3, r7, r3
 539 008a 1278     		ldrb	r2, [r2]
 540 008c 1A70     		strb	r2, [r3]
 541 008e 1BE0     		b	.L26
 542              	.L28:
 830:Generated_Source\PSoC4/CyLib.c ****             }
 831:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF3_REG)
 543              		.loc 1 831 0
 544 0090 4A4B     		ldr	r3, .L35+36
 545 0092 1B78     		ldrb	r3, [r3]
 546 0094 DBB2     		uxtb	r3, r3
 547 0096 1A00     		movs	r2, r3
 548 0098 7B68     		ldr	r3, [r7, #4]
 549 009a 9A42     		cmp	r2, r3
 550 009c 0AD3     		bcc	.L29
 832:Generated_Source\PSoC4/CyLib.c ****             {
 833:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS3_REG;
 551              		.loc 1 833 0
 552 009e 484A     		ldr	r2, .L35+40
 553 00a0 0F23     		movs	r3, #15
 554 00a2 FB18     		adds	r3, r7, r3
 555 00a4 1278     		ldrb	r2, [r2]
 556 00a6 1A70     		strb	r2, [r3]
 834:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO3_REG;
 557              		.loc 1 834 0
 558 00a8 464A     		ldr	r2, .L35+44
 559 00aa 0E23     		movs	r3, #14
 560 00ac FB18     		adds	r3, r7, r3
 561 00ae 1278     		ldrb	r2, [r2]
 562 00b0 1A70     		strb	r2, [r3]
 563 00b2 09E0     		b	.L26
 564              	.L29:
 835:Generated_Source\PSoC4/CyLib.c ****             }
 836:Generated_Source\PSoC4/CyLib.c ****             else
 837:Generated_Source\PSoC4/CyLib.c ****             {
 838:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS4_REG;
 565              		.loc 1 838 0
 566 00b4 444A     		ldr	r2, .L35+48
 567 00b6 0F23     		movs	r3, #15
 568 00b8 FB18     		adds	r3, r7, r3
 569 00ba 1278     		ldrb	r2, [r2]
 570 00bc 1A70     		strb	r2, [r3]
 839:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO4_REG;
 571              		.loc 1 839 0
 572 00be 434A     		ldr	r2, .L35+52
 573 00c0 0E23     		movs	r3, #14
 574 00c2 FB18     		adds	r3, r7, r3
 575 00c4 1278     		ldrb	r2, [r2]
 576 00c6 1A70     		strb	r2, [r3]
 577              	.L26:
 840:Generated_Source\PSoC4/CyLib.c ****             }
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccaiT5A1.s 			page 26


 841:Generated_Source\PSoC4/CyLib.c **** 
 842:Generated_Source\PSoC4/CyLib.c ****             /* Get IMO_TRIM2 value for the new frequency */
 843:Generated_Source\PSoC4/CyLib.c ****             newImoTrim2Value = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 578              		.loc 1 843 0
 579 00c8 7B68     		ldr	r3, [r7, #4]
 580 00ca DA1E     		subs	r2, r3, #3
 581 00cc 0B23     		movs	r3, #11
 582 00ce FB18     		adds	r3, r7, r3
 583 00d0 3F49     		ldr	r1, .L35+56
 584 00d2 8A5C     		ldrb	r2, [r1, r2]
 585 00d4 1A70     		strb	r2, [r3]
 844:Generated_Source\PSoC4/CyLib.c **** 
 845:Generated_Source\PSoC4/CyLib.c **** 
 846:Generated_Source\PSoC4/CyLib.c ****             /****************************************************************************
 847:Generated_Source\PSoC4/CyLib.c ****             * The IMO can have a different trim per frequency. To avoid possible corner
 848:Generated_Source\PSoC4/CyLib.c ****             * cases where a trim change can exceed the maximum frequency, the trim must
 849:Generated_Source\PSoC4/CyLib.c ****             * be applied at a frequency that is low enough.
 850:Generated_Source\PSoC4/CyLib.c ****             *
 851:Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 852:Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 853:Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 854:Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 855:Generated_Source\PSoC4/CyLib.c ****             if ((newImoTrim2Value >= CY_SYS_CLK_IMO_BOUNDARY_FREQ_TRIM2) && (freq >= CY_SYS_CLK_IMO
 586              		.loc 1 855 0
 587 00d6 0B23     		movs	r3, #11
 588 00d8 FB18     		adds	r3, r7, r3
 589 00da 1B78     		ldrb	r3, [r3]
 590 00dc 2F2B     		cmp	r3, #47
 591 00de 0DD9     		bls	.L30
 592              		.loc 1 855 0 is_stmt 0 discriminator 1
 593 00e0 7B68     		ldr	r3, [r7, #4]
 594 00e2 2A2B     		cmp	r3, #42
 595 00e4 0AD9     		bls	.L30
 856:Generated_Source\PSoC4/CyLib.c ****             {
 857:Generated_Source\PSoC4/CyLib.c ****                 /* Set boundary IMO frequency: safe for IMO above 48 MHZ trimming */
 858:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = (uint32) cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_TEMP_FREQ_MHZ -
 596              		.loc 1 858 0 is_stmt 1
 597 00e6 3B4B     		ldr	r3, .L35+60
 598 00e8 1922     		movs	r2, #25
 599 00ea 1A60     		str	r2, [r3]
 859:Generated_Source\PSoC4/CyLib.c ****                                                                      CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
 860:Generated_Source\PSoC4/CyLib.c **** 
 861:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 600              		.loc 1 861 0
 601 00ec 0520     		movs	r0, #5
 602 00ee FFF7FEFF 		bl	CyDelayCycles
 862:Generated_Source\PSoC4/CyLib.c **** 
 863:Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = CY_SYS_CLK_IMO_TEMP_FREQ_TRIM2;
 603              		.loc 1 863 0
 604 00f2 0D23     		movs	r3, #13
 605 00f4 FB18     		adds	r3, r7, r3
 606 00f6 1922     		movs	r2, #25
 607 00f8 1A70     		strb	r2, [r3]
 608 00fa 07E0     		b	.L31
 609              	.L30:
 864:Generated_Source\PSoC4/CyLib.c ****             }
 865:Generated_Source\PSoC4/CyLib.c ****             else
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccaiT5A1.s 			page 27


 866:Generated_Source\PSoC4/CyLib.c ****             {
 867:Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = (uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS
 610              		.loc 1 867 0
 611 00fc 354B     		ldr	r3, .L35+60
 612 00fe 1B68     		ldr	r3, [r3]
 613 0100 DAB2     		uxtb	r2, r3
 614 0102 0D23     		movs	r3, #13
 615 0104 FB18     		adds	r3, r7, r3
 616 0106 3F21     		movs	r1, #63
 617 0108 0A40     		ands	r2, r1
 618 010a 1A70     		strb	r2, [r3]
 619              	.L31:
 868:Generated_Source\PSoC4/CyLib.c ****             }
 869:Generated_Source\PSoC4/CyLib.c **** 
 870:Generated_Source\PSoC4/CyLib.c **** 
 871:Generated_Source\PSoC4/CyLib.c ****             /***************************************************************************
 872:Generated_Source\PSoC4/CyLib.c ****             * A trim change needs to be allowed to settle (within 5us) before the Freq
 873:Generated_Source\PSoC4/CyLib.c ****             * can be changed to a new frequency.
 874:Generated_Source\PSoC4/CyLib.c ****             *
 875:Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 876:Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 877:Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 878:Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 879:Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value < currentImoTrim2Value)
 620              		.loc 1 879 0
 621 010c 0B23     		movs	r3, #11
 622 010e FA18     		adds	r2, r7, r3
 623 0110 0D23     		movs	r3, #13
 624 0112 FB18     		adds	r3, r7, r3
 625 0114 1278     		ldrb	r2, [r2]
 626 0116 1B78     		ldrb	r3, [r3]
 627 0118 9A42     		cmp	r2, r3
 628 011a 08D2     		bcs	.L32
 880:Generated_Source\PSoC4/CyLib.c ****             {
 881:Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 882:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 629              		.loc 1 882 0
 630 011c 2D4B     		ldr	r3, .L35+60
 631 011e 7A68     		ldr	r2, [r7, #4]
 632 0120 033A     		subs	r2, r2, #3
 633 0122 2B49     		ldr	r1, .L35+56
 634 0124 8A5C     		ldrb	r2, [r1, r2]
 635 0126 1A60     		str	r2, [r3]
 883:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 636              		.loc 1 883 0
 637 0128 0520     		movs	r0, #5
 638 012a FFF7FEFF 		bl	CyDelayCycles
 639              	.L32:
 884:Generated_Source\PSoC4/CyLib.c ****             }
 885:Generated_Source\PSoC4/CyLib.c **** 
 886:Generated_Source\PSoC4/CyLib.c ****             /* Set trims for the new IMO frequency */
 887:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (uint32) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_T
 640              		.loc 1 887 0
 641 012e 2A4B     		ldr	r3, .L35+64
 642 0130 7A68     		ldr	r2, [r7, #4]
 643 0132 2649     		ldr	r1, .L35+52
 644 0134 8C46     		mov	ip, r1
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccaiT5A1.s 			page 28


 645 0136 6244     		add	r2, r2, ip
 646 0138 1278     		ldrb	r2, [r2]
 647 013a D2B2     		uxtb	r2, r2
 648 013c 1A60     		str	r2, [r3]
 888:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM4_REG  = bgTrim4;
 649              		.loc 1 888 0
 650 013e 274B     		ldr	r3, .L35+68
 651 0140 0F22     		movs	r2, #15
 652 0142 BA18     		adds	r2, r7, r2
 653 0144 1278     		ldrb	r2, [r2]
 654 0146 1A60     		str	r2, [r3]
 889:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM5_REG  = bgTrim5;
 655              		.loc 1 889 0
 656 0148 254B     		ldr	r3, .L35+72
 657 014a 0E22     		movs	r2, #14
 658 014c BA18     		adds	r2, r7, r2
 659 014e 1278     		ldrb	r2, [r2]
 660 0150 1A60     		str	r2, [r3]
 890:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_IMO_TRIM_TIMEOUT_US);
 661              		.loc 1 890 0
 662 0152 0520     		movs	r0, #5
 663 0154 FFF7FEFF 		bl	CyDelayUs
 891:Generated_Source\PSoC4/CyLib.c **** 
 892:Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value > currentImoTrim2Value)
 664              		.loc 1 892 0
 665 0158 0B23     		movs	r3, #11
 666 015a FA18     		adds	r2, r7, r3
 667 015c 0D23     		movs	r3, #13
 668 015e FB18     		adds	r3, r7, r3
 669 0160 1278     		ldrb	r2, [r2]
 670 0162 1B78     		ldrb	r3, [r3]
 671 0164 9A42     		cmp	r2, r3
 672 0166 0CD9     		bls	.L34
 893:Generated_Source\PSoC4/CyLib.c ****             {
 894:Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 895:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 673              		.loc 1 895 0
 674 0168 1A4B     		ldr	r3, .L35+60
 675 016a 7A68     		ldr	r2, [r7, #4]
 676 016c 033A     		subs	r2, r2, #3
 677 016e 1849     		ldr	r1, .L35+56
 678 0170 8A5C     		ldrb	r2, [r1, r2]
 679 0172 1A60     		str	r2, [r3]
 896:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 680              		.loc 1 896 0
 681 0174 0520     		movs	r0, #5
 682 0176 FFF7FEFF 		bl	CyDelayCycles
 892:Generated_Source\PSoC4/CyLib.c ****             {
 683              		.loc 1 892 0
 684 017a 02E0     		b	.L34
 685              	.L24:
 897:Generated_Source\PSoC4/CyLib.c ****             }
 898:Generated_Source\PSoC4/CyLib.c ****         }
 899:Generated_Source\PSoC4/CyLib.c ****         else
 900:Generated_Source\PSoC4/CyLib.c ****         {
 901:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
 902:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccaiT5A1.s 			page 29


 686              		.loc 1 902 0 discriminator 1
 687 017c 0020     		movs	r0, #0
 688 017e FFF7FEFF 		bl	CyHalt
 689              	.L34:
 903:Generated_Source\PSoC4/CyLib.c ****         }
 904:Generated_Source\PSoC4/CyLib.c **** 
 905:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FMLT) */
 906:Generated_Source\PSoC4/CyLib.c **** 
 907:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 908:Generated_Source\PSoC4/CyLib.c ****             if (1u == wcoLock)
 909:Generated_Source\PSoC4/CyLib.c ****             {
 910:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableWcoLock();
 911:Generated_Source\PSoC4/CyLib.c ****             }
 912:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 913:Generated_Source\PSoC4/CyLib.c **** 
 914:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 915:Generated_Source\PSoC4/CyLib.c ****             if (1u == usbLock)
 916:Generated_Source\PSoC4/CyLib.c ****             {
 917:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableUsbLock();
 918:Generated_Source\PSoC4/CyLib.c ****             }
 919:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 920:Generated_Source\PSoC4/CyLib.c **** 
 921:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 690              		.loc 1 921 0
 691 0182 0C23     		movs	r3, #12
 692 0184 FB18     		adds	r3, r7, r3
 693 0186 1B78     		ldrb	r3, [r3]
 694 0188 1800     		movs	r0, r3
 695 018a FFF7FEFF 		bl	CyExitCriticalSection
 922:Generated_Source\PSoC4/CyLib.c ****     }
 696              		.loc 1 922 0
 697 018e C046     		nop
 698 0190 BD46     		mov	sp, r7
 699 0192 05B0     		add	sp, sp, #20
 700              		@ sp needed
 701 0194 90BD     		pop	{r4, r7, pc}
 702              	.L36:
 703 0196 C046     		.align	2
 704              	.L35:
 705 0198 C0F1FF0F 		.word	268431808
 706 019c C1F1FF0F 		.word	268431809
 707 01a0 C2F1FF0F 		.word	268431810
 708 01a4 C3F1FF0F 		.word	268431811
 709 01a8 C4F1FF0F 		.word	268431812
 710 01ac C5F1FF0F 		.word	268431813
 711 01b0 C6F1FF0F 		.word	268431814
 712 01b4 C7F1FF0F 		.word	268431815
 713 01b8 C8F1FF0F 		.word	268431816
 714 01bc C9F1FF0F 		.word	268431817
 715 01c0 CAF1FF0F 		.word	268431818
 716 01c4 CBF1FF0F 		.word	268431819
 717 01c8 CCF1FF0F 		.word	268431820
 718 01cc CDF1FF0F 		.word	268431821
 719 01d0 00000000 		.word	cyImoFreqMhz2Reg
 720 01d4 2CFF0B40 		.word	1074528044
 721 01d8 28FF0B40 		.word	1074528040
 722 01dc 1CFF0B40 		.word	1074528028
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccaiT5A1.s 			page 30


 723 01e0 20FF0B40 		.word	1074528032
 724              		.cfi_endproc
 725              	.LFE6:
 726              		.size	CySysClkWriteImoFreq, .-CySysClkWriteImoFreq
 727              		.section	.text.CySysLvdEnable,"ax",%progbits
 728              		.align	2
 729              		.global	CySysLvdEnable
 730              		.code	16
 731              		.thumb_func
 732              		.type	CySysLvdEnable, %function
 733              	CySysLvdEnable:
 734              	.LFB7:
 923:Generated_Source\PSoC4/CyLib.c **** 
 924:Generated_Source\PSoC4/CyLib.c **** #else
 925:Generated_Source\PSoC4/CyLib.c **** 
 926:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
 927:Generated_Source\PSoC4/CyLib.c ****     {
 928:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 929:Generated_Source\PSoC4/CyLib.c ****         uint8  imoTrim1Value;
 930:Generated_Source\PSoC4/CyLib.c **** 
 931:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 932:Generated_Source\PSoC4/CyLib.c ****             uint32 wcoLock = 0u;
 933:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */        
 934:Generated_Source\PSoC4/CyLib.c ****         
 935:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 936:Generated_Source\PSoC4/CyLib.c ****             uint32 usbLock = 0u;
 937:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 938:Generated_Source\PSoC4/CyLib.c **** 
 939:Generated_Source\PSoC4/CyLib.c ****         #if (CY_PSOC4_4000)
 940:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 32u) || (freq == 48u))
 941:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_CCG3)
 942:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 36u) || (freq == 48u))
 943:Generated_Source\PSoC4/CyLib.c ****         #else
 944:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 28u) || (freq == 32u) ||
 945:Generated_Source\PSoC4/CyLib.c ****                 (freq == 36u) || (freq == 40u) || (freq == 44u) ||
 946:Generated_Source\PSoC4/CyLib.c ****                 (freq == 48u))
 947:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_PSOC4_4000) */
 948:Generated_Source\PSoC4/CyLib.c ****         {
 949:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 950:Generated_Source\PSoC4/CyLib.c **** 
 951:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 952:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkImoGetWcoLock())
 953:Generated_Source\PSoC4/CyLib.c ****                 {
 954:Generated_Source\PSoC4/CyLib.c ****                     wcoLock = 1u;
 955:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableWcoLock();
 956:Generated_Source\PSoC4/CyLib.c ****                 }
 957:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 958:Generated_Source\PSoC4/CyLib.c **** 
 959:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 960:Generated_Source\PSoC4/CyLib.c **** 
 961:Generated_Source\PSoC4/CyLib.c ****                 #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 962:Generated_Source\PSoC4/CyLib.c ****                     if(0u != CySysClkImoGetUsbLock())
 963:Generated_Source\PSoC4/CyLib.c ****                     {
 964:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 965:Generated_Source\PSoC4/CyLib.c **** 
 966:Generated_Source\PSoC4/CyLib.c ****                     if (48u == freq)
 967:Generated_Source\PSoC4/CyLib.c ****                     {
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccaiT5A1.s 			page 31


 968:Generated_Source\PSoC4/CyLib.c ****                         usbLock = 1u;
 969:Generated_Source\PSoC4/CyLib.c ****                         CySysClkImoDisableUsbLock();
 970:Generated_Source\PSoC4/CyLib.c ****                     }
 971:Generated_Source\PSoC4/CyLib.c **** 
 972:Generated_Source\PSoC4/CyLib.c ****                 #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 973:Generated_Source\PSoC4/CyLib.c ****                     }
 974:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 975:Generated_Source\PSoC4/CyLib.c **** 
 976:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 977:Generated_Source\PSoC4/CyLib.c **** 
 978:Generated_Source\PSoC4/CyLib.c **** 
 979:Generated_Source\PSoC4/CyLib.c ****             /* Set IMO to 24 MHz - CLK_IMO_SELECT.FREQ = 0 */
 980:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_SELECT_REG &= ((uint32) ~CY_SYS_CLK_IMO_SELECT_FREQ_MASK);
 981:Generated_Source\PSoC4/CyLib.c **** 
 982:Generated_Source\PSoC4/CyLib.c **** 
 983:Generated_Source\PSoC4/CyLib.c ****             /* Apply coarse trim */
 984:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 985:Generated_Source\PSoC4/CyLib.c ****                 if ((1u == usbLock) && (48u == freq))
 986:Generated_Source\PSoC4/CyLib.c ****                 {
 987:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_48_REG;
 988:Generated_Source\PSoC4/CyLib.c ****                 }
 989:Generated_Source\PSoC4/CyLib.c ****                 else if ((1u == usbLock) && (24u == freq))
 990:Generated_Source\PSoC4/CyLib.c ****                 {
 991:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_24_REG;
 992:Generated_Source\PSoC4/CyLib.c ****                 }
 993:Generated_Source\PSoC4/CyLib.c ****                 else
 994:Generated_Source\PSoC4/CyLib.c ****                 {
 995:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_M
 996:Generated_Source\PSoC4/CyLib.c ****                 }
 997:Generated_Source\PSoC4/CyLib.c ****             #else
 998:Generated_Source\PSoC4/CyLib.c ****                 imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ);
 999:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
1000:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (uint32) imoTrim1Value;
1001:Generated_Source\PSoC4/CyLib.c **** 
1002:Generated_Source\PSoC4/CyLib.c ****             /* Zero out fine trim */
1003:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM2_REG = CY_SYS_CLK_IMO_TRIM2_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM2_F
1004:Generated_Source\PSoC4/CyLib.c **** 
1005:Generated_Source\PSoC4/CyLib.c ****             /* Apply TC trim */
1006:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM3_REG = (CY_SYS_CLK_IMO_TRIM3_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM3_
1007:Generated_Source\PSoC4/CyLib.c ****                 (CY_SFLASH_IMO_TCTRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) & CY_SYS_CLK_IMO_TRIM
1008:Generated_Source\PSoC4/CyLib.c **** 
1009:Generated_Source\PSoC4/CyLib.c ****             CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_CYCLES);
1010:Generated_Source\PSoC4/CyLib.c **** 
1011:Generated_Source\PSoC4/CyLib.c ****             if (freq > CY_SYS_CLK_IMO_MIN_FREQ_MHZ)
1012:Generated_Source\PSoC4/CyLib.c ****             {
1013:Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
1014:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
1015:Generated_Source\PSoC4/CyLib.c ****                     (((freq - 4u - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ
1016:Generated_Source\PSoC4/CyLib.c **** 
1017:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_CYCLES);
1018:Generated_Source\PSoC4/CyLib.c **** 
1019:Generated_Source\PSoC4/CyLib.c ****                 /* Make small step to final frequency */
1020:Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
1021:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
1022:Generated_Source\PSoC4/CyLib.c ****                     (((freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ_MASK
1023:Generated_Source\PSoC4/CyLib.c ****             }
1024:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccaiT5A1.s 			page 32


1025:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
1026:Generated_Source\PSoC4/CyLib.c ****                 if (1u == wcoLock)
1027:Generated_Source\PSoC4/CyLib.c ****                 {
1028:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoEnableWcoLock();
1029:Generated_Source\PSoC4/CyLib.c ****                 }
1030:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
1031:Generated_Source\PSoC4/CyLib.c ****         
1032:Generated_Source\PSoC4/CyLib.c ****         
1033:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
1034:Generated_Source\PSoC4/CyLib.c ****                 if (1u == usbLock)
1035:Generated_Source\PSoC4/CyLib.c ****                 {
1036:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoEnableUsbLock();
1037:Generated_Source\PSoC4/CyLib.c ****                 }
1038:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
1039:Generated_Source\PSoC4/CyLib.c **** 
1040:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1041:Generated_Source\PSoC4/CyLib.c ****         }
1042:Generated_Source\PSoC4/CyLib.c ****         else
1043:Generated_Source\PSoC4/CyLib.c ****         {
1044:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
1045:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
1046:Generated_Source\PSoC4/CyLib.c ****         }
1047:Generated_Source\PSoC4/CyLib.c ****     }
1048:Generated_Source\PSoC4/CyLib.c **** 
1049:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
1050:Generated_Source\PSoC4/CyLib.c **** 
1051:Generated_Source\PSoC4/CyLib.c **** 
1052:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSLT)
1053:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1054:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkWriteHfclkDiv
1055:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1056:Generated_Source\PSoC4/CyLib.c ****     *
1057:Generated_Source\PSoC4/CyLib.c ****     * Selects the pre-scaler divider value for HFCLK from IMO.
1058:Generated_Source\PSoC4/CyLib.c ****     *
1059:Generated_Source\PSoC4/CyLib.c ****     * The HFCLK predivider allows the device to divide the HFCLK selection mux
1060:Generated_Source\PSoC4/CyLib.c ****     * input before use as HFCLK. The predivider is capable of dividing the HFCLK by
1061:Generated_Source\PSoC4/CyLib.c ****     * powers of 2 between 1 and 8.
1062:Generated_Source\PSoC4/CyLib.c ****     *
1063:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
1064:Generated_Source\PSoC4/CyLib.c ****     * should be selected in a way, not to exceed 16 MHz for SYSCLK.
1065:Generated_Source\PSoC4/CyLib.c ****     *
1066:Generated_Source\PSoC4/CyLib.c ****     * If the SYSCLK clock frequency increases during the device operation, call
1067:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
1068:Generated_Source\PSoC4/CyLib.c ****     * number of clock cycles the cache will wait before sampling data comes back
1069:Generated_Source\PSoC4/CyLib.c ****     * from Flash. If the SYSCLK clock frequency decreases, you can call
1070:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
1071:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() description for more information.
1072:Generated_Source\PSoC4/CyLib.c ****     *
1073:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_NODIV    Transparent mode (w/o dividing)
1074:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_2        Divide selected clock source by 2
1075:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_4        Divide selected clock source by 4
1076:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_8        Divide selected clock source by 8
1077:Generated_Source\PSoC4/CyLib.c ****     *
1078:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1079:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteHfclkDiv(uint32 divider)
1080:Generated_Source\PSoC4/CyLib.c ****     {
1081:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccaiT5A1.s 			page 33


1082:Generated_Source\PSoC4/CyLib.c **** 
1083:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1084:Generated_Source\PSoC4/CyLib.c **** 
1085:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_SELECT_REG = ((CY_SYS_CLK_SELECT_REG & ((uint32) (~(CY_SYS_CLK_SELECT_HFCLK_DIV_
1086:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)))) |
1087:Generated_Source\PSoC4/CyLib.c ****                     ((uint32)((divider & CY_SYS_CLK_SELECT_HFCLK_DIV_MASK) << CY_SYS_CLK_SELECT_HFC
1088:Generated_Source\PSoC4/CyLib.c **** 
1089:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1090:Generated_Source\PSoC4/CyLib.c ****     }
1091:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSLT) */
1092:Generated_Source\PSoC4/CyLib.c **** 
1093:Generated_Source\PSoC4/CyLib.c **** 
1094:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_ECO)
1095:Generated_Source\PSoC4/CyLib.c **** 
1096:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1097:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStart
1098:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1099:Generated_Source\PSoC4/CyLib.c ****     *
1100:Generated_Source\PSoC4/CyLib.c ****     * Starts the External Crystal Oscillator (ECO). Refer to the device datasheet
1101:Generated_Source\PSoC4/CyLib.c ****     * for the ECO startup time.
1102:Generated_Source\PSoC4/CyLib.c ****     *
1103:Generated_Source\PSoC4/CyLib.c ****     * The timeout interval is measured based on the system frequency defined by
1104:Generated_Source\PSoC4/CyLib.c ****     * PSoC Creator at build time. If System clock frequency is changed in
1105:Generated_Source\PSoC4/CyLib.c ****     * runtime, the \ref CyDelayFreq() with the appropriate parameter should be
1106:Generated_Source\PSoC4/CyLib.c ****     * called.
1107:Generated_Source\PSoC4/CyLib.c ****     *
1108:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100 BLE / PSoC 4200 BLE: The WCO must be enabled prior to enabling ECO.
1109:Generated_Source\PSoC4/CyLib.c ****     *
1110:Generated_Source\PSoC4/CyLib.c ****     * \param timeoutUs Timeout in microseconds.
1111:Generated_Source\PSoC4/CyLib.c ****     *
1112:Generated_Source\PSoC4/CyLib.c ****     * If zero is specified, the function does not wait for timeout and returns
1113:Generated_Source\PSoC4/CyLib.c ****     * CYRET_SUCCESS. If non-zero is specified, the function waits for the timeout.
1114:Generated_Source\PSoC4/CyLib.c ****     *
1115:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_SUCCESS Completed successfully. The ECO is oscillating and
1116:Generated_Source\PSoC4/CyLib.c ****     * amplitude reached 60% and it does not mean 24 MHz crystal is within 50 ppm.
1117:Generated_Source\PSoC4/CyLib.c ****     *
1118:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_TIMEOUT Timeout occurred. If the crystal is not oscillating
1119:Generated_Source\PSoC4/CyLib.c ****     * or amplitude didn't reach 60% after specified amount of time, CYRET_TIMEOUT
1120:Generated_Source\PSoC4/CyLib.c ****     * is returned.
1121:Generated_Source\PSoC4/CyLib.c ****     *
1122:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_BAD_PARAM One or more invalid parameters.
1123:Generated_Source\PSoC4/CyLib.c ****     *
1124:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1125:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkEcoStart(uint32 timeoutUs)
1126:Generated_Source\PSoC4/CyLib.c ****     {
1127:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
1128:Generated_Source\PSoC4/CyLib.c **** 
1129:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_ECO_BLESS)
1130:Generated_Source\PSoC4/CyLib.c ****             /* Enable the RF oscillator band gap */
1131:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLESS_RF_CONFIG_REG |= CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
1132:Generated_Source\PSoC4/CyLib.c **** 
1133:Generated_Source\PSoC4/CyLib.c ****             /* Update trimming register */
1134:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_BB_XO_REG = CY_SYS_XTAL_BLERD_BB_XO_TRIM;
1135:Generated_Source\PSoC4/CyLib.c **** 
1136:Generated_Source\PSoC4/CyLib.c ****             /* Enable the Crystal */
1137:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_DBUS_REG |= CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
1138:Generated_Source\PSoC4/CyLib.c ****         
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccaiT5A1.s 			page 34


1139:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1140:Generated_Source\PSoC4/CyLib.c ****             uint32 regConfig;
1141:Generated_Source\PSoC4/CyLib.c ****             uint32 intrRegMaskStore = 0u;
1142:Generated_Source\PSoC4/CyLib.c ****             
1143:Generated_Source\PSoC4/CyLib.c ****             if (0u != (CY_SYS_BLESS_MT_CFG_REG & (CY_SYS_BLESS_MT_CFG_ENABLE_BLERD <<  CYFLD_BLE_BL
1144:Generated_Source\PSoC4/CyLib.c ****             {
1145:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_CFG_REG |= (CY_SYS_BLESS_MT_CFG_DPSLP_ECO_ON  <<  CYFLD_BLE_BLESS_D
1146:Generated_Source\PSoC4/CyLib.c ****             }
1147:Generated_Source\PSoC4/CyLib.c ****             else
1148:Generated_Source\PSoC4/CyLib.c ****             {
1149:Generated_Source\PSoC4/CyLib.c ****                 /* Init BLE core */
1150:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG_REG = CY_SYS_BLESS_MT_DELAY_CFG_INIT;
1151:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG2_REG = CY_SYS_BLESS_MT_DELAY_CFG2_INIT;
1152:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG3_REG = CY_SYS_BLESS_MT_DELAY_CFG3_INIT;
1153:Generated_Source\PSoC4/CyLib.c ****             
1154:Generated_Source\PSoC4/CyLib.c ****                 /* RCB init */
1155:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_RCB_CTRL_REG;
1156:Generated_Source\PSoC4/CyLib.c ****                 regConfig &= CY_SYS_RCB_CTRL_CLEAR;
1157:Generated_Source\PSoC4/CyLib.c ****                 regConfig |= CY_SYS_RCB_CTRL_INIT;
1158:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_CTRL_REG = regConfig;
1159:Generated_Source\PSoC4/CyLib.c ****                 
1160:Generated_Source\PSoC4/CyLib.c ****                 intrRegMaskStore = CY_SYS_BLESS_INTR_MASK_REG;
1161:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK & intrRegMaskStore))
1162:Generated_Source\PSoC4/CyLib.c ****                 {
1163:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG &= ~CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK;
1164:Generated_Source\PSoC4/CyLib.c ****                 }
1165:Generated_Source\PSoC4/CyLib.c ****                 
1166:Generated_Source\PSoC4/CyLib.c ****                 /* Enable BLE core */
1167:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_BLESS_MT_CFG_REG;
1168:Generated_Source\PSoC4/CyLib.c ****                 regConfig &= CY_SYS_BLESS_MT_CFG_CLEAR;
1169:Generated_Source\PSoC4/CyLib.c ****                 regConfig |= CY_SYS_BLESS_MT_CFG_INIT;
1170:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_CFG_REG = regConfig;
1171:Generated_Source\PSoC4/CyLib.c **** 
1172:Generated_Source\PSoC4/CyLib.c ****                 while(0u == ((CY_SYS_BLESS_BLERD_ACTIVE_INTR_STAT & CY_SYS_BLESS_INTR_STAT_REG)))
1173:Generated_Source\PSoC4/CyLib.c ****                 {
1174:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until BLERD55 moves to active state */
1175:Generated_Source\PSoC4/CyLib.c ****                 }
1176:Generated_Source\PSoC4/CyLib.c **** 
1177:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK & intrRegMaskStore))
1178:Generated_Source\PSoC4/CyLib.c ****                 {
1179:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG |= CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK;
1180:Generated_Source\PSoC4/CyLib.c ****                 }
1181:Generated_Source\PSoC4/CyLib.c ****                 
1182:Generated_Source\PSoC4/CyLib.c ****                 /* Send write commands to RBUS */
1183:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_NRST_SET;
1184:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_DIG_CLK_SET;
1185:Generated_Source\PSoC4/CyLib.c ****                 
1186:Generated_Source\PSoC4/CyLib.c ****                 #if (CY_SYS_BLE_CLK_ECO_FREQ_32MHZ == CYDEV_ECO_CLK_MHZ)
1187:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_XTAL_DIV_SET;
1188:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET | CY_SYS_RCB_RBUS_
1189:Generated_Source\PSoC4/CyLib.c ****                 #else
1190:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_XTAL_NODIV_SET;
1191:Generated_Source\PSoC4/CyLib.c ****                 #endif
1192:Generated_Source\PSoC4/CyLib.c ****                 
1193:Generated_Source\PSoC4/CyLib.c ****                 intrRegMaskStore = CY_SYS_BLESS_INTR_MASK_REG;
1194:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_RCB_INTR_RCB_DONE & intrRegMaskStore))
1195:Generated_Source\PSoC4/CyLib.c ****                 {
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccaiT5A1.s 			page 35


1196:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG &= ~(CY_SYS_RCB_INTR_RCB_DONE | CY_SYS_RCB_INTR_RCB_
1197:Generated_Source\PSoC4/CyLib.c ****                 }
1198:Generated_Source\PSoC4/CyLib.c ****                 
1199:Generated_Source\PSoC4/CyLib.c ****                 /* Send read commands to RBUS */
1200:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RD_CMD | 
1201:Generated_Source\PSoC4/CyLib.c ****                                             (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET & ~CY_SYS_RCB_RBUS_VAL
1202:Generated_Source\PSoC4/CyLib.c ****                                             
1203:Generated_Source\PSoC4/CyLib.c ****                 while (0u == (CY_SYS_RCB_INTR_RCB_RX_FIFO_NOT_EMPTY & CY_SYS_RCB_INTR_REG))
1204:Generated_Source\PSoC4/CyLib.c ****                 {
1205:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until RX_FIFO_NOT_EMPTY state */
1206:Generated_Source\PSoC4/CyLib.c ****                 }
1207:Generated_Source\PSoC4/CyLib.c **** 
1208:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_INTR_REG |= CY_SYS_RCB_INTR_RCB_DONE;
1209:Generated_Source\PSoC4/CyLib.c ****                 
1210:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_RCB_RX_FIFO_RD_REG & CY_SYS_RCB_RBUS_TRIM_MASK;
1211:Generated_Source\PSoC4/CyLib.c ****                 
1212:Generated_Source\PSoC4/CyLib.c ****                 /* Send write commands to RBUS */
1213:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET | regConfig | CY_SYS_R
1214:Generated_Source\PSoC4/CyLib.c ****                 
1215:Generated_Source\PSoC4/CyLib.c ****                 while (0u == (CY_SYS_RCB_INTR_RCB_DONE & CY_SYS_RCB_INTR_REG))
1216:Generated_Source\PSoC4/CyLib.c ****                 {
1217:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until RCB_DONE state */
1218:Generated_Source\PSoC4/CyLib.c ****                 }
1219:Generated_Source\PSoC4/CyLib.c ****                 
1220:Generated_Source\PSoC4/CyLib.c ****                 /* Clear Interrupt */
1221:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_INTR_REG = CY_SYS_RCB_INTR_CLEAR;
1222:Generated_Source\PSoC4/CyLib.c ****                 
1223:Generated_Source\PSoC4/CyLib.c ****                 if(0u != ((CY_SYS_RCB_INTR_RCB_DONE | CY_SYS_RCB_INTR_RCB_RX_FIFO_NOT_EMPTY) & intr
1224:Generated_Source\PSoC4/CyLib.c ****                 {
1225:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG |= intrRegMaskStore;
1226:Generated_Source\PSoC4/CyLib.c ****                 }
1227:Generated_Source\PSoC4/CyLib.c ****                 
1228:Generated_Source\PSoC4/CyLib.c ****             }
1229:Generated_Source\PSoC4/CyLib.c ****         #else /* CY_IP_ECO_SRSSV2 || CY_IP_ECO_SRSSLT */
1230:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_ENABLE;
1231:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_ECO_CONFIG_CLK_EN_TIMEOUT_US);
1232:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_CLK_EN;
1233:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_ECO_BLESS) */
1234:Generated_Source\PSoC4/CyLib.c **** 
1235:Generated_Source\PSoC4/CyLib.c ****         if(timeoutUs > 0u)
1236:Generated_Source\PSoC4/CyLib.c ****         {
1237:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_TIMEOUT;
1238:Generated_Source\PSoC4/CyLib.c **** 
1239:Generated_Source\PSoC4/CyLib.c ****             for( ; timeoutUs > 0u; timeoutUs--)
1240:Generated_Source\PSoC4/CyLib.c ****             {
1241:Generated_Source\PSoC4/CyLib.c ****                 CyDelayUs(1u);
1242:Generated_Source\PSoC4/CyLib.c **** 
1243:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkEcoReadStatus())
1244:Generated_Source\PSoC4/CyLib.c ****                 {
1245:Generated_Source\PSoC4/CyLib.c ****                     returnStatus = CYRET_SUCCESS;
1246:Generated_Source\PSoC4/CyLib.c ****                     break;
1247:Generated_Source\PSoC4/CyLib.c ****                 }
1248:Generated_Source\PSoC4/CyLib.c ****             }
1249:Generated_Source\PSoC4/CyLib.c **** 
1250:Generated_Source\PSoC4/CyLib.c ****         }
1251:Generated_Source\PSoC4/CyLib.c **** 
1252:Generated_Source\PSoC4/CyLib.c ****         return(returnStatus);
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccaiT5A1.s 			page 36


1253:Generated_Source\PSoC4/CyLib.c ****     }
1254:Generated_Source\PSoC4/CyLib.c **** 
1255:Generated_Source\PSoC4/CyLib.c **** 
1256:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1257:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStop
1258:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1259:Generated_Source\PSoC4/CyLib.c ****     *
1260:Generated_Source\PSoC4/CyLib.c ****     * Stops the megahertz crystal.
1261:Generated_Source\PSoC4/CyLib.c ****     *
1262:Generated_Source\PSoC4/CyLib.c ****     * If ECO is disabled when it is sourcing HFCLK, the CPU will halt. In addition,
1263:Generated_Source\PSoC4/CyLib.c ****     * for PSoC 4100 BLE / PSoC 4200 BLE devices, the BLE sub-system will stop
1264:Generated_Source\PSoC4/CyLib.c ****     * functioning.
1265:Generated_Source\PSoC4/CyLib.c ****     *
1266:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1267:Generated_Source\PSoC4/CyLib.c ****     void CySysClkEcoStop(void)
1268:Generated_Source\PSoC4/CyLib.c ****     {
1269:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
1270:Generated_Source\PSoC4/CyLib.c ****             /* Disable the RF oscillator band gap */
1271:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLESS_RF_CONFIG_REG &= (uint32) ~CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
1272:Generated_Source\PSoC4/CyLib.c **** 
1273:Generated_Source\PSoC4/CyLib.c ****             /* Disable the Crystal */
1274:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_DBUS_REG &= (uint32) ~CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
1275:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1276:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_BLESS_MT_CFG_REG &= ~(CY_SYS_BLESS_MT_CFG_DPSLP_ECO_ON  <<  CYFLD_BLE_BLESS_DPSL
1277:Generated_Source\PSoC4/CyLib.c ****         #else
1278:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG &= (uint32) ~(CY_SYS_CLK_ECO_CONFIG_ENABLE | CY_SYS_CLK_ECO_C
1279:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
1280:Generated_Source\PSoC4/CyLib.c ****     }
1281:Generated_Source\PSoC4/CyLib.c **** 
1282:Generated_Source\PSoC4/CyLib.c **** 
1283:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1284:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoReadStatus
1285:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1286:Generated_Source\PSoC4/CyLib.c ****     *
1287:Generated_Source\PSoC4/CyLib.c ****     * Reads the status bit for the megahertz crystal.
1288:Generated_Source\PSoC4/CyLib.c ****     *
1289:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4100 BLE / PSoC 4200 BLE devices, the status bit is the
1290:Generated_Source\PSoC4/CyLib.c ****     * XO_AMP_DETECT bit in FSM register.
1291:Generated_Source\PSoC4/CyLib.c ****     *
1292:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L / 4100S with ECO devices, the error status bit is the 
1293:Generated_Source\PSoC4/CyLib.c ****     * WATCHDOG_ERROR bit in ECO_STATUS register.
1294:Generated_Source\PSoC4/CyLib.c ****     *
1295:Generated_Source\PSoC4/CyLib.c ****     * \return PSoC 4100 BLE/PSoC 4200 BLE: Non-zero indicates that ECO output
1296:Generated_Source\PSoC4/CyLib.c ****     * reached 50 ppm and is oscillating in valid range.
1297:Generated_Source\PSoC4/CyLib.c ****     *
1298:Generated_Source\PSoC4/CyLib.c ****     * \return PSoC 4200L / 4100S with ECO: Non-zero indicates that ECO is running.
1299:Generated_Source\PSoC4/CyLib.c ****     *
1300:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1301:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkEcoReadStatus(void)
1302:Generated_Source\PSoC4/CyLib.c ****     {
1303:Generated_Source\PSoC4/CyLib.c ****         uint32 returnValue;
1304:Generated_Source\PSoC4/CyLib.c **** 
1305:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
1306:Generated_Source\PSoC4/CyLib.c ****             returnValue = CY_SYS_XTAL_BLERD_FSM_REG & CY_SYS_XTAL_BLERD_FSM_XO_AMP_DETECT;
1307:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1308:Generated_Source\PSoC4/CyLib.c ****             returnValue = (CY_SYS_BLESS_MT_STATUS_REG & CY_SYS_BLESS_MT_STATUS_CURR_STATE_MASK) >> 
1309:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccaiT5A1.s 			page 37


1310:Generated_Source\PSoC4/CyLib.c ****             returnValue =  ((CY_SYS_BLESS_MT_STATUS_BLERD_IDLE == returnValue) || 
1311:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_SWITCH_EN  == returnValue) ||
1312:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_ACTIVE  ==  returnValue) ||
1313:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_ISOLATE == returnValue));
1314:Generated_Source\PSoC4/CyLib.c ****         #else
1315:Generated_Source\PSoC4/CyLib.c ****             returnValue = (0u != (CY_SYS_CLK_ECO_STATUS_REG & CY_SYS_CLK_ECO_STATUS_WATCHDOG_ERROR)
1316:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
1317:Generated_Source\PSoC4/CyLib.c **** 
1318:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1319:Generated_Source\PSoC4/CyLib.c ****     }
1320:Generated_Source\PSoC4/CyLib.c **** 
1321:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_ECO_BLESS || CY_IP_ECO_BLESSV3)
1322:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1323:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkWriteEcoDiv
1324:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1325:Generated_Source\PSoC4/CyLib.c ****         *
1326:Generated_Source\PSoC4/CyLib.c ****         * Selects value for the ECO divider.
1327:Generated_Source\PSoC4/CyLib.c ****         *
1328:Generated_Source\PSoC4/CyLib.c ****         * The ECO must not be the HFCLK clock source when this function is called.
1329:Generated_Source\PSoC4/CyLib.c ****         * The HFCLK source can be changed to the other clock source by call to the
1330:Generated_Source\PSoC4/CyLib.c ****         * CySysClkWriteHfclkDirect() function. If the ECO sources the HFCLK this
1331:Generated_Source\PSoC4/CyLib.c ****         * function will not have any effect if compiler in release mode, and halt the
1332:Generated_Source\PSoC4/CyLib.c ****         * CPU when compiler in debug mode.
1333:Generated_Source\PSoC4/CyLib.c ****         *
1334:Generated_Source\PSoC4/CyLib.c ****         * If the SYSCLK clock frequency increases during the device operation, call
1335:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
1336:Generated_Source\PSoC4/CyLib.c ****         * of clock cycles the cache will wait before sampling data comes back from
1337:Generated_Source\PSoC4/CyLib.c ****         * Flash. If the SYSCLK clock frequency decreases, you can call
1338:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() to improve the CPU performance. See
1339:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() description for more information.
1340:Generated_Source\PSoC4/CyLib.c ****         *
1341:Generated_Source\PSoC4/CyLib.c ****         * \param divider Power of 2 divider selection.
1342:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV1
1343:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV2
1344:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV4
1345:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV8
1346:Generated_Source\PSoC4/CyLib.c ****         *
1347:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1348:Generated_Source\PSoC4/CyLib.c ****         void CySysClkWriteEcoDiv(uint32 divider)
1349:Generated_Source\PSoC4/CyLib.c ****         {
1350:Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
1351:Generated_Source\PSoC4/CyLib.c **** 
1352:Generated_Source\PSoC4/CyLib.c ****             if (CY_SYS_CLK_HFCLK_ECO != (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK)
1353:Generated_Source\PSoC4/CyLib.c ****             {
1354:Generated_Source\PSoC4/CyLib.c ****                 interruptState = CyEnterCriticalSection();
1355:Generated_Source\PSoC4/CyLib.c **** 
1356:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG =  (divider & CY_SYS_CLK_XTAL_CLK_DIV_MASK) |
1357:Generated_Source\PSoC4/CyLib.c ****                                                       (CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG & ((uint3
1358:Generated_Source\PSoC4/CyLib.c **** 
1359:Generated_Source\PSoC4/CyLib.c ****                 CyExitCriticalSection(interruptState);
1360:Generated_Source\PSoC4/CyLib.c ****             }
1361:Generated_Source\PSoC4/CyLib.c ****             else
1362:Generated_Source\PSoC4/CyLib.c ****             {
1363:Generated_Source\PSoC4/CyLib.c ****                 /* Halt CPU in debug mode if ECO sources HFCLK */
1364:Generated_Source\PSoC4/CyLib.c ****                 CYASSERT(0u != 0u);
1365:Generated_Source\PSoC4/CyLib.c ****             }
1366:Generated_Source\PSoC4/CyLib.c ****         }
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccaiT5A1.s 			page 38


1367:Generated_Source\PSoC4/CyLib.c **** 
1368:Generated_Source\PSoC4/CyLib.c ****     #else
1369:Generated_Source\PSoC4/CyLib.c **** 
1370:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1371:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkConfigureEcoTrim
1372:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1373:Generated_Source\PSoC4/CyLib.c ****         *
1374:Generated_Source\PSoC4/CyLib.c ****         * Selects trim setting values for ECO. This API is available only for PSoC
1375:Generated_Source\PSoC4/CyLib.c ****         * 4200L / 4100S with ECO devices only.
1376:Generated_Source\PSoC4/CyLib.c ****         *
1377:Generated_Source\PSoC4/CyLib.c ****         * The following parameters can be trimmed for ECO. The affected registers are
1378:Generated_Source\PSoC4/CyLib.c ****         * ECO_TRIM0 and ECO_TRIM1.
1379:Generated_Source\PSoC4/CyLib.c ****         *
1380:Generated_Source\PSoC4/CyLib.c ****         * Watchdog trim - This bit field sets the error threshold below the steady
1381:Generated_Source\PSoC4/CyLib.c ****         * state amplitude level.
1382:Generated_Source\PSoC4/CyLib.c ****         *
1383:Generated_Source\PSoC4/CyLib.c ****         * Amplitude trim - This bit field is to set the crystal drive level when
1384:Generated_Source\PSoC4/CyLib.c ****         * ECO_CONFIG.AGC_EN = 1. WARNING: use care when setting this field because
1385:Generated_Source\PSoC4/CyLib.c ****         * driving a crystal beyond its rated limit can permanently damage the crystal.
1386:Generated_Source\PSoC4/CyLib.c ****         *
1387:Generated_Source\PSoC4/CyLib.c ****         * Filter frequency trim - This bit field sets LPF frequency trim and affects
1388:Generated_Source\PSoC4/CyLib.c ****         * the 3rd harmonic content.
1389:Generated_Source\PSoC4/CyLib.c ****         *
1390:Generated_Source\PSoC4/CyLib.c ****         * Feedback resistor trim - This bit field sets the feedback resistor trim and
1391:Generated_Source\PSoC4/CyLib.c ****         * impacts the oscillation amplitude.
1392:Generated_Source\PSoC4/CyLib.c ****         *
1393:Generated_Source\PSoC4/CyLib.c ****         * Amplifier gain trim - This bit field sets the amplifier gain trim and affects
1394:Generated_Source\PSoC4/CyLib.c ****         * the startup time of the crystal.
1395:Generated_Source\PSoC4/CyLib.c ****         *
1396:Generated_Source\PSoC4/CyLib.c ****         * Use care when setting the amplitude trim field because driving a crystal
1397:Generated_Source\PSoC4/CyLib.c ****         * beyond its rated limit can permanently damage the crystal.
1398:Generated_Source\PSoC4/CyLib.c ****         *
1399:Generated_Source\PSoC4/CyLib.c ****         * \param wDTrim: Watchdog trim
1400:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM0      Error threshold is 0.05 V
1401:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM1      Error threshold is 0.10 V
1402:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM2      Error threshold is 0.15 V
1403:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM3      Error threshold is 0.20 V
1404:Generated_Source\PSoC4/CyLib.c ****         *
1405:Generated_Source\PSoC4/CyLib.c ****         * \param aTrim: Amplitude trim
1406:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM0       Amplitude is 0.3 Vpp
1407:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM1       Amplitude is 0.4 Vpp
1408:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM2       Amplitude is 0.5 Vpp
1409:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM3       Amplitude is 0.6 Vpp
1410:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM4       Amplitude is 0.7 Vpp
1411:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM5       Amplitude is 0.8 Vpp
1412:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM6       Amplitude is 0.9 Vpp
1413:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM7       Amplitude is 1.0 Vpp
1414:Generated_Source\PSoC4/CyLib.c ****         *
1415:Generated_Source\PSoC4/CyLib.c ****         * \param fTrim: Filter frequency trim
1416:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM0       Crystal frequency > 30 MHz
1417:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM1       24 MHz < Crystal frequency <= 30 MHz
1418:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM2       17 MHz < Crystal frequency <= 24 MHz
1419:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM3       Crystal frequency <= 17 MHz
1420:Generated_Source\PSoC4/CyLib.c ****         *
1421:Generated_Source\PSoC4/CyLib.c ****         * \param rTrim: Feedback resistor trim
1422:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM0       Crystal frequency > 30 MHz
1423:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM1       24 MHz < Crystal frequency <= 30 MHz
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccaiT5A1.s 			page 39


1424:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM2       17 MHz < Crystal frequency <= 24 MHz
1425:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM3       Crystal frequency <= 17 MHz
1426:Generated_Source\PSoC4/CyLib.c ****         *
1427:Generated_Source\PSoC4/CyLib.c ****         * \param gTrim: Amplifier gain trim. Calculate the minimum required gm
1428:Generated_Source\PSoC4/CyLib.c ****         * (trans-conductance value). Divide the calculated gm value by 4.5 to
1429:Generated_Source\PSoC4/CyLib.c ****         * obtain an integer value 'result'. For more information please refer
1430:Generated_Source\PSoC4/CyLib.c ****         * to the device TRM.
1431:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM0       If result = 1
1432:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM1       If result = 0
1433:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM2       If result = 2
1434:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM2       If result = 3
1435:Generated_Source\PSoC4/CyLib.c ****         *
1436:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1437:Generated_Source\PSoC4/CyLib.c ****         void CySysClkConfigureEcoTrim(uint32 wDTrim, uint32 aTrim, uint32 fTrim, uint32 rTrim, uint
1438:Generated_Source\PSoC4/CyLib.c ****         {
1439:Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
1440:Generated_Source\PSoC4/CyLib.c ****             uint32 regTmp;
1441:Generated_Source\PSoC4/CyLib.c **** 
1442:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1443:Generated_Source\PSoC4/CyLib.c **** 
1444:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_ECO_TRIM0_REG & ~(CY_SYS_CLK_ECO_TRIM0_WDTRIM_MASK | CY_SYS_CLK_EC
1445:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (wDTrim << CY_SYS_CLK_ECO_TRIM0_WDTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM
1446:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (aTrim << CY_SYS_CLK_ECO_TRIM0_ATRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM0_
1447:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_TRIM0_REG = regTmp;
1448:Generated_Source\PSoC4/CyLib.c **** 
1449:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_ECO_TRIM1_REG & ~(CY_SYS_CLK_ECO_TRIM1_FTRIM_MASK |
1450:Generated_Source\PSoC4/CyLib.c ****                                                    CY_SYS_CLK_ECO_TRIM1_RTRIM_MASK |
1451:Generated_Source\PSoC4/CyLib.c ****                                                    CY_SYS_CLK_ECO_TRIM1_GTRIM_MASK);
1452:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (fTrim << CY_SYS_CLK_ECO_TRIM1_FTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1453:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (rTrim << CY_SYS_CLK_ECO_TRIM1_RTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1454:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (gTrim << CY_SYS_CLK_ECO_TRIM1_GTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1455:Generated_Source\PSoC4/CyLib.c **** 
1456:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_TRIM1_REG = regTmp;
1457:Generated_Source\PSoC4/CyLib.c **** 
1458:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1459:Generated_Source\PSoC4/CyLib.c ****         }
1460:Generated_Source\PSoC4/CyLib.c **** 
1461:Generated_Source\PSoC4/CyLib.c **** 
1462:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1463:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkConfigureEcoDrive
1464:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1465:Generated_Source\PSoC4/CyLib.c ****         *
1466:Generated_Source\PSoC4/CyLib.c ****         * Selects trim setting values for ECO based on crystal parameters. Use care
1467:Generated_Source\PSoC4/CyLib.c ****         * when setting the driveLevel parameter because driving a crystal beyond its
1468:Generated_Source\PSoC4/CyLib.c ****         * rated limit can permanently damage the crystal.
1469:Generated_Source\PSoC4/CyLib.c ****         *
1470:Generated_Source\PSoC4/CyLib.c ****         * This API is available only for PSoC 4200L / 4100S with ECO devices only.
1471:Generated_Source\PSoC4/CyLib.c ****         *
1472:Generated_Source\PSoC4/CyLib.c ****         * \param freq Frequency of the crystal in kHz.
1473:Generated_Source\PSoC4/CyLib.c ****         * \param cLoad Crystal load capacitance in pF.
1474:Generated_Source\PSoC4/CyLib.c ****         * \param esr Equivalent series resistance of the crystal in ohm.
1475:Generated_Source\PSoC4/CyLib.c ****         *  maxAmplitude: maximum amplitude level in mV. Calculate as
1476:Generated_Source\PSoC4/CyLib.c ****         *  ((sqrt(driveLevel in uW / 2 / esr))/(3.14 * freq * cLoad)) * 10^9.
1477:Generated_Source\PSoC4/CyLib.c ****         *
1478:Generated_Source\PSoC4/CyLib.c ****         *  The Automatic Gain Control (AGC) is disabled when the specified maximum
1479:Generated_Source\PSoC4/CyLib.c ****         *  amplitude level equals or above 2. In this case the amplitude is not
1480:Generated_Source\PSoC4/CyLib.c ****         *  explicitly controlled and will grow until it saturates to the supply rail
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccaiT5A1.s 			page 40


1481:Generated_Source\PSoC4/CyLib.c ****         *  (1.8V nom). WARNING: use care when disabling AGC because driving a crystal
1482:Generated_Source\PSoC4/CyLib.c ****         *  beyond its rated limit can permanently damage the crystal.
1483:Generated_Source\PSoC4/CyLib.c ****         *
1484:Generated_Source\PSoC4/CyLib.c ****         * \return \ref CYRET_SUCCESS ECO configuration completed successfully.
1485:Generated_Source\PSoC4/CyLib.c ****         * \return \ref CYRET_BAD_PARAM One or more invalid parameters.
1486:Generated_Source\PSoC4/CyLib.c ****         *
1487:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1488:Generated_Source\PSoC4/CyLib.c ****         cystatus CySysClkConfigureEcoDrive(uint32 freq, uint32 cLoad, uint32 esr, uint32 maxAmplitu
1489:Generated_Source\PSoC4/CyLib.c ****         {
1490:Generated_Source\PSoC4/CyLib.c ****             cystatus returnStatus = CYRET_SUCCESS;
1491:Generated_Source\PSoC4/CyLib.c **** 
1492:Generated_Source\PSoC4/CyLib.c ****             uint32 wDTrim;
1493:Generated_Source\PSoC4/CyLib.c ****             uint32 aTrim;
1494:Generated_Source\PSoC4/CyLib.c ****             uint32 fTrim;
1495:Generated_Source\PSoC4/CyLib.c ****             uint32 rTrim;
1496:Generated_Source\PSoC4/CyLib.c ****             uint32 gTrim;
1497:Generated_Source\PSoC4/CyLib.c **** 
1498:Generated_Source\PSoC4/CyLib.c ****             uint32 gmMin;
1499:Generated_Source\PSoC4/CyLib.c **** 
1500:Generated_Source\PSoC4/CyLib.c **** 
1501:Generated_Source\PSoC4/CyLib.c ****             if ((maxAmplitude < CY_SYS_CLK_ECO_MAX_AMPL_MIN_mV) ||
1502:Generated_Source\PSoC4/CyLib.c ****                 (freq < CY_SYS_CLK_ECO_FREQ_KHZ_MIN) || (freq > CY_SYS_CLK_ECO_FREQ_KHZ_MAX))
1503:Generated_Source\PSoC4/CyLib.c ****             {
1504:Generated_Source\PSoC4/CyLib.c ****                 returnStatus = CYRET_BAD_PARAM;
1505:Generated_Source\PSoC4/CyLib.c ****             }
1506:Generated_Source\PSoC4/CyLib.c ****             else
1507:Generated_Source\PSoC4/CyLib.c ****             {
1508:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate amplitude trim */
1509:Generated_Source\PSoC4/CyLib.c ****                 aTrim = (maxAmplitude < CY_SYS_CLK_ECO_TRIM_BOUNDARY) ? ((maxAmplitude/100u) - 4u) 
1510:Generated_Source\PSoC4/CyLib.c **** 
1511:Generated_Source\PSoC4/CyLib.c ****                 if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM0)
1512:Generated_Source\PSoC4/CyLib.c ****                 {
1513:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM0;
1514:Generated_Source\PSoC4/CyLib.c ****                 }
1515:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM1)
1516:Generated_Source\PSoC4/CyLib.c ****                 {
1517:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM1;
1518:Generated_Source\PSoC4/CyLib.c ****                 }
1519:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM2)
1520:Generated_Source\PSoC4/CyLib.c ****                 {
1521:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM2;
1522:Generated_Source\PSoC4/CyLib.c ****                 }
1523:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM3)
1524:Generated_Source\PSoC4/CyLib.c ****                 {
1525:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM3;
1526:Generated_Source\PSoC4/CyLib.c ****                 }
1527:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM4)
1528:Generated_Source\PSoC4/CyLib.c ****                 {
1529:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM4;
1530:Generated_Source\PSoC4/CyLib.c ****                 }
1531:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM5)
1532:Generated_Source\PSoC4/CyLib.c ****                 {
1533:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM5;
1534:Generated_Source\PSoC4/CyLib.c ****                 }
1535:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM6)
1536:Generated_Source\PSoC4/CyLib.c ****                 {
1537:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM6;
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccaiT5A1.s 			page 41


1538:Generated_Source\PSoC4/CyLib.c ****                 }
1539:Generated_Source\PSoC4/CyLib.c ****                 else
1540:Generated_Source\PSoC4/CyLib.c ****                 {
1541:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM7;
1542:Generated_Source\PSoC4/CyLib.c ****                 }
1543:Generated_Source\PSoC4/CyLib.c **** 
1544:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate Watchdog trim. */
1545:Generated_Source\PSoC4/CyLib.c ****                 wDTrim = (maxAmplitude < CY_SYS_CLK_ECO_TRIM_BOUNDARY) ? ((maxAmplitude/200u) - 2u)
1546:Generated_Source\PSoC4/CyLib.c **** 
1547:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate amplifier gain trim. */
1548:Generated_Source\PSoC4/CyLib.c ****                 gmMin = (uint32) (((((CY_SYS_CLK_ECO_GMMIN_COEFFICIENT * freq * cLoad) / 1000) * ((
1549:Generated_Source\PSoC4/CyLib.c ****                 if (gmMin > 3u)
1550:Generated_Source\PSoC4/CyLib.c ****                 {
1551:Generated_Source\PSoC4/CyLib.c ****                     returnStatus = CYRET_BAD_PARAM;
1552:Generated_Source\PSoC4/CyLib.c ****                     gTrim = 0u;
1553:Generated_Source\PSoC4/CyLib.c ****                 }
1554:Generated_Source\PSoC4/CyLib.c ****                 else if (gmMin > 1u)
1555:Generated_Source\PSoC4/CyLib.c ****                 {
1556:Generated_Source\PSoC4/CyLib.c ****                     gTrim = gmMin;
1557:Generated_Source\PSoC4/CyLib.c ****                 }
1558:Generated_Source\PSoC4/CyLib.c ****                 else
1559:Generated_Source\PSoC4/CyLib.c ****                 {
1560:Generated_Source\PSoC4/CyLib.c ****                     gTrim = (gmMin == 1u) ? 0u : 1u;
1561:Generated_Source\PSoC4/CyLib.c ****                 }
1562:Generated_Source\PSoC4/CyLib.c **** 
1563:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate feedback resistor trim */
1564:Generated_Source\PSoC4/CyLib.c ****                 if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM0)
1565:Generated_Source\PSoC4/CyLib.c ****                 {
1566:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM0;
1567:Generated_Source\PSoC4/CyLib.c ****                 }
1568:Generated_Source\PSoC4/CyLib.c ****                 else if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM1)
1569:Generated_Source\PSoC4/CyLib.c ****                 {
1570:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM1;
1571:Generated_Source\PSoC4/CyLib.c ****                 }
1572:Generated_Source\PSoC4/CyLib.c ****                 else if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM2)
1573:Generated_Source\PSoC4/CyLib.c ****                 {
1574:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM2;
1575:Generated_Source\PSoC4/CyLib.c ****                 }
1576:Generated_Source\PSoC4/CyLib.c ****                 else
1577:Generated_Source\PSoC4/CyLib.c ****                 {
1578:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM3;
1579:Generated_Source\PSoC4/CyLib.c ****                 }
1580:Generated_Source\PSoC4/CyLib.c **** 
1581:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate filter frequency trim */
1582:Generated_Source\PSoC4/CyLib.c ****                 fTrim = rTrim;
1583:Generated_Source\PSoC4/CyLib.c **** 
1584:Generated_Source\PSoC4/CyLib.c ****                 CySysClkConfigureEcoTrim(wDTrim, aTrim, fTrim, rTrim, gTrim);
1585:Generated_Source\PSoC4/CyLib.c **** 
1586:Generated_Source\PSoC4/CyLib.c ****                 /* Automatic Gain Control (AGC) enable */
1587:Generated_Source\PSoC4/CyLib.c ****                 if (maxAmplitude < 2u)
1588:Generated_Source\PSoC4/CyLib.c ****                 {
1589:Generated_Source\PSoC4/CyLib.c ****                     /* The oscillation amplitude is controlled to the level selected by amplitude t
1590:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_AGC_EN;
1591:Generated_Source\PSoC4/CyLib.c ****                 }
1592:Generated_Source\PSoC4/CyLib.c ****                 else
1593:Generated_Source\PSoC4/CyLib.c ****                 {
1594:Generated_Source\PSoC4/CyLib.c ****                     /* The amplitude is not explicitly controlled and will grow until it saturates 
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccaiT5A1.s 			page 42


1595:Generated_Source\PSoC4/CyLib.c ****                     * supply rail (1.8V nom).
1596:Generated_Source\PSoC4/CyLib.c ****                     */
1597:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_ECO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_ECO_CONFIG_AGC_EN;
1598:Generated_Source\PSoC4/CyLib.c ****                 }
1599:Generated_Source\PSoC4/CyLib.c ****             }
1600:Generated_Source\PSoC4/CyLib.c **** 
1601:Generated_Source\PSoC4/CyLib.c ****             return (returnStatus);
1602:Generated_Source\PSoC4/CyLib.c ****         }
1603:Generated_Source\PSoC4/CyLib.c **** 
1604:Generated_Source\PSoC4/CyLib.c ****     #endif /* CY_IP_ECO_BLESS */
1605:Generated_Source\PSoC4/CyLib.c **** 
1606:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_ECO) */
1607:Generated_Source\PSoC4/CyLib.c **** 
1608:Generated_Source\PSoC4/CyLib.c **** 
1609:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_PLL)
1610:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1611:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllStart
1612:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1613:Generated_Source\PSoC4/CyLib.c ****     *
1614:Generated_Source\PSoC4/CyLib.c ****     * Enables the PLL. Optionally waits for it to become stable. Waits at least
1615:Generated_Source\PSoC4/CyLib.c ****     * 250 us or until it is detected that the PLL is stable.
1616:Generated_Source\PSoC4/CyLib.c ****     *
1617:Generated_Source\PSoC4/CyLib.c ****     * Clears the unlock occurred status bit by calling CySysClkPllGetUnlockStatus(),
1618:Generated_Source\PSoC4/CyLib.c ****     * once the PLL is locked if the wait parameter is 1).
1619:Generated_Source\PSoC4/CyLib.c ****     *
1620:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S with PLL devices.
1621:Generated_Source\PSoC4/CyLib.c ****     *
1622:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1623:Generated_Source\PSoC4/CyLib.c ****     * 0   PLL#0
1624:Generated_Source\PSoC4/CyLib.c ****     * 1   PLL#1 (available only for PSoC 4200L)
1625:Generated_Source\PSoC4/CyLib.c ****     *
1626:Generated_Source\PSoC4/CyLib.c ****     * \param wait:
1627:Generated_Source\PSoC4/CyLib.c ****     * 0 - Return immediately after configuration.
1628:Generated_Source\PSoC4/CyLib.c ****     * 1 - Wait for PLL lock or timeout. This API shall use the CyDelayUs() to
1629:Generated_Source\PSoC4/CyLib.c ****     * implement the timeout feature.
1630:Generated_Source\PSoC4/CyLib.c ****     *
1631:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS Completed successfully.
1632:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_TIMEOUT The timeout occurred without detecting a stable clock.
1633:Generated_Source\PSoC4/CyLib.c ****     * If the input source of the clock is jittery, then the lock indication may
1634:Generated_Source\PSoC4/CyLib.c ****     * not occur. However, after the timeout has expired, the generated PLL clock can
1635:Generated_Source\PSoC4/CyLib.c ****     * still be used.
1636:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM - Either the PLL or wait parameter is invalid.
1637:Generated_Source\PSoC4/CyLib.c ****     *
1638:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1639:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllStart(uint32 pll, uint32 wait)
1640:Generated_Source\PSoC4/CyLib.c ****     {
1641:Generated_Source\PSoC4/CyLib.c ****         uint32 counts = CY_SYS_CLK_PLL_MAX_STARTUP_US;
1642:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1643:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
1644:Generated_Source\PSoC4/CyLib.c **** 
1645:Generated_Source\PSoC4/CyLib.c ****         if((pll < CY_IP_PLL_NR) && (wait <= 1u))
1646:Generated_Source\PSoC4/CyLib.c ****         {
1647:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1648:Generated_Source\PSoC4/CyLib.c **** 
1649:Generated_Source\PSoC4/CyLib.c ****             /* Isolate PLL outputs */
1650:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config &= (uint32) ~CY_SYS_CLK_PLL_CONFIG_ISOLATE;
1651:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccaiT5A1.s 			page 43


1652:Generated_Source\PSoC4/CyLib.c ****             /* Enable PLL */
1653:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config |= CY_SYS_CLK_PLL_CONFIG_ENABLE;
1654:Generated_Source\PSoC4/CyLib.c **** 
1655:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1656:Generated_Source\PSoC4/CyLib.c **** 
1657:Generated_Source\PSoC4/CyLib.c ****             /* De-isolate >= CY_SYS_CLK_PLL_MIN_STARTUP_US after PLL enabled */
1658:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_PLL_MIN_STARTUP_US);
1659:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1660:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config |= CY_SYS_CLK_PLL_CONFIG_ISOLATE;
1661:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1662:Generated_Source\PSoC4/CyLib.c **** 
1663:Generated_Source\PSoC4/CyLib.c ****             if(wait != 0u)
1664:Generated_Source\PSoC4/CyLib.c ****             {
1665:Generated_Source\PSoC4/CyLib.c ****                 returnStatus = CYRET_TIMEOUT;
1666:Generated_Source\PSoC4/CyLib.c **** 
1667:Generated_Source\PSoC4/CyLib.c ****                 while(0u != counts)
1668:Generated_Source\PSoC4/CyLib.c ****                 {
1669:Generated_Source\PSoC4/CyLib.c **** 
1670:Generated_Source\PSoC4/CyLib.c ****                     if(0u != CySysClkPllGetLockStatus(pll))
1671:Generated_Source\PSoC4/CyLib.c ****                     {
1672:Generated_Source\PSoC4/CyLib.c ****                         returnStatus = CYRET_SUCCESS;
1673:Generated_Source\PSoC4/CyLib.c ****                         (void) CySysClkPllGetUnlockStatus(pll);
1674:Generated_Source\PSoC4/CyLib.c ****                         break;
1675:Generated_Source\PSoC4/CyLib.c ****                     }
1676:Generated_Source\PSoC4/CyLib.c **** 
1677:Generated_Source\PSoC4/CyLib.c ****                     CyDelayUs(1u);
1678:Generated_Source\PSoC4/CyLib.c ****                     counts--;
1679:Generated_Source\PSoC4/CyLib.c ****                 }
1680:Generated_Source\PSoC4/CyLib.c ****             }
1681:Generated_Source\PSoC4/CyLib.c ****         }
1682:Generated_Source\PSoC4/CyLib.c ****         else
1683:Generated_Source\PSoC4/CyLib.c ****         {
1684:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_BAD_PARAM;
1685:Generated_Source\PSoC4/CyLib.c ****         }
1686:Generated_Source\PSoC4/CyLib.c **** 
1687:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1688:Generated_Source\PSoC4/CyLib.c ****     }
1689:Generated_Source\PSoC4/CyLib.c **** 
1690:Generated_Source\PSoC4/CyLib.c **** 
1691:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1692:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetLockStatus
1693:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1694:Generated_Source\PSoC4/CyLib.c ****     *
1695:Generated_Source\PSoC4/CyLib.c ****     * Returns non-zero if the output of the specified PLL output is locked.
1696:Generated_Source\PSoC4/CyLib.c ****     *
1697:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S with PLL devices.
1698:Generated_Source\PSoC4/CyLib.c ****     *
1699:Generated_Source\PSoC4/CyLib.c ****     * PLL:
1700:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1701:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
1702:Generated_Source\PSoC4/CyLib.c ****     *
1703:Generated_Source\PSoC4/CyLib.c ****     * \return A non-zero value when the specified PLL is locked.
1704:Generated_Source\PSoC4/CyLib.c ****     *
1705:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1706:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkPllGetLockStatus(uint32 pll)
1707:Generated_Source\PSoC4/CyLib.c ****     {
1708:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccaiT5A1.s 			page 44


1709:Generated_Source\PSoC4/CyLib.c ****         uint32 returnStatus;
1710:Generated_Source\PSoC4/CyLib.c **** 
1711:Generated_Source\PSoC4/CyLib.c ****         CYASSERT(pll < CY_IP_PLL_NR);
1712:Generated_Source\PSoC4/CyLib.c **** 
1713:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1714:Generated_Source\PSoC4/CyLib.c **** 
1715:Generated_Source\PSoC4/CyLib.c ****         /* PLL is locked if reported so for two consecutive read. */
1716:Generated_Source\PSoC4/CyLib.c ****         returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].status & CY_SYS_CLK_PLL_STATUS_LOCKED;
1717:Generated_Source\PSoC4/CyLib.c ****         if(0u != returnStatus)
1718:Generated_Source\PSoC4/CyLib.c ****         {
1719:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].status & CY_SYS_CLK_PLL_STATUS_LOCKED;
1720:Generated_Source\PSoC4/CyLib.c ****         }
1721:Generated_Source\PSoC4/CyLib.c **** 
1722:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1723:Generated_Source\PSoC4/CyLib.c **** 
1724:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1725:Generated_Source\PSoC4/CyLib.c ****     }
1726:Generated_Source\PSoC4/CyLib.c **** 
1727:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1728:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllStop
1729:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1730:Generated_Source\PSoC4/CyLib.c ****     *
1731:Generated_Source\PSoC4/CyLib.c ****     * Disables the PLL.
1732:Generated_Source\PSoC4/CyLib.c ****     *
1733:Generated_Source\PSoC4/CyLib.c ****     * Ensures that either PLL is not the source of HFCLK before it is disabled,
1734:Generated_Source\PSoC4/CyLib.c ****     * otherwise, the CPU will halt.
1735:Generated_Source\PSoC4/CyLib.c ****     *
1736:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S with PLL devices.
1737:Generated_Source\PSoC4/CyLib.c ****     *
1738:Generated_Source\PSoC4/CyLib.c ****     * PLL:
1739:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1740:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
1741:Generated_Source\PSoC4/CyLib.c ****     *
1742:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1743:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllStop(uint32 pll)
1744:Generated_Source\PSoC4/CyLib.c ****     {
1745:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1746:Generated_Source\PSoC4/CyLib.c **** 
1747:Generated_Source\PSoC4/CyLib.c ****         if (pll < CY_IP_PLL_NR)
1748:Generated_Source\PSoC4/CyLib.c ****         {
1749:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1750:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config &= (uint32) ~(CY_SYS_CLK_PLL_CONFIG_ISOLATE | CY_SY
1751:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1752:Generated_Source\PSoC4/CyLib.c ****         }
1753:Generated_Source\PSoC4/CyLib.c ****     }
1754:Generated_Source\PSoC4/CyLib.c **** 
1755:Generated_Source\PSoC4/CyLib.c **** 
1756:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1757:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetPQ
1758:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1759:Generated_Source\PSoC4/CyLib.c ****     *
1760:Generated_Source\PSoC4/CyLib.c ****     * Sets feedback (P) and reference the (Q) divider value. This API also sets the
1761:Generated_Source\PSoC4/CyLib.c ****     * programmable charge pump current value. Note that the PLL has to be disabled
1762:Generated_Source\PSoC4/CyLib.c ****     * before calling this API. If this function is called while any PLL is sourcing,
1763:Generated_Source\PSoC4/CyLib.c ****     * the SYSCLK will return an error.
1764:Generated_Source\PSoC4/CyLib.c ****     *
1765:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function. The
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccaiT5A1.s 			page 45


1766:Generated_Source\PSoC4/CyLib.c ****     * PLL output will glitch during this function call.
1767:Generated_Source\PSoC4/CyLib.c ****     *
1768:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S with PLL devices.
1769:Generated_Source\PSoC4/CyLib.c ****     *
1770:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1771:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1772:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
1773:Generated_Source\PSoC4/CyLib.c ****     *
1774:Generated_Source\PSoC4/CyLib.c ****     * \param feedback The P divider. Range 4 - 259. Control bits for the feedback
1775:Generated_Source\PSoC4/CyLib.c ****     * divider.
1776:Generated_Source\PSoC4/CyLib.c ****     *
1777:Generated_Source\PSoC4/CyLib.c ****     * \param reference The Q divider. Range 1 - 64. Divide by the reference.
1778:Generated_Source\PSoC4/CyLib.c ****     *
1779:Generated_Source\PSoC4/CyLib.c ****     * \param current Charge the pump current in uA. The 2 uA for output frequencies
1780:Generated_Source\PSoC4/CyLib.c ****     * of 67 MHz or less, and 3 uA for higher output frequencies. The default
1781:Generated_Source\PSoC4/CyLib.c ****     * value is 2 uA.
1782:Generated_Source\PSoC4/CyLib.c ****     *
1783:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS Completed successfully.
1784:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM The parameters are out of range or the specified PLL
1785:Generated_Source\PSoC4/CyLib.c ****     * sources the system clock.
1786:Generated_Source\PSoC4/CyLib.c ****     *
1787:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1788:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetPQ(uint32 pll, uint32 feedback, uint32 reference, uint32 current)
1789:Generated_Source\PSoC4/CyLib.c ****     {
1790:Generated_Source\PSoC4/CyLib.c ****         uint32   regTmp;
1791:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
1792:Generated_Source\PSoC4/CyLib.c ****         uint8    interruptState;
1793:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
1794:Generated_Source\PSoC4/CyLib.c **** 
1795:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1796:Generated_Source\PSoC4/CyLib.c **** 
1797:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
1798:Generated_Source\PSoC4/CyLib.c **** 
1799:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) &&
1800:Generated_Source\PSoC4/CyLib.c ****             (feedback  >= CY_SYS_CLK_PLL_CONFIG_FEEDBACK_DIV_MIN)  && (feedback  <= CY_SYS_CLK_PLL_
1801:Generated_Source\PSoC4/CyLib.c ****             (reference >= CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_MIN) && (reference <= CY_SYS_CLK_PLL_
1802:Generated_Source\PSoC4/CyLib.c ****             (current   >= CY_SYS_CLK_PLL_CONFIG_ICP_SEL_MIN )      && (current   <= CY_SYS_CLK_PLL_
1803:Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
1804:Generated_Source\PSoC4/CyLib.c ****         {
1805:Generated_Source\PSoC4/CyLib.c ****             /* Set new feedback, reference and current values */
1806:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~(CY_SYS_CLK_PLL_CONFIG_FEEDBA
1807:Generated_Source\PSoC4/CyLib.c ****                                                                        CY_SYS_CLK_PLL_CONFIG_REFERE
1808:Generated_Source\PSoC4/CyLib.c ****                                                                        CY_SYS_CLK_PLL_CONFIG_ICP_SE
1809:Generated_Source\PSoC4/CyLib.c **** 
1810:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((feedback << CY_SYS_CLK_PLL_CONFIG_FEEDBACK_DIV_SHIFT) & CY_SYS_CLK_PLL_CONF
1811:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (((reference - 1u) << CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_SHIFT) & CY_SYS_CLK
1812:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((current << CY_SYS_CLK_PLL_CONFIG_ICP_SEL_SHIFT) & CY_SYS_CLK_PLL_CONFIG_ICP
1813:Generated_Source\PSoC4/CyLib.c **** 
1814:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = regTmp;
1815:Generated_Source\PSoC4/CyLib.c **** 
1816:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_SUCCESS;
1817:Generated_Source\PSoC4/CyLib.c ****         }
1818:Generated_Source\PSoC4/CyLib.c **** 
1819:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1820:Generated_Source\PSoC4/CyLib.c **** 
1821:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1822:Generated_Source\PSoC4/CyLib.c ****     }
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccaiT5A1.s 			page 46


1823:Generated_Source\PSoC4/CyLib.c **** 
1824:Generated_Source\PSoC4/CyLib.c **** 
1825:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1826:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetBypassMode
1827:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1828:Generated_Source\PSoC4/CyLib.c ****     *
1829:Generated_Source\PSoC4/CyLib.c ****     * Sets the bypass mode for the specified PLL.
1830:Generated_Source\PSoC4/CyLib.c ****     *
1831:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function.
1832:Generated_Source\PSoC4/CyLib.c ****     * The PLL output will glitch during this function call.
1833:Generated_Source\PSoC4/CyLib.c ****     *
1834:Generated_Source\PSoC4/CyLib.c ****     * When the PLL's reference input is higher than HFCLK frequency the device may 
1835:Generated_Source\PSoC4/CyLib.c ****     * lock due to incorrect flash wait cycle configuration and bypass switches from 
1836:Generated_Source\PSoC4/CyLib.c ****     * PLL output to the reference input. See description of 
1837:Generated_Source\PSoC4/CyLib.c ****     * CySysFlashSetWaitCycles() for more information.
1838:Generated_Source\PSoC4/CyLib.c ****     *
1839:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S with PLL devices.
1840:Generated_Source\PSoC4/CyLib.c ****     *
1841:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1842:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1843:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
1844:Generated_Source\PSoC4/CyLib.c ****     *
1845:Generated_Source\PSoC4/CyLib.c ****     * \param bypass: The bypass mode.
1846:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_AUTO - Automatic usage of the lock indicator. When unlocked,
1847:Generated_Source\PSoC4/CyLib.c ****     * automatically selects PLL the reference input (bypass mode). When locked,
1848:Generated_Source\PSoC4/CyLib.c ****     * automatically selects the PLL output.
1849:Generated_Source\PSoC4/CyLib.c ****     *
1850:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_PLL_REF - Selects the PLL reference input (bypass mode).
1851:Generated_Source\PSoC4/CyLib.c ****     * Ignores the lock indicator.
1852:Generated_Source\PSoC4/CyLib.c ****     *
1853:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_PLL_OUT - Selects the PLL output.  Ignores the lock indicator.
1854:Generated_Source\PSoC4/CyLib.c ****     *
1855:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1856:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllSetBypassMode(uint32 pll, uint32 bypass)
1857:Generated_Source\PSoC4/CyLib.c ****     {
1858:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
1859:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1860:Generated_Source\PSoC4/CyLib.c **** 
1861:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1862:Generated_Source\PSoC4/CyLib.c **** 
1863:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) && (bypass <= CY_SYS_PLL_BYPASS_PLL_OUT))
1864:Generated_Source\PSoC4/CyLib.c ****         {
1865:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~CY_SYS_CLK_PLL_CONFIG_BYPASS_
1866:Generated_Source\PSoC4/CyLib.c ****             regTmp |=  (uint32)(bypass << CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_SHIFT);
1867:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = regTmp;
1868:Generated_Source\PSoC4/CyLib.c ****         }
1869:Generated_Source\PSoC4/CyLib.c **** 
1870:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1871:Generated_Source\PSoC4/CyLib.c ****     }
1872:Generated_Source\PSoC4/CyLib.c **** 
1873:Generated_Source\PSoC4/CyLib.c **** 
1874:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1875:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetBypassMode
1876:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1877:Generated_Source\PSoC4/CyLib.c ****     *
1878:Generated_Source\PSoC4/CyLib.c ****     *  Gets the bypass mode for the specified PLL.
1879:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L / 4100S with PLL devices.
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccaiT5A1.s 			page 47


1880:Generated_Source\PSoC4/CyLib.c ****     *
1881:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1882:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1883:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1 (available only for PSoC 4200L)
1884:Generated_Source\PSoC4/CyLib.c ****     *
1885:Generated_Source\PSoC4/CyLib.c ****     *  \param bypass: Bypass mode.
1886:Generated_Source\PSoC4/CyLib.c ****     *   The same as the parameter of the CySysClkPllSetBypassMode().
1887:Generated_Source\PSoC4/CyLib.c ****     *
1888:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1889:Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkPllGetBypassMode(uint32 pll)
1890:Generated_Source\PSoC4/CyLib.c ****     {
1891:Generated_Source\PSoC4/CyLib.c ****         uint32 returnValue;
1892:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1893:Generated_Source\PSoC4/CyLib.c **** 
1894:Generated_Source\PSoC4/CyLib.c ****         CYASSERT(pll < CY_IP_PLL_NR);
1895:Generated_Source\PSoC4/CyLib.c **** 
1896:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1897:Generated_Source\PSoC4/CyLib.c **** 
1898:Generated_Source\PSoC4/CyLib.c ****         returnValue = CY_SYS_CLK_PLL_BASE.pll[pll].config & CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_MASK;
1899:Generated_Source\PSoC4/CyLib.c ****         returnValue =  returnValue >> CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_SHIFT;
1900:Generated_Source\PSoC4/CyLib.c **** 
1901:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1902:Generated_Source\PSoC4/CyLib.c **** 
1903:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1904:Generated_Source\PSoC4/CyLib.c ****     }
1905:Generated_Source\PSoC4/CyLib.c **** 
1906:Generated_Source\PSoC4/CyLib.c **** 
1907:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1908:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllConfigChangeAllowed
1909:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1910:Generated_Source\PSoC4/CyLib.c ****     *
1911:Generated_Source\PSoC4/CyLib.c ****     *  The function returns non-zero value if the specified PLL sources the System
1912:Generated_Source\PSoC4/CyLib.c ****     *  clock and the PLL is not in the bypass mode.
1913:Generated_Source\PSoC4/CyLib.c ****     *
1914:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L / 4100S with PLL devices.
1915:Generated_Source\PSoC4/CyLib.c ****     *
1916:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1917:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1918:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1 (available only for PSoC 4200L)
1919:Generated_Source\PSoC4/CyLib.c ****     *
1920:Generated_Source\PSoC4/CyLib.c ****     * \return Non-zero value when the specified PLL sources the System clock and
1921:Generated_Source\PSoC4/CyLib.c ****     * the PLL is not in the bypass mode.
1922:Generated_Source\PSoC4/CyLib.c ****     *
1923:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1924:Generated_Source\PSoC4/CyLib.c ****     static cystatus CySysClkPllConfigChangeAllowed(uint32 pll)
1925:Generated_Source\PSoC4/CyLib.c ****     {
1926:Generated_Source\PSoC4/CyLib.c ****         uint32   pllBypassMode;
1927:Generated_Source\PSoC4/CyLib.c ****         uint32   sysclkSource;
1928:Generated_Source\PSoC4/CyLib.c ****         cystatus returnValue = CYRET_INVALID_STATE;
1929:Generated_Source\PSoC4/CyLib.c **** 
1930:Generated_Source\PSoC4/CyLib.c ****         sysclkSource  = CySysClkGetSysclkSource();
1931:Generated_Source\PSoC4/CyLib.c ****         pllBypassMode = CySysClkPllGetBypassMode(pll);
1932:Generated_Source\PSoC4/CyLib.c **** 
1933:Generated_Source\PSoC4/CyLib.c ****         if ((CY_SYS_PLL_BYPASS_PLL_REF == pllBypassMode)             ||
1934:Generated_Source\PSoC4/CyLib.c ****             ((CY_SYS_CLK_HFCLK_PLL0 != sysclkSource) && (0u == pll))
1935:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_SRSSV2)
1936:Generated_Source\PSoC4/CyLib.c ****             || ((CY_SYS_CLK_HFCLK_PLL1 != sysclkSource) && (1u == pll))
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccaiT5A1.s 			page 48


1937:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_SRSSV2) */
1938:Generated_Source\PSoC4/CyLib.c ****             )
1939:Generated_Source\PSoC4/CyLib.c ****         {
1940:Generated_Source\PSoC4/CyLib.c ****             returnValue = CYRET_SUCCESS;
1941:Generated_Source\PSoC4/CyLib.c ****         }
1942:Generated_Source\PSoC4/CyLib.c **** 
1943:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1944:Generated_Source\PSoC4/CyLib.c ****     }
1945:Generated_Source\PSoC4/CyLib.c **** 
1946:Generated_Source\PSoC4/CyLib.c **** 
1947:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1948:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetUnlockStatus
1949:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1950:Generated_Source\PSoC4/CyLib.c ****     *
1951:Generated_Source\PSoC4/CyLib.c ****     *  Returns a non-zero value if the specified PLL output was unlocked.
1952:Generated_Source\PSoC4/CyLib.c ****     *  The unlock status is an indicator that the PLL has lost a lock at least once
1953:Generated_Source\PSoC4/CyLib.c ****     *  during its operation. The unlock status is cleared once it is read using
1954:Generated_Source\PSoC4/CyLib.c ****     *  this API.
1955:Generated_Source\PSoC4/CyLib.c ****     *
1956:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L / 4100S with PLL devices.
1957:Generated_Source\PSoC4/CyLib.c ****     *
1958:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1959:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1960:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1 (available only for PSoC 4200L)
1961:Generated_Source\PSoC4/CyLib.c ****     *
1962:Generated_Source\PSoC4/CyLib.c ****     * \return Non-zero value when the specified PLL was unlocked.
1963:Generated_Source\PSoC4/CyLib.c ****     *
1964:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1965:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkPllGetUnlockStatus(uint32 pll)
1966:Generated_Source\PSoC4/CyLib.c ****     {
1967:Generated_Source\PSoC4/CyLib.c ****         uint32 returnStatus = 0u;
1968:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1969:Generated_Source\PSoC4/CyLib.c **** 
1970:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1971:Generated_Source\PSoC4/CyLib.c **** 
1972:Generated_Source\PSoC4/CyLib.c ****         returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].test & CY_SYS_CLK_PLL_TEST_UNLOCK_OCCURRED_MASK
1973:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_PLL_BASE.pll[pll].test |= CY_SYS_CLK_PLL_TEST_UNLOCK_OCCURRED_MASK;
1974:Generated_Source\PSoC4/CyLib.c **** 
1975:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1976:Generated_Source\PSoC4/CyLib.c **** 
1977:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1978:Generated_Source\PSoC4/CyLib.c ****     }
1979:Generated_Source\PSoC4/CyLib.c **** 
1980:Generated_Source\PSoC4/CyLib.c **** 
1981:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1982:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetFrequency
1983:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1984:Generated_Source\PSoC4/CyLib.c ****     *
1985:Generated_Source\PSoC4/CyLib.c ****     * Configures either PLL#0 or PLL#1 for the requested input/output frequencies.
1986:Generated_Source\PSoC4/CyLib.c ****     * The input frequency is the frequency of the source to the PLL. The source is
1987:Generated_Source\PSoC4/CyLib.c ****     * set using the CySysClkPllSetSource() function.
1988:Generated_Source\PSoC4/CyLib.c ****     *
1989:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function. The
1990:Generated_Source\PSoC4/CyLib.c ****     * PLL output will glitch during this function call.
1991:Generated_Source\PSoC4/CyLib.c ****     *
1992:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L / 4100S with PLL devices.
1993:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccaiT5A1.s 			page 49


1994:Generated_Source\PSoC4/CyLib.c ****     * \param pll:
1995:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1996:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
1997:Generated_Source\PSoC4/CyLib.c ****     *
1998:Generated_Source\PSoC4/CyLib.c ****     * \param inputFreq The reference frequency in KHz. The valid range is from 1000 to 49152 KHz.
1999:Generated_Source\PSoC4/CyLib.c ****     *
2000:Generated_Source\PSoC4/CyLib.c ****     * \param pllFreq The target frequency in KHz. The valid range is from 22500 to 49152 KHz.
2001:Generated_Source\PSoC4/CyLib.c ****     *
2002:Generated_Source\PSoC4/CyLib.c ****     * \param divider The output clock divider for the PLL:
2003:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIVPASS    Pass Through
2004:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV2       Divide by 2
2005:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV4       Divide by 4
2006:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV8       Divide by 8
2007:Generated_Source\PSoC4/CyLib.c ****     *
2008:Generated_Source\PSoC4/CyLib.c ****     * \param freqTol The tolerance in ppm, 10 ppm is equal to 0.001%.
2009:Generated_Source\PSoC4/CyLib.c ****     *
2010:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS The PLL was successfully configured for the requested
2011:Generated_Source\PSoC4/CyLib.c ****     * frequency.
2012:Generated_Source\PSoC4/CyLib.c ****     *
2013:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM The PLL was not able to successfully configure for the
2014:Generated_Source\PSoC4/CyLib.c ****     * requested frequency.
2015:Generated_Source\PSoC4/CyLib.c ****     *
2016:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2017:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetFrequency(uint32 pll, uint32 inputFreq, uint32 pllFreq, uint32 divider, 
2018:Generated_Source\PSoC4/CyLib.c ****     {
2019:Generated_Source\PSoC4/CyLib.c ****         uint32 qMin;
2020:Generated_Source\PSoC4/CyLib.c ****         uint32 qMax;
2021:Generated_Source\PSoC4/CyLib.c **** 
2022:Generated_Source\PSoC4/CyLib.c ****         uint32 qVal = CY_SYS_CLK_PLL_INVALID;
2023:Generated_Source\PSoC4/CyLib.c ****         uint32 pVal = CY_SYS_CLK_PLL_INVALID;
2024:Generated_Source\PSoC4/CyLib.c **** 
2025:Generated_Source\PSoC4/CyLib.c ****         uint32 q;
2026:Generated_Source\PSoC4/CyLib.c ****         uint32 p;
2027:Generated_Source\PSoC4/CyLib.c **** 
2028:Generated_Source\PSoC4/CyLib.c ****         uint32 fvco;
2029:Generated_Source\PSoC4/CyLib.c ****         int32 ferr;
2030:Generated_Source\PSoC4/CyLib.c **** 
2031:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
2032:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
2033:Generated_Source\PSoC4/CyLib.c **** 
2034:Generated_Source\PSoC4/CyLib.c **** 
2035:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
2036:Generated_Source\PSoC4/CyLib.c **** 
2037:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) &&
2038:Generated_Source\PSoC4/CyLib.c ****             (inputFreq  >= CY_SYS_CLK_PLL_INPUT_FREQ_MIN )  && (inputFreq  <= CY_SYS_CLK_PLL_INPUT_
2039:Generated_Source\PSoC4/CyLib.c ****             (pllFreq >= CY_SYS_CLK_PLL_OUTPUT_FREQ_MIN ) && (pllFreq <= CY_SYS_CLK_PLL_OUTPUT_FREQ_
2040:Generated_Source\PSoC4/CyLib.c ****             (divider <= CY_SYS_PLL_OUTPUT_DIV8) &&
2041:Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
2042:Generated_Source\PSoC4/CyLib.c ****         {
2043:Generated_Source\PSoC4/CyLib.c **** 
2044:Generated_Source\PSoC4/CyLib.c ****             /* Minimum feed forward loop divisor */
2045:Generated_Source\PSoC4/CyLib.c ****             qMin = (inputFreq + (CY_SYS_CLK_PLL_FPFDMAX - 1u)) / CY_SYS_CLK_PLL_FPFDMAX;
2046:Generated_Source\PSoC4/CyLib.c ****             qMin = (qMin < CY_SYS_CLK_PLL_QMINIP) ? CY_SYS_CLK_PLL_QMINIP : qMin;
2047:Generated_Source\PSoC4/CyLib.c **** 
2048:Generated_Source\PSoC4/CyLib.c ****             /* Maximum feed forward loop divisor */
2049:Generated_Source\PSoC4/CyLib.c ****             qMax = inputFreq / CY_SYS_CLK_PLL_FPFDMIN;
2050:Generated_Source\PSoC4/CyLib.c ****             qMax = (qMax > CY_SYS_CLK_PLL_QMAXIP) ? CY_SYS_CLK_PLL_QMAXIP : qMax;
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccaiT5A1.s 			page 50


2051:Generated_Source\PSoC4/CyLib.c **** 
2052:Generated_Source\PSoC4/CyLib.c ****             if (qMin <= qMax)
2053:Generated_Source\PSoC4/CyLib.c ****             {
2054:Generated_Source\PSoC4/CyLib.c ****                 for(q = qMin; q <= qMax; q++)
2055:Generated_Source\PSoC4/CyLib.c ****                 {
2056:Generated_Source\PSoC4/CyLib.c ****                     /* Solve for the feedback divisor value */
2057:Generated_Source\PSoC4/CyLib.c **** 
2058:Generated_Source\PSoC4/CyLib.c ****                     /* INT((pllFreq * q ) / inputFreq), where INT is normal rounding  */
2059:Generated_Source\PSoC4/CyLib.c ****                     p = ((pllFreq * q) + (inputFreq / 2u)) / inputFreq;
2060:Generated_Source\PSoC4/CyLib.c **** 
2061:Generated_Source\PSoC4/CyLib.c ****                     /* Calculate the actual VCO frequency (FVCO) */
2062:Generated_Source\PSoC4/CyLib.c ****                     fvco = ((inputFreq * p) / q);
2063:Generated_Source\PSoC4/CyLib.c **** 
2064:Generated_Source\PSoC4/CyLib.c ****                     /* Calculate the frequency error (FERR) */
2065:Generated_Source\PSoC4/CyLib.c ****                     ferr = ((1000000 * ((int32) fvco - (int32) pllFreq))/ (int32) pllFreq);
2066:Generated_Source\PSoC4/CyLib.c **** 
2067:Generated_Source\PSoC4/CyLib.c ****                     /* Bound check the frequency error and decide next action */
2068:Generated_Source\PSoC4/CyLib.c ****                     if ((( -1 * (int32) freqTol) <= ferr) && (ferr <= (int32) freqTol))
2069:Generated_Source\PSoC4/CyLib.c ****                     {
2070:Generated_Source\PSoC4/CyLib.c ****                         qVal = q;
2071:Generated_Source\PSoC4/CyLib.c ****                         pVal = p;
2072:Generated_Source\PSoC4/CyLib.c ****                         break;
2073:Generated_Source\PSoC4/CyLib.c ****                     }
2074:Generated_Source\PSoC4/CyLib.c ****                 }
2075:Generated_Source\PSoC4/CyLib.c **** 
2076:Generated_Source\PSoC4/CyLib.c **** 
2077:Generated_Source\PSoC4/CyLib.c ****                 if ((pVal != CY_SYS_CLK_PLL_INVALID) && (qVal != CY_SYS_CLK_PLL_INVALID))
2078:Generated_Source\PSoC4/CyLib.c ****                 {
2079:Generated_Source\PSoC4/CyLib.c ****                     if (CySysClkPllSetPQ(pll, pVal, qVal, CY_SYS_CLK_PLL_CURRENT_DEFAULT) == CYRET_
2080:Generated_Source\PSoC4/CyLib.c ****                     {
2081:Generated_Source\PSoC4/CyLib.c ****                         returnStatus = CySysClkPllSetOutputDivider(pll, divider);
2082:Generated_Source\PSoC4/CyLib.c ****                     }
2083:Generated_Source\PSoC4/CyLib.c ****                 }
2084:Generated_Source\PSoC4/CyLib.c ****             }
2085:Generated_Source\PSoC4/CyLib.c **** 
2086:Generated_Source\PSoC4/CyLib.c ****         }
2087:Generated_Source\PSoC4/CyLib.c **** 
2088:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
2089:Generated_Source\PSoC4/CyLib.c ****     }
2090:Generated_Source\PSoC4/CyLib.c **** 
2091:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2092:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetSource
2093:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2094:Generated_Source\PSoC4/CyLib.c ****     *
2095:Generated_Source\PSoC4/CyLib.c ****     *  Sets the input clock source to the PLL. The PLL must be disabled before
2096:Generated_Source\PSoC4/CyLib.c ****     *  calling this function.
2097:Generated_Source\PSoC4/CyLib.c ****     *
2098:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L / 4100S with PLL devices.
2099:Generated_Source\PSoC4/CyLib.c ****     *
2100:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
2101:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
2102:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1 (available only for PSoC 4200L)
2103:Generated_Source\PSoC4/CyLib.c ****     *
2104:Generated_Source\PSoC4/CyLib.c ****     * \param source:
2105:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_IMO        IMO
2106:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_EXTCLK     External Clock (available only for PSoC 4200L)
2107:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_ECO        ECO
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccaiT5A1.s 			page 51


2108:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI0       DSI_OUT[0] (available only for PSoC 4200L)
2109:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI1       DSI_OUT[1] (available only for PSoC 4200L)
2110:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI2       DSI_OUT[2] (available only for PSoC 4200L)
2111:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI3       DSI_OUT[3] (available only for PSoC 4200L)
2112:Generated_Source\PSoC4/CyLib.c ****     *
2113:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2114:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllSetSource(uint32 pll, uint32 source)
2115:Generated_Source\PSoC4/CyLib.c ****     {
2116:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
2117:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
2118:Generated_Source\PSoC4/CyLib.c ****         
2119:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_SRSSLT)
2120:Generated_Source\PSoC4/CyLib.c ****             uint8 i = 0u;
2121:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_SRSSLT) */
2122:Generated_Source\PSoC4/CyLib.c **** 
2123:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
2124:Generated_Source\PSoC4/CyLib.c **** 
2125:Generated_Source\PSoC4/CyLib.c ****         if (pll < CY_IP_PLL_NR)
2126:Generated_Source\PSoC4/CyLib.c ****         {
2127:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
2128:Generated_Source\PSoC4/CyLib.c ****                 regTmp = CY_SYS_CLK_SELECT_REG & (uint32) ~CY_SYS_CLK_SELECT_PLL_MASK(pll);
2129:Generated_Source\PSoC4/CyLib.c ****                 regTmp |= ((source << CY_SYS_CLK_SELECT_PLL_SHIFT(pll)) & CY_SYS_CLK_SELECT_PLL_MAS
2130:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_SELECT_REG = regTmp;
2131:Generated_Source\PSoC4/CyLib.c ****             #else
2132:Generated_Source\PSoC4/CyLib.c ****                 regTmp = CY_SYS_ECO_CLK_SELECT_REG & (uint32) ~CY_SYS_ECO_CLK_SELECT_PLL0_MASK;
2133:Generated_Source\PSoC4/CyLib.c ****                 regTmp |= ((source << CY_SYS_ECO_CLK_SELECT_PLL0_SHIFT) & CY_SYS_ECO_CLK_SELECT_PLL
2134:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_ECO_CLK_SELECT_REG = regTmp;
2135:Generated_Source\PSoC4/CyLib.c ****                 
2136:Generated_Source\PSoC4/CyLib.c ****                 /* Generate clock sequence to change clock source in CY_SYS_ECO_CLK_SELECT_REG */
2137:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_EXCO_PGM_CLK_REG |= CY_SYS_EXCO_PGM_CLK_ENABLE_MASK;
2138:Generated_Source\PSoC4/CyLib.c ****                 
2139:Generated_Source\PSoC4/CyLib.c ****                 for(i = 0u; i < CY_SYS_EXCO_PGM_CLK_SEQ_GENERATOR; i++)
2140:Generated_Source\PSoC4/CyLib.c ****                 {
2141:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_EXCO_PGM_CLK_REG |= CY_SYS_EXCO_PGM_CLK_CLK_ECO_MASK;
2142:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_EXCO_PGM_CLK_REG &= ~CY_SYS_EXCO_PGM_CLK_CLK_ECO_MASK;
2143:Generated_Source\PSoC4/CyLib.c ****                 }
2144:Generated_Source\PSoC4/CyLib.c ****                 
2145:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_EXCO_PGM_CLK_REG &= ~CY_SYS_EXCO_PGM_CLK_ENABLE_MASK;
2146:Generated_Source\PSoC4/CyLib.c **** 
2147:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_SRSSV2) */
2148:Generated_Source\PSoC4/CyLib.c ****         }
2149:Generated_Source\PSoC4/CyLib.c **** 
2150:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
2151:Generated_Source\PSoC4/CyLib.c ****     }
2152:Generated_Source\PSoC4/CyLib.c **** 
2153:Generated_Source\PSoC4/CyLib.c ****     
2154:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2155:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetOutputDivider
2156:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2157:Generated_Source\PSoC4/CyLib.c ****     *
2158:Generated_Source\PSoC4/CyLib.c ****     *  Sets the output clock divider for the PLL.
2159:Generated_Source\PSoC4/CyLib.c ****     *
2160:Generated_Source\PSoC4/CyLib.c ****     *  The PLL must not be the System Clock source when calling this function. The
2161:Generated_Source\PSoC4/CyLib.c ****     *  PLL output will glitch during this function call.
2162:Generated_Source\PSoC4/CyLib.c ****     *
2163:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L / 4100S with PLL devices.
2164:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccaiT5A1.s 			page 52


2165:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
2166:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
2167:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1 (available only for PSoC 4200L)
2168:Generated_Source\PSoC4/CyLib.c ****     *
2169:Generated_Source\PSoC4/CyLib.c ****     * \param divider:
2170:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIVPASS    Pass through
2171:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV2       Divide by 2
2172:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV4       Divide by 4
2173:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV8       Divide by 8
2174:Generated_Source\PSoC4/CyLib.c ****     *
2175:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_SUCCESS    Completed successfully.
2176:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_BAD_PARAM  The parameters are out of range or the
2177:Generated_Source\PSoC4/CyLib.c ****     * specified PLL sources the System clock.
2178:Generated_Source\PSoC4/CyLib.c ****     *
2179:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2180:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetOutputDivider(uint32 pll, uint32 divider)
2181:Generated_Source\PSoC4/CyLib.c ****     {
2182:Generated_Source\PSoC4/CyLib.c ****         uint32   tmpReg;
2183:Generated_Source\PSoC4/CyLib.c ****         uint8    interruptState;
2184:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
2185:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
2186:Generated_Source\PSoC4/CyLib.c **** 
2187:Generated_Source\PSoC4/CyLib.c **** 
2188:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
2189:Generated_Source\PSoC4/CyLib.c **** 
2190:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
2191:Generated_Source\PSoC4/CyLib.c **** 
2192:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) && (CYRET_SUCCESS == tmp) && (divider <= CY_SYS_PLL_OUTPUT_DIV8))
2193:Generated_Source\PSoC4/CyLib.c ****         {
2194:Generated_Source\PSoC4/CyLib.c ****             tmpReg  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~(CY_SYS_CLK_PLL_CONFIG_OUTPUT
2195:Generated_Source\PSoC4/CyLib.c ****             tmpReg |= ((divider << CY_SYS_CLK_PLL_CONFIG_OUTPUT_DIV_SHIFT) & CY_SYS_CLK_PLL_CONFIG_
2196:Generated_Source\PSoC4/CyLib.c **** 
2197:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = tmpReg;
2198:Generated_Source\PSoC4/CyLib.c **** 
2199:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_SUCCESS;
2200:Generated_Source\PSoC4/CyLib.c ****         }
2201:Generated_Source\PSoC4/CyLib.c **** 
2202:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
2203:Generated_Source\PSoC4/CyLib.c **** 
2204:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
2205:Generated_Source\PSoC4/CyLib.c ****     }
2206:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_PLL) */
2207:Generated_Source\PSoC4/CyLib.c **** 
2208:Generated_Source\PSoC4/CyLib.c **** 
2209:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
2210:Generated_Source\PSoC4/CyLib.c **** 
2211:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2212:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdEnable
2213:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2214:Generated_Source\PSoC4/CyLib.c ****     *
2215:Generated_Source\PSoC4/CyLib.c ****     *  Enables the output of the low-voltage monitor when Vddd is at or below the
2216:Generated_Source\PSoC4/CyLib.c ****     *  trip point, configures the device to generate an interrupt, and sets the
2217:Generated_Source\PSoC4/CyLib.c ****     *  voltage trip level.
2218:Generated_Source\PSoC4/CyLib.c ****     *
2219:Generated_Source\PSoC4/CyLib.c ****     *  \param threshold: Threshold selection for Low Voltage Detect circuit.
2220:Generated_Source\PSoC4/CyLib.c ****     *  Threshold variation is +/- 2.5% from these typical voltage choices.
2221:Generated_Source\PSoC4/CyLib.c ****     *         Define                     Voltage threshold
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccaiT5A1.s 			page 53


2222:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_75_V       1.7500 V
2223:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_80_V       1.8000 V
2224:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_90_V       1.9000 V
2225:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_00_V       2.0000 V
2226:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_10_V       2.1000 V
2227:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_20_V       2.2000 V
2228:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_30_V       2.3000 V
2229:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_40_V       2.4000 V
2230:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_50_V       2.5000 V
2231:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_60_V       2.6000 V
2232:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_70_V       2.7000 V
2233:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_80_V       2.8000 V
2234:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_90_V       2.9000 V
2235:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_00_V       3.0000 V
2236:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_20_V       3.2000 V
2237:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_4_50_V       4.5000 V
2238:Generated_Source\PSoC4/CyLib.c ****     *
2239:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2240:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdEnable(uint32 threshold)
2241:Generated_Source\PSoC4/CyLib.c ****     {
 735              		.loc 1 2241 0
 736              		.cfi_startproc
 737              		@ args = 0, pretend = 0, frame = 8
 738              		@ frame_needed = 1, uses_anonymous_args = 0
 739 0000 80B5     		push	{r7, lr}
 740              		.cfi_def_cfa_offset 8
 741              		.cfi_offset 7, -8
 742              		.cfi_offset 14, -4
 743 0002 82B0     		sub	sp, sp, #8
 744              		.cfi_def_cfa_offset 16
 745 0004 00AF     		add	r7, sp, #0
 746              		.cfi_def_cfa_register 7
 747 0006 7860     		str	r0, [r7, #4]
2242:Generated_Source\PSoC4/CyLib.c ****         /* Prevent propagating a false interrupt */
2243:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= (uint32) ~CY_LVD_PROPAGATE_INT_TO_CPU;
 748              		.loc 1 2243 0
 749 0008 144B     		ldr	r3, .L38
 750 000a 144A     		ldr	r2, .L38
 751 000c 1268     		ldr	r2, [r2]
 752 000e 0221     		movs	r1, #2
 753 0010 8A43     		bics	r2, r1
 754 0012 1A60     		str	r2, [r3]
2244:Generated_Source\PSoC4/CyLib.c **** 
2245:Generated_Source\PSoC4/CyLib.c ****         /* Set specified threshold */
2246:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG = (CY_LVD_PWR_VMON_CONFIG_REG & ~CY_LVD_PWR_VMON_CONFIG_LVD_SEL_
 755              		.loc 1 2246 0
 756 0014 124B     		ldr	r3, .L38+4
 757 0016 124A     		ldr	r2, .L38+4
 758 0018 1268     		ldr	r2, [r2]
 759 001a 1E21     		movs	r1, #30
 760 001c 8A43     		bics	r2, r1
 761 001e 1100     		movs	r1, r2
2247:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
 762              		.loc 1 2247 0
 763 0020 7A68     		ldr	r2, [r7, #4]
 764 0022 5200     		lsls	r2, r2, #1
 765 0024 1E20     		movs	r0, #30
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccaiT5A1.s 			page 54


 766 0026 0240     		ands	r2, r0
2246:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
 767              		.loc 1 2246 0
 768 0028 0A43     		orrs	r2, r1
 769 002a 1A60     		str	r2, [r3]
2248:Generated_Source\PSoC4/CyLib.c **** 
2249:Generated_Source\PSoC4/CyLib.c ****         /* Enable the LVD. This may cause a false LVD event. */
2250:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG |= CY_LVD_PWR_VMON_CONFIG_LVD_EN;
 770              		.loc 1 2250 0
 771 002c 0C4B     		ldr	r3, .L38+4
 772 002e 0C4A     		ldr	r2, .L38+4
 773 0030 1268     		ldr	r2, [r2]
 774 0032 0121     		movs	r1, #1
 775 0034 0A43     		orrs	r2, r1
 776 0036 1A60     		str	r2, [r3]
2251:Generated_Source\PSoC4/CyLib.c **** 
2252:Generated_Source\PSoC4/CyLib.c ****         /* Wait for the circuit to stabilize */
2253:Generated_Source\PSoC4/CyLib.c ****         CyDelayUs(CY_LVD_STABILIZE_TIMEOUT_US);
 777              		.loc 1 2253 0
 778 0038 FA23     		movs	r3, #250
 779 003a 9B00     		lsls	r3, r3, #2
 780 003c 1800     		movs	r0, r3
 781 003e FFF7FEFF 		bl	CyDelayUs
2254:Generated_Source\PSoC4/CyLib.c **** 
2255:Generated_Source\PSoC4/CyLib.c ****         /* Clear the false event */
2256:Generated_Source\PSoC4/CyLib.c ****         CySysLvdClearInterrupt();
 782              		.loc 1 2256 0
 783 0042 FFF7FEFF 		bl	CySysLvdClearInterrupt
2257:Generated_Source\PSoC4/CyLib.c **** 
2258:Generated_Source\PSoC4/CyLib.c ****         /* Unmask the interrupt */
2259:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   |= CY_LVD_PROPAGATE_INT_TO_CPU;
 784              		.loc 1 2259 0
 785 0046 054B     		ldr	r3, .L38
 786 0048 044A     		ldr	r2, .L38
 787 004a 1268     		ldr	r2, [r2]
 788 004c 0221     		movs	r1, #2
 789 004e 0A43     		orrs	r2, r1
 790 0050 1A60     		str	r2, [r3]
2260:Generated_Source\PSoC4/CyLib.c ****     }
 791              		.loc 1 2260 0
 792 0052 C046     		nop
 793 0054 BD46     		mov	sp, r7
 794 0056 02B0     		add	sp, sp, #8
 795              		@ sp needed
 796 0058 80BD     		pop	{r7, pc}
 797              	.L39:
 798 005a C046     		.align	2
 799              	.L38:
 800 005c 08000B40 		.word	1074462728
 801 0060 18000B40 		.word	1074462744
 802              		.cfi_endproc
 803              	.LFE7:
 804              		.size	CySysLvdEnable, .-CySysLvdEnable
 805              		.section	.text.CySysLvdDisable,"ax",%progbits
 806              		.align	2
 807              		.global	CySysLvdDisable
 808              		.code	16
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccaiT5A1.s 			page 55


 809              		.thumb_func
 810              		.type	CySysLvdDisable, %function
 811              	CySysLvdDisable:
 812              	.LFB8:
2261:Generated_Source\PSoC4/CyLib.c **** 
2262:Generated_Source\PSoC4/CyLib.c **** 
2263:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2264:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdDisable
2265:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2266:Generated_Source\PSoC4/CyLib.c ****     *
2267:Generated_Source\PSoC4/CyLib.c ****     *  Disables the low voltage detection. A low voltage interrupt is disabled.
2268:Generated_Source\PSoC4/CyLib.c ****     *
2269:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2270:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdDisable(void)
2271:Generated_Source\PSoC4/CyLib.c ****     {
 813              		.loc 1 2271 0
 814              		.cfi_startproc
 815              		@ args = 0, pretend = 0, frame = 0
 816              		@ frame_needed = 1, uses_anonymous_args = 0
 817 0000 80B5     		push	{r7, lr}
 818              		.cfi_def_cfa_offset 8
 819              		.cfi_offset 7, -8
 820              		.cfi_offset 14, -4
 821 0002 00AF     		add	r7, sp, #0
 822              		.cfi_def_cfa_register 7
2272:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= ~CY_LVD_PROPAGATE_INT_TO_CPU;
 823              		.loc 1 2272 0
 824 0004 074B     		ldr	r3, .L41
 825 0006 074A     		ldr	r2, .L41
 826 0008 1268     		ldr	r2, [r2]
 827 000a 0221     		movs	r1, #2
 828 000c 8A43     		bics	r2, r1
 829 000e 1A60     		str	r2, [r3]
2273:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG &= ~CY_LVD_PWR_VMON_CONFIG_LVD_EN;
 830              		.loc 1 2273 0
 831 0010 054B     		ldr	r3, .L41+4
 832 0012 054A     		ldr	r2, .L41+4
 833 0014 1268     		ldr	r2, [r2]
 834 0016 0121     		movs	r1, #1
 835 0018 8A43     		bics	r2, r1
 836 001a 1A60     		str	r2, [r3]
2274:Generated_Source\PSoC4/CyLib.c ****     }
 837              		.loc 1 2274 0
 838 001c C046     		nop
 839 001e BD46     		mov	sp, r7
 840              		@ sp needed
 841 0020 80BD     		pop	{r7, pc}
 842              	.L42:
 843 0022 C046     		.align	2
 844              	.L41:
 845 0024 08000B40 		.word	1074462728
 846 0028 18000B40 		.word	1074462744
 847              		.cfi_endproc
 848              	.LFE8:
 849              		.size	CySysLvdDisable, .-CySysLvdDisable
 850              		.section	.text.CySysLvdGetInterruptSource,"ax",%progbits
 851              		.align	2
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccaiT5A1.s 			page 56


 852              		.global	CySysLvdGetInterruptSource
 853              		.code	16
 854              		.thumb_func
 855              		.type	CySysLvdGetInterruptSource, %function
 856              	CySysLvdGetInterruptSource:
 857              	.LFB9:
2275:Generated_Source\PSoC4/CyLib.c **** 
2276:Generated_Source\PSoC4/CyLib.c **** 
2277:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2278:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdGetInterruptSource
2279:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2280:Generated_Source\PSoC4/CyLib.c ****     *
2281:Generated_Source\PSoC4/CyLib.c ****     *  Gets the low voltage detection interrupt status (without clearing).
2282:Generated_Source\PSoC4/CyLib.c ****     *
2283:Generated_Source\PSoC4/CyLib.c ****     * \return
2284:Generated_Source\PSoC4/CyLib.c ****     *  Interrupt request value:
2285:Generated_Source\PSoC4/CyLib.c ****     *    CY_SYS_LVD_INT - Indicates an Low Voltage Detect interrupt
2286:Generated_Source\PSoC4/CyLib.c ****     *
2287:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2288:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysLvdGetInterruptSource(void)
2289:Generated_Source\PSoC4/CyLib.c ****     {
 858              		.loc 1 2289 0
 859              		.cfi_startproc
 860              		@ args = 0, pretend = 0, frame = 0
 861              		@ frame_needed = 1, uses_anonymous_args = 0
 862 0000 80B5     		push	{r7, lr}
 863              		.cfi_def_cfa_offset 8
 864              		.cfi_offset 7, -8
 865              		.cfi_offset 14, -4
 866 0002 00AF     		add	r7, sp, #0
 867              		.cfi_def_cfa_register 7
2290:Generated_Source\PSoC4/CyLib.c ****         return (CY_LVD_PWR_INTR_REG & CY_SYS_LVD_INT);
 868              		.loc 1 2290 0
 869 0004 034B     		ldr	r3, .L45
 870 0006 1B68     		ldr	r3, [r3]
 871 0008 0222     		movs	r2, #2
 872 000a 1340     		ands	r3, r2
2291:Generated_Source\PSoC4/CyLib.c ****     }
 873              		.loc 1 2291 0
 874 000c 1800     		movs	r0, r3
 875 000e BD46     		mov	sp, r7
 876              		@ sp needed
 877 0010 80BD     		pop	{r7, pc}
 878              	.L46:
 879 0012 C046     		.align	2
 880              	.L45:
 881 0014 04000B40 		.word	1074462724
 882              		.cfi_endproc
 883              	.LFE9:
 884              		.size	CySysLvdGetInterruptSource, .-CySysLvdGetInterruptSource
 885              		.section	.text.CySysLvdClearInterrupt,"ax",%progbits
 886              		.align	2
 887              		.global	CySysLvdClearInterrupt
 888              		.code	16
 889              		.thumb_func
 890              		.type	CySysLvdClearInterrupt, %function
 891              	CySysLvdClearInterrupt:
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccaiT5A1.s 			page 57


 892              	.LFB10:
2292:Generated_Source\PSoC4/CyLib.c **** 
2293:Generated_Source\PSoC4/CyLib.c **** 
2294:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2295:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdClearInterrupt
2296:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2297:Generated_Source\PSoC4/CyLib.c ****     *
2298:Generated_Source\PSoC4/CyLib.c ****     *  Clears the low voltage detection interrupt status.
2299:Generated_Source\PSoC4/CyLib.c ****     *
2300:Generated_Source\PSoC4/CyLib.c ****     * \return
2301:Generated_Source\PSoC4/CyLib.c ****     *  None
2302:Generated_Source\PSoC4/CyLib.c ****     *
2303:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2304:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdClearInterrupt(void)
2305:Generated_Source\PSoC4/CyLib.c ****     {
 893              		.loc 1 2305 0
 894              		.cfi_startproc
 895              		@ args = 0, pretend = 0, frame = 0
 896              		@ frame_needed = 1, uses_anonymous_args = 0
 897 0000 80B5     		push	{r7, lr}
 898              		.cfi_def_cfa_offset 8
 899              		.cfi_offset 7, -8
 900              		.cfi_offset 14, -4
 901 0002 00AF     		add	r7, sp, #0
 902              		.cfi_def_cfa_register 7
2306:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_REG = CY_SYS_LVD_INT;
 903              		.loc 1 2306 0
 904 0004 024B     		ldr	r3, .L48
 905 0006 0222     		movs	r2, #2
 906 0008 1A60     		str	r2, [r3]
2307:Generated_Source\PSoC4/CyLib.c ****     }
 907              		.loc 1 2307 0
 908 000a C046     		nop
 909 000c BD46     		mov	sp, r7
 910              		@ sp needed
 911 000e 80BD     		pop	{r7, pc}
 912              	.L49:
 913              		.align	2
 914              	.L48:
 915 0010 04000B40 		.word	1074462724
 916              		.cfi_endproc
 917              	.LFE10:
 918              		.size	CySysLvdClearInterrupt, .-CySysLvdClearInterrupt
 919              		.section	.text.CySysGetResetReason,"ax",%progbits
 920              		.align	2
 921              		.global	CySysGetResetReason
 922              		.code	16
 923              		.thumb_func
 924              		.type	CySysGetResetReason, %function
 925              	CySysGetResetReason:
 926              	.LFB11:
2308:Generated_Source\PSoC4/CyLib.c **** 
2309:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
2310:Generated_Source\PSoC4/CyLib.c **** 
2311:Generated_Source\PSoC4/CyLib.c **** 
2312:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2313:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysGetResetReason
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccaiT5A1.s 			page 58


2314:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2315:Generated_Source\PSoC4/CyLib.c **** *
2316:Generated_Source\PSoC4/CyLib.c **** *  Reports the cause for the latest reset(s) that occurred in the system. All
2317:Generated_Source\PSoC4/CyLib.c **** *  the bits in the RES_CAUSE register assert when the corresponding reset cause
2318:Generated_Source\PSoC4/CyLib.c **** *  occurs and must be cleared by the firmware. These bits are cleared by the
2319:Generated_Source\PSoC4/CyLib.c **** *  hardware only during XRES, POR, or a detected brown-out.
2320:Generated_Source\PSoC4/CyLib.c **** *
2321:Generated_Source\PSoC4/CyLib.c **** *  \param reason: bits in the RES_CAUSE register to clear.
2322:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_WDT       - WDT caused a reset
2323:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_PROTFAULT - Occured protection violation that requires reset
2324:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_SW        - Cortex-M0 requested a system reset.
2325:Generated_Source\PSoC4/CyLib.c **** *
2326:Generated_Source\PSoC4/CyLib.c **** * \return
2327:Generated_Source\PSoC4/CyLib.c **** *  Status. Same enumerated bit values as used for the reason parameter.
2328:Generated_Source\PSoC4/CyLib.c **** *
2329:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2330:Generated_Source\PSoC4/CyLib.c **** uint32 CySysGetResetReason(uint32 reason)
2331:Generated_Source\PSoC4/CyLib.c **** {
 927              		.loc 1 2331 0
 928              		.cfi_startproc
 929              		@ args = 0, pretend = 0, frame = 16
 930              		@ frame_needed = 1, uses_anonymous_args = 0
 931 0000 80B5     		push	{r7, lr}
 932              		.cfi_def_cfa_offset 8
 933              		.cfi_offset 7, -8
 934              		.cfi_offset 14, -4
 935 0002 84B0     		sub	sp, sp, #16
 936              		.cfi_def_cfa_offset 24
 937 0004 00AF     		add	r7, sp, #0
 938              		.cfi_def_cfa_register 7
 939 0006 7860     		str	r0, [r7, #4]
2332:Generated_Source\PSoC4/CyLib.c ****     uint32 returnStatus;
2333:Generated_Source\PSoC4/CyLib.c **** 
2334:Generated_Source\PSoC4/CyLib.c ****     reason &= (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
 940              		.loc 1 2334 0
 941 0008 7B68     		ldr	r3, [r7, #4]
 942 000a 1922     		movs	r2, #25
 943 000c 1340     		ands	r3, r2
 944 000e 7B60     		str	r3, [r7, #4]
2335:Generated_Source\PSoC4/CyLib.c ****     returnStatus = CY_SYS_RES_CAUSE_REG &
 945              		.loc 1 2335 0
 946 0010 064B     		ldr	r3, .L52
 947 0012 1B68     		ldr	r3, [r3]
 948 0014 1922     		movs	r2, #25
 949 0016 1340     		ands	r3, r2
 950 0018 FB60     		str	r3, [r7, #12]
2336:Generated_Source\PSoC4/CyLib.c ****                   (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
2337:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_RES_CAUSE_REG = reason;
 951              		.loc 1 2337 0
 952 001a 044B     		ldr	r3, .L52
 953 001c 7A68     		ldr	r2, [r7, #4]
 954 001e 1A60     		str	r2, [r3]
2338:Generated_Source\PSoC4/CyLib.c **** 
2339:Generated_Source\PSoC4/CyLib.c ****     return (returnStatus);
 955              		.loc 1 2339 0
 956 0020 FB68     		ldr	r3, [r7, #12]
2340:Generated_Source\PSoC4/CyLib.c **** }
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccaiT5A1.s 			page 59


 957              		.loc 1 2340 0
 958 0022 1800     		movs	r0, r3
 959 0024 BD46     		mov	sp, r7
 960 0026 04B0     		add	sp, sp, #16
 961              		@ sp needed
 962 0028 80BD     		pop	{r7, pc}
 963              	.L53:
 964 002a C046     		.align	2
 965              	.L52:
 966 002c 00030B40 		.word	1074463488
 967              		.cfi_endproc
 968              	.LFE11:
 969              		.size	CySysGetResetReason, .-CySysGetResetReason
 970              		.section	.text.CyDisableInts,"ax",%progbits
 971              		.align	2
 972              		.global	CyDisableInts
 973              		.code	16
 974              		.thumb_func
 975              		.type	CyDisableInts, %function
 976              	CyDisableInts:
 977              	.LFB12:
2341:Generated_Source\PSoC4/CyLib.c **** 
2342:Generated_Source\PSoC4/CyLib.c **** 
2343:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2344:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDisableInts
2345:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2346:Generated_Source\PSoC4/CyLib.c **** *
2347:Generated_Source\PSoC4/CyLib.c **** *  Disables all interrupts.
2348:Generated_Source\PSoC4/CyLib.c **** *
2349:Generated_Source\PSoC4/CyLib.c **** * \return
2350:Generated_Source\PSoC4/CyLib.c **** *  32 bit mask of previously enabled interrupts.
2351:Generated_Source\PSoC4/CyLib.c **** *
2352:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2353:Generated_Source\PSoC4/CyLib.c **** uint32 CyDisableInts(void)
2354:Generated_Source\PSoC4/CyLib.c **** {
 978              		.loc 1 2354 0
 979              		.cfi_startproc
 980              		@ args = 0, pretend = 0, frame = 8
 981              		@ frame_needed = 1, uses_anonymous_args = 0
 982 0000 80B5     		push	{r7, lr}
 983              		.cfi_def_cfa_offset 8
 984              		.cfi_offset 7, -8
 985              		.cfi_offset 14, -4
 986 0002 82B0     		sub	sp, sp, #8
 987              		.cfi_def_cfa_offset 16
 988 0004 00AF     		add	r7, sp, #0
 989              		.cfi_def_cfa_register 7
2355:Generated_Source\PSoC4/CyLib.c ****     uint32 intState;
2356:Generated_Source\PSoC4/CyLib.c **** 
2357:Generated_Source\PSoC4/CyLib.c ****     /* Get current interrupt state. */
2358:Generated_Source\PSoC4/CyLib.c ****     intState = CY_INT_CLEAR_REG;
 990              		.loc 1 2358 0
 991 0006 064B     		ldr	r3, .L56
 992 0008 1B68     		ldr	r3, [r3]
 993 000a 7B60     		str	r3, [r7, #4]
2359:Generated_Source\PSoC4/CyLib.c **** 
2360:Generated_Source\PSoC4/CyLib.c ****     /* Disable all interrupts. */
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccaiT5A1.s 			page 60


2361:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = CY_INT_CLEAR_DISABLE_ALL;
 994              		.loc 1 2361 0
 995 000c 044B     		ldr	r3, .L56
 996 000e 0122     		movs	r2, #1
 997 0010 5242     		rsbs	r2, r2, #0
 998 0012 1A60     		str	r2, [r3]
2362:Generated_Source\PSoC4/CyLib.c **** 
2363:Generated_Source\PSoC4/CyLib.c ****     return (intState);
 999              		.loc 1 2363 0
 1000 0014 7B68     		ldr	r3, [r7, #4]
2364:Generated_Source\PSoC4/CyLib.c **** }
 1001              		.loc 1 2364 0
 1002 0016 1800     		movs	r0, r3
 1003 0018 BD46     		mov	sp, r7
 1004 001a 02B0     		add	sp, sp, #8
 1005              		@ sp needed
 1006 001c 80BD     		pop	{r7, pc}
 1007              	.L57:
 1008 001e C046     		.align	2
 1009              	.L56:
 1010 0020 80E100E0 		.word	-536813184
 1011              		.cfi_endproc
 1012              	.LFE12:
 1013              		.size	CyDisableInts, .-CyDisableInts
 1014              		.section	.text.CyEnableInts,"ax",%progbits
 1015              		.align	2
 1016              		.global	CyEnableInts
 1017              		.code	16
 1018              		.thumb_func
 1019              		.type	CyEnableInts, %function
 1020              	CyEnableInts:
 1021              	.LFB13:
2365:Generated_Source\PSoC4/CyLib.c **** 
2366:Generated_Source\PSoC4/CyLib.c **** 
2367:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2368:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyEnableInts
2369:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2370:Generated_Source\PSoC4/CyLib.c **** *
2371:Generated_Source\PSoC4/CyLib.c **** *  Enables interrupts to a given state.
2372:Generated_Source\PSoC4/CyLib.c **** *
2373:Generated_Source\PSoC4/CyLib.c **** *  \param mask The 32 bit mask of interrupts to enable.
2374:Generated_Source\PSoC4/CyLib.c **** *
2375:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2376:Generated_Source\PSoC4/CyLib.c **** void CyEnableInts(uint32 mask)
2377:Generated_Source\PSoC4/CyLib.c **** {
 1022              		.loc 1 2377 0
 1023              		.cfi_startproc
 1024              		@ args = 0, pretend = 0, frame = 8
 1025              		@ frame_needed = 1, uses_anonymous_args = 0
 1026 0000 80B5     		push	{r7, lr}
 1027              		.cfi_def_cfa_offset 8
 1028              		.cfi_offset 7, -8
 1029              		.cfi_offset 14, -4
 1030 0002 82B0     		sub	sp, sp, #8
 1031              		.cfi_def_cfa_offset 16
 1032 0004 00AF     		add	r7, sp, #0
 1033              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccaiT5A1.s 			page 61


 1034 0006 7860     		str	r0, [r7, #4]
2378:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = mask;
 1035              		.loc 1 2378 0
 1036 0008 034B     		ldr	r3, .L59
 1037 000a 7A68     		ldr	r2, [r7, #4]
 1038 000c 1A60     		str	r2, [r3]
2379:Generated_Source\PSoC4/CyLib.c **** }
 1039              		.loc 1 2379 0
 1040 000e C046     		nop
 1041 0010 BD46     		mov	sp, r7
 1042 0012 02B0     		add	sp, sp, #8
 1043              		@ sp needed
 1044 0014 80BD     		pop	{r7, pc}
 1045              	.L60:
 1046 0016 C046     		.align	2
 1047              	.L59:
 1048 0018 00E100E0 		.word	-536813312
 1049              		.cfi_endproc
 1050              	.LFE13:
 1051              		.size	CyEnableInts, .-CyEnableInts
 1052              		.section	.text.CyIntSetSysVector,"ax",%progbits
 1053              		.align	2
 1054              		.global	CyIntSetSysVector
 1055              		.code	16
 1056              		.thumb_func
 1057              		.type	CyIntSetSysVector, %function
 1058              	CyIntSetSysVector:
 1059              	.LFB14:
2380:Generated_Source\PSoC4/CyLib.c **** 
2381:Generated_Source\PSoC4/CyLib.c **** 
2382:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2383:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetSysVector
2384:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2385:Generated_Source\PSoC4/CyLib.c **** *
2386:Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified system interrupt number. These
2387:Generated_Source\PSoC4/CyLib.c **** *  interrupts are for SysTick, PendSV and others.
2388:Generated_Source\PSoC4/CyLib.c **** *
2389:Generated_Source\PSoC4/CyLib.c **** *  \param number: System interrupt number:
2390:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
2391:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
2392:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
2393:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
2394:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
2395:Generated_Source\PSoC4/CyLib.c **** *
2396:Generated_Source\PSoC4/CyLib.c **** *  \param address Pointer to an interrupt service routine.
2397:Generated_Source\PSoC4/CyLib.c **** *
2398:Generated_Source\PSoC4/CyLib.c **** * \return The old ISR vector at this location.
2399:Generated_Source\PSoC4/CyLib.c **** *
2400:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2401:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetSysVector(uint8 number, cyisraddress address)
2402:Generated_Source\PSoC4/CyLib.c **** {
 1060              		.loc 1 2402 0
 1061              		.cfi_startproc
 1062              		@ args = 0, pretend = 0, frame = 16
 1063              		@ frame_needed = 1, uses_anonymous_args = 0
 1064 0000 80B5     		push	{r7, lr}
 1065              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccaiT5A1.s 			page 62


 1066              		.cfi_offset 7, -8
 1067              		.cfi_offset 14, -4
 1068 0002 84B0     		sub	sp, sp, #16
 1069              		.cfi_def_cfa_offset 24
 1070 0004 00AF     		add	r7, sp, #0
 1071              		.cfi_def_cfa_register 7
 1072 0006 0200     		movs	r2, r0
 1073 0008 3960     		str	r1, [r7]
 1074 000a FB1D     		adds	r3, r7, #7
 1075 000c 1A70     		strb	r2, [r3]
2403:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
2404:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 1076              		.loc 1 2404 0
 1077 000e 8023     		movs	r3, #128
 1078 0010 9B05     		lsls	r3, r3, #22
 1079 0012 FB60     		str	r3, [r7, #12]
2405:Generated_Source\PSoC4/CyLib.c **** 
2406:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
 1080              		.loc 1 2406 0
 1081 0014 FB1D     		adds	r3, r7, #7
 1082 0016 1B78     		ldrb	r3, [r3]
 1083 0018 0F2B     		cmp	r3, #15
 1084 001a 02D9     		bls	.L62
 1085              		.loc 1 2406 0 is_stmt 0 discriminator 1
 1086 001c 0020     		movs	r0, #0
 1087 001e FFF7FEFF 		bl	CyHalt
 1088              	.L62:
2407:Generated_Source\PSoC4/CyLib.c **** 
2408:Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
2409:Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[number];
 1089              		.loc 1 2409 0 is_stmt 1
 1090 0022 FB1D     		adds	r3, r7, #7
 1091 0024 1B78     		ldrb	r3, [r3]
 1092 0026 9B00     		lsls	r3, r3, #2
 1093 0028 FA68     		ldr	r2, [r7, #12]
 1094 002a D318     		adds	r3, r2, r3
 1095 002c 1B68     		ldr	r3, [r3]
 1096 002e BB60     		str	r3, [r7, #8]
2410:Generated_Source\PSoC4/CyLib.c **** 
2411:Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
2412:Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[number] = address;
 1097              		.loc 1 2412 0
 1098 0030 FB1D     		adds	r3, r7, #7
 1099 0032 1B78     		ldrb	r3, [r3]
 1100 0034 9B00     		lsls	r3, r3, #2
 1101 0036 FA68     		ldr	r2, [r7, #12]
 1102 0038 D318     		adds	r3, r2, r3
 1103 003a 3A68     		ldr	r2, [r7]
 1104 003c 1A60     		str	r2, [r3]
2413:Generated_Source\PSoC4/CyLib.c **** 
2414:Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
 1105              		.loc 1 2414 0
 1106 003e BB68     		ldr	r3, [r7, #8]
2415:Generated_Source\PSoC4/CyLib.c **** }
 1107              		.loc 1 2415 0
 1108 0040 1800     		movs	r0, r3
 1109 0042 BD46     		mov	sp, r7
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccaiT5A1.s 			page 63


 1110 0044 04B0     		add	sp, sp, #16
 1111              		@ sp needed
 1112 0046 80BD     		pop	{r7, pc}
 1113              		.cfi_endproc
 1114              	.LFE14:
 1115              		.size	CyIntSetSysVector, .-CyIntSetSysVector
 1116              		.section	.text.CyIntGetSysVector,"ax",%progbits
 1117              		.align	2
 1118              		.global	CyIntGetSysVector
 1119              		.code	16
 1120              		.thumb_func
 1121              		.type	CyIntGetSysVector, %function
 1122              	CyIntGetSysVector:
 1123              	.LFB15:
2416:Generated_Source\PSoC4/CyLib.c **** 
2417:Generated_Source\PSoC4/CyLib.c **** 
2418:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2419:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetSysVector
2420:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2421:Generated_Source\PSoC4/CyLib.c **** *
2422:Generated_Source\PSoC4/CyLib.c **** *   Gets the interrupt vector of the specified system interrupt number. These
2423:Generated_Source\PSoC4/CyLib.c **** *   interrupts are for SysTick, PendSV and others.
2424:Generated_Source\PSoC4/CyLib.c **** *
2425:Generated_Source\PSoC4/CyLib.c **** *  \param number: System interrupt number:
2426:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
2427:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
2428:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
2429:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
2430:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
2431:Generated_Source\PSoC4/CyLib.c **** *
2432:Generated_Source\PSoC4/CyLib.c **** * \return Address of the ISR in the interrupt vector table.
2433:Generated_Source\PSoC4/CyLib.c **** *
2434:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2435:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetSysVector(uint8 number)
2436:Generated_Source\PSoC4/CyLib.c **** {
 1124              		.loc 1 2436 0
 1125              		.cfi_startproc
 1126              		@ args = 0, pretend = 0, frame = 16
 1127              		@ frame_needed = 1, uses_anonymous_args = 0
 1128 0000 80B5     		push	{r7, lr}
 1129              		.cfi_def_cfa_offset 8
 1130              		.cfi_offset 7, -8
 1131              		.cfi_offset 14, -4
 1132 0002 84B0     		sub	sp, sp, #16
 1133              		.cfi_def_cfa_offset 24
 1134 0004 00AF     		add	r7, sp, #0
 1135              		.cfi_def_cfa_register 7
 1136 0006 0200     		movs	r2, r0
 1137 0008 FB1D     		adds	r3, r7, #7
 1138 000a 1A70     		strb	r2, [r3]
2437:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 1139              		.loc 1 2437 0
 1140 000c 8023     		movs	r3, #128
 1141 000e 9B05     		lsls	r3, r3, #22
 1142 0010 FB60     		str	r3, [r7, #12]
2438:Generated_Source\PSoC4/CyLib.c **** 
2439:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccaiT5A1.s 			page 64


 1143              		.loc 1 2439 0
 1144 0012 FB1D     		adds	r3, r7, #7
 1145 0014 1B78     		ldrb	r3, [r3]
 1146 0016 0F2B     		cmp	r3, #15
 1147 0018 02D9     		bls	.L65
 1148              		.loc 1 2439 0 is_stmt 0 discriminator 1
 1149 001a 0020     		movs	r0, #0
 1150 001c FFF7FEFF 		bl	CyHalt
 1151              	.L65:
2440:Generated_Source\PSoC4/CyLib.c **** 
2441:Generated_Source\PSoC4/CyLib.c ****     return(ramVectorTable[number]);
 1152              		.loc 1 2441 0 is_stmt 1
 1153 0020 FB1D     		adds	r3, r7, #7
 1154 0022 1B78     		ldrb	r3, [r3]
 1155 0024 9B00     		lsls	r3, r3, #2
 1156 0026 FA68     		ldr	r2, [r7, #12]
 1157 0028 D318     		adds	r3, r2, r3
 1158 002a 1B68     		ldr	r3, [r3]
2442:Generated_Source\PSoC4/CyLib.c **** }
 1159              		.loc 1 2442 0
 1160 002c 1800     		movs	r0, r3
 1161 002e BD46     		mov	sp, r7
 1162 0030 04B0     		add	sp, sp, #16
 1163              		@ sp needed
 1164 0032 80BD     		pop	{r7, pc}
 1165              		.cfi_endproc
 1166              	.LFE15:
 1167              		.size	CyIntGetSysVector, .-CyIntGetSysVector
 1168              		.section	.text.CyIntSetVector,"ax",%progbits
 1169              		.align	2
 1170              		.global	CyIntSetVector
 1171              		.code	16
 1172              		.thumb_func
 1173              		.type	CyIntSetVector, %function
 1174              	CyIntSetVector:
 1175              	.LFB16:
2443:Generated_Source\PSoC4/CyLib.c **** 
2444:Generated_Source\PSoC4/CyLib.c **** 
2445:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2446:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetVector
2447:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2448:Generated_Source\PSoC4/CyLib.c **** *
2449:Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified interrupt number.
2450:Generated_Source\PSoC4/CyLib.c **** *
2451:Generated_Source\PSoC4/CyLib.c **** *  \param number Valid range [0-31].  Interrupt number
2452:Generated_Source\PSoC4/CyLib.c **** *  \param address Pointer to an interrupt service routine
2453:Generated_Source\PSoC4/CyLib.c **** *
2454:Generated_Source\PSoC4/CyLib.c **** * \return Previous interrupt vector value.
2455:Generated_Source\PSoC4/CyLib.c **** *
2456:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2457:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetVector(uint8 number, cyisraddress address)
2458:Generated_Source\PSoC4/CyLib.c **** {
 1176              		.loc 1 2458 0
 1177              		.cfi_startproc
 1178              		@ args = 0, pretend = 0, frame = 16
 1179              		@ frame_needed = 1, uses_anonymous_args = 0
 1180 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccaiT5A1.s 			page 65


 1181              		.cfi_def_cfa_offset 8
 1182              		.cfi_offset 7, -8
 1183              		.cfi_offset 14, -4
 1184 0002 84B0     		sub	sp, sp, #16
 1185              		.cfi_def_cfa_offset 24
 1186 0004 00AF     		add	r7, sp, #0
 1187              		.cfi_def_cfa_register 7
 1188 0006 0200     		movs	r2, r0
 1189 0008 3960     		str	r1, [r7]
 1190 000a FB1D     		adds	r3, r7, #7
 1191 000c 1A70     		strb	r2, [r3]
2459:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
2460:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 1192              		.loc 1 2460 0
 1193 000e 8023     		movs	r3, #128
 1194 0010 9B05     		lsls	r3, r3, #22
 1195 0012 FB60     		str	r3, [r7, #12]
2461:Generated_Source\PSoC4/CyLib.c **** 
2462:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 1196              		.loc 1 2462 0
 1197 0014 FB1D     		adds	r3, r7, #7
 1198 0016 1B78     		ldrb	r3, [r3]
 1199 0018 1F2B     		cmp	r3, #31
 1200 001a 02D9     		bls	.L68
 1201              		.loc 1 2462 0 is_stmt 0 discriminator 1
 1202 001c 0020     		movs	r0, #0
 1203 001e FFF7FEFF 		bl	CyHalt
 1204              	.L68:
2463:Generated_Source\PSoC4/CyLib.c **** 
2464:Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
2465:Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[CY_INT_IRQ_BASE + number];
 1205              		.loc 1 2465 0 is_stmt 1
 1206 0022 FB1D     		adds	r3, r7, #7
 1207 0024 1B78     		ldrb	r3, [r3]
 1208 0026 1033     		adds	r3, r3, #16
 1209 0028 9B00     		lsls	r3, r3, #2
 1210 002a FA68     		ldr	r2, [r7, #12]
 1211 002c D318     		adds	r3, r2, r3
 1212 002e 1B68     		ldr	r3, [r3]
 1213 0030 BB60     		str	r3, [r7, #8]
2466:Generated_Source\PSoC4/CyLib.c **** 
2467:Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
2468:Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[CY_INT_IRQ_BASE + number] = address;
 1214              		.loc 1 2468 0
 1215 0032 FB1D     		adds	r3, r7, #7
 1216 0034 1B78     		ldrb	r3, [r3]
 1217 0036 1033     		adds	r3, r3, #16
 1218 0038 9B00     		lsls	r3, r3, #2
 1219 003a FA68     		ldr	r2, [r7, #12]
 1220 003c D318     		adds	r3, r2, r3
 1221 003e 3A68     		ldr	r2, [r7]
 1222 0040 1A60     		str	r2, [r3]
2469:Generated_Source\PSoC4/CyLib.c **** 
2470:Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
 1223              		.loc 1 2470 0
 1224 0042 BB68     		ldr	r3, [r7, #8]
2471:Generated_Source\PSoC4/CyLib.c **** }
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccaiT5A1.s 			page 66


 1225              		.loc 1 2471 0
 1226 0044 1800     		movs	r0, r3
 1227 0046 BD46     		mov	sp, r7
 1228 0048 04B0     		add	sp, sp, #16
 1229              		@ sp needed
 1230 004a 80BD     		pop	{r7, pc}
 1231              		.cfi_endproc
 1232              	.LFE16:
 1233              		.size	CyIntSetVector, .-CyIntSetVector
 1234              		.section	.text.CyIntGetVector,"ax",%progbits
 1235              		.align	2
 1236              		.global	CyIntGetVector
 1237              		.code	16
 1238              		.thumb_func
 1239              		.type	CyIntGetVector, %function
 1240              	CyIntGetVector:
 1241              	.LFB17:
2472:Generated_Source\PSoC4/CyLib.c **** 
2473:Generated_Source\PSoC4/CyLib.c **** 
2474:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2475:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetVector
2476:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2477:Generated_Source\PSoC4/CyLib.c **** *
2478:Generated_Source\PSoC4/CyLib.c **** *  Gets the interrupt vector of the specified interrupt number.
2479:Generated_Source\PSoC4/CyLib.c **** *
2480:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number
2481:Generated_Source\PSoC4/CyLib.c **** *
2482:Generated_Source\PSoC4/CyLib.c **** * \return Address of the ISR in the interrupt vector table.
2483:Generated_Source\PSoC4/CyLib.c **** *
2484:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2485:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetVector(uint8 number)
2486:Generated_Source\PSoC4/CyLib.c **** {
 1242              		.loc 1 2486 0
 1243              		.cfi_startproc
 1244              		@ args = 0, pretend = 0, frame = 16
 1245              		@ frame_needed = 1, uses_anonymous_args = 0
 1246 0000 80B5     		push	{r7, lr}
 1247              		.cfi_def_cfa_offset 8
 1248              		.cfi_offset 7, -8
 1249              		.cfi_offset 14, -4
 1250 0002 84B0     		sub	sp, sp, #16
 1251              		.cfi_def_cfa_offset 24
 1252 0004 00AF     		add	r7, sp, #0
 1253              		.cfi_def_cfa_register 7
 1254 0006 0200     		movs	r2, r0
 1255 0008 FB1D     		adds	r3, r7, #7
 1256 000a 1A70     		strb	r2, [r3]
2487:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 1257              		.loc 1 2487 0
 1258 000c 8023     		movs	r3, #128
 1259 000e 9B05     		lsls	r3, r3, #22
 1260 0010 FB60     		str	r3, [r7, #12]
2488:Generated_Source\PSoC4/CyLib.c **** 
2489:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 1261              		.loc 1 2489 0
 1262 0012 FB1D     		adds	r3, r7, #7
 1263 0014 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccaiT5A1.s 			page 67


 1264 0016 1F2B     		cmp	r3, #31
 1265 0018 02D9     		bls	.L71
 1266              		.loc 1 2489 0 is_stmt 0 discriminator 1
 1267 001a 0020     		movs	r0, #0
 1268 001c FFF7FEFF 		bl	CyHalt
 1269              	.L71:
2490:Generated_Source\PSoC4/CyLib.c **** 
2491:Generated_Source\PSoC4/CyLib.c ****     return (ramVectorTable[CY_INT_IRQ_BASE + number]);
 1270              		.loc 1 2491 0 is_stmt 1
 1271 0020 FB1D     		adds	r3, r7, #7
 1272 0022 1B78     		ldrb	r3, [r3]
 1273 0024 1033     		adds	r3, r3, #16
 1274 0026 9B00     		lsls	r3, r3, #2
 1275 0028 FA68     		ldr	r2, [r7, #12]
 1276 002a D318     		adds	r3, r2, r3
 1277 002c 1B68     		ldr	r3, [r3]
2492:Generated_Source\PSoC4/CyLib.c **** }
 1278              		.loc 1 2492 0
 1279 002e 1800     		movs	r0, r3
 1280 0030 BD46     		mov	sp, r7
 1281 0032 04B0     		add	sp, sp, #16
 1282              		@ sp needed
 1283 0034 80BD     		pop	{r7, pc}
 1284              		.cfi_endproc
 1285              	.LFE17:
 1286              		.size	CyIntGetVector, .-CyIntGetVector
 1287 0036 C046     		.section	.text.CyIntSetPriority,"ax",%progbits
 1288              		.align	2
 1289              		.global	CyIntSetPriority
 1290              		.code	16
 1291              		.thumb_func
 1292              		.type	CyIntSetPriority, %function
 1293              	CyIntSetPriority:
 1294              	.LFB18:
2493:Generated_Source\PSoC4/CyLib.c **** 
2494:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2495:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPriority
2496:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2497:Generated_Source\PSoC4/CyLib.c **** *
2498:Generated_Source\PSoC4/CyLib.c **** *  Sets the priority of the interrupt.
2499:Generated_Source\PSoC4/CyLib.c **** *
2500:Generated_Source\PSoC4/CyLib.c **** *  \param priority: Priority of the interrupt. 0 - 3, 0 being the highest.
2501:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the interrupt, 0 - 31.
2502:Generated_Source\PSoC4/CyLib.c **** *
2503:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2504:Generated_Source\PSoC4/CyLib.c **** void CyIntSetPriority(uint8 number, uint8 priority)
2505:Generated_Source\PSoC4/CyLib.c **** {
 1295              		.loc 1 2505 0
 1296              		.cfi_startproc
 1297              		@ args = 0, pretend = 0, frame = 24
 1298              		@ frame_needed = 1, uses_anonymous_args = 0
 1299 0000 90B5     		push	{r4, r7, lr}
 1300              		.cfi_def_cfa_offset 12
 1301              		.cfi_offset 4, -12
 1302              		.cfi_offset 7, -8
 1303              		.cfi_offset 14, -4
 1304 0002 87B0     		sub	sp, sp, #28
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccaiT5A1.s 			page 68


 1305              		.cfi_def_cfa_offset 40
 1306 0004 00AF     		add	r7, sp, #0
 1307              		.cfi_def_cfa_register 7
 1308 0006 0200     		movs	r2, r0
 1309 0008 FB1D     		adds	r3, r7, #7
 1310 000a 1A70     		strb	r2, [r3]
 1311 000c BB1D     		adds	r3, r7, #6
 1312 000e 0A1C     		adds	r2, r1, #0
 1313 0010 1A70     		strb	r2, [r3]
2506:Generated_Source\PSoC4/CyLib.c ****     uint8 interruptState;
2507:Generated_Source\PSoC4/CyLib.c ****     uint32 shift;
2508:Generated_Source\PSoC4/CyLib.c ****     uint32 value;
2509:Generated_Source\PSoC4/CyLib.c **** 
2510:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(priority <= CY_MIN_PRIORITY);
 1314              		.loc 1 2510 0
 1315 0012 BB1D     		adds	r3, r7, #6
 1316 0014 1B78     		ldrb	r3, [r3]
 1317 0016 032B     		cmp	r3, #3
 1318 0018 02D9     		bls	.L74
 1319              		.loc 1 2510 0 is_stmt 0 discriminator 1
 1320 001a 0020     		movs	r0, #0
 1321 001c FFF7FEFF 		bl	CyHalt
 1322              	.L74:
2511:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 1323              		.loc 1 2511 0 is_stmt 1
 1324 0020 FB1D     		adds	r3, r7, #7
 1325 0022 1B78     		ldrb	r3, [r3]
 1326 0024 1F2B     		cmp	r3, #31
 1327 0026 02D9     		bls	.L75
 1328              		.loc 1 2511 0 is_stmt 0 discriminator 1
 1329 0028 0020     		movs	r0, #0
 1330 002a FFF7FEFF 		bl	CyHalt
 1331              	.L75:
2512:Generated_Source\PSoC4/CyLib.c **** 
2513:Generated_Source\PSoC4/CyLib.c ****     shift = CY_INT_PRIORITY_SHIFT(number);
 1332              		.loc 1 2513 0 is_stmt 1
 1333 002e FB1D     		adds	r3, r7, #7
 1334 0030 1B78     		ldrb	r3, [r3]
 1335 0032 0322     		movs	r2, #3
 1336 0034 1340     		ands	r3, r2
 1337 0036 DB00     		lsls	r3, r3, #3
 1338 0038 0633     		adds	r3, r3, #6
 1339 003a 7B61     		str	r3, [r7, #20]
2514:Generated_Source\PSoC4/CyLib.c **** 
2515:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 1340              		.loc 1 2515 0
 1341 003c 1323     		movs	r3, #19
 1342 003e FC18     		adds	r4, r7, r3
 1343 0040 FFF7FEFF 		bl	CyEnterCriticalSection
 1344 0044 0300     		movs	r3, r0
 1345 0046 2370     		strb	r3, [r4]
2516:Generated_Source\PSoC4/CyLib.c **** 
2517:Generated_Source\PSoC4/CyLib.c ****     value = CY_INT_PRIORITY_REG(number);
 1346              		.loc 1 2517 0
 1347 0048 FB1D     		adds	r3, r7, #7
 1348 004a 1B78     		ldrb	r3, [r3]
 1349 004c 9B08     		lsrs	r3, r3, #2
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccaiT5A1.s 			page 69


 1350 004e DBB2     		uxtb	r3, r3
 1351 0050 9B00     		lsls	r3, r3, #2
 1352 0052 144A     		ldr	r2, .L76
 1353 0054 9446     		mov	ip, r2
 1354 0056 6344     		add	r3, r3, ip
 1355 0058 1B68     		ldr	r3, [r3]
 1356 005a FB60     		str	r3, [r7, #12]
2518:Generated_Source\PSoC4/CyLib.c ****     value &= (uint32)(~((uint32)(CY_INT_PRIORITY_MASK << shift)));
 1357              		.loc 1 2518 0
 1358 005c 0322     		movs	r2, #3
 1359 005e 7B69     		ldr	r3, [r7, #20]
 1360 0060 9A40     		lsls	r2, r2, r3
 1361 0062 1300     		movs	r3, r2
 1362 0064 DA43     		mvns	r2, r3
 1363 0066 FB68     		ldr	r3, [r7, #12]
 1364 0068 1340     		ands	r3, r2
 1365 006a FB60     		str	r3, [r7, #12]
2519:Generated_Source\PSoC4/CyLib.c ****     value |= ((uint32)priority << shift);
 1366              		.loc 1 2519 0
 1367 006c BB1D     		adds	r3, r7, #6
 1368 006e 1A78     		ldrb	r2, [r3]
 1369 0070 7B69     		ldr	r3, [r7, #20]
 1370 0072 9A40     		lsls	r2, r2, r3
 1371 0074 1300     		movs	r3, r2
 1372 0076 FA68     		ldr	r2, [r7, #12]
 1373 0078 1343     		orrs	r3, r2
 1374 007a FB60     		str	r3, [r7, #12]
2520:Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
 1375              		.loc 1 2520 0
 1376 007c FB1D     		adds	r3, r7, #7
 1377 007e 1B78     		ldrb	r3, [r3]
 1378 0080 9B08     		lsrs	r3, r3, #2
 1379 0082 DBB2     		uxtb	r3, r3
 1380 0084 9B00     		lsls	r3, r3, #2
 1381 0086 074A     		ldr	r2, .L76
 1382 0088 9446     		mov	ip, r2
 1383 008a 6344     		add	r3, r3, ip
 1384 008c FA68     		ldr	r2, [r7, #12]
 1385 008e 1A60     		str	r2, [r3]
2521:Generated_Source\PSoC4/CyLib.c **** 
2522:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 1386              		.loc 1 2522 0
 1387 0090 1323     		movs	r3, #19
 1388 0092 FB18     		adds	r3, r7, r3
 1389 0094 1B78     		ldrb	r3, [r3]
 1390 0096 1800     		movs	r0, r3
 1391 0098 FFF7FEFF 		bl	CyExitCriticalSection
2523:Generated_Source\PSoC4/CyLib.c **** }
 1392              		.loc 1 2523 0
 1393 009c C046     		nop
 1394 009e BD46     		mov	sp, r7
 1395 00a0 07B0     		add	sp, sp, #28
 1396              		@ sp needed
 1397 00a2 90BD     		pop	{r4, r7, pc}
 1398              	.L77:
 1399              		.align	2
 1400              	.L76:
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccaiT5A1.s 			page 70


 1401 00a4 00E400E0 		.word	-536812544
 1402              		.cfi_endproc
 1403              	.LFE18:
 1404              		.size	CyIntSetPriority, .-CyIntSetPriority
 1405              		.section	.text.CyIntGetPriority,"ax",%progbits
 1406              		.align	2
 1407              		.global	CyIntGetPriority
 1408              		.code	16
 1409              		.thumb_func
 1410              		.type	CyIntGetPriority, %function
 1411              	CyIntGetPriority:
 1412              	.LFB19:
2524:Generated_Source\PSoC4/CyLib.c **** 
2525:Generated_Source\PSoC4/CyLib.c **** 
2526:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2527:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetPriority
2528:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2529:Generated_Source\PSoC4/CyLib.c **** *
2530:Generated_Source\PSoC4/CyLib.c **** *  Gets the priority of the interrupt.
2531:Generated_Source\PSoC4/CyLib.c **** *
2532:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the interrupt, 0 - 31.
2533:Generated_Source\PSoC4/CyLib.c **** *
2534:Generated_Source\PSoC4/CyLib.c **** * \return
2535:Generated_Source\PSoC4/CyLib.c **** *  Priority of the interrupt. 0 - 3, 0 being the highest.
2536:Generated_Source\PSoC4/CyLib.c **** *
2537:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2538:Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetPriority(uint8 number)
2539:Generated_Source\PSoC4/CyLib.c **** {
 1413              		.loc 1 2539 0
 1414              		.cfi_startproc
 1415              		@ args = 0, pretend = 0, frame = 16
 1416              		@ frame_needed = 1, uses_anonymous_args = 0
 1417 0000 80B5     		push	{r7, lr}
 1418              		.cfi_def_cfa_offset 8
 1419              		.cfi_offset 7, -8
 1420              		.cfi_offset 14, -4
 1421 0002 84B0     		sub	sp, sp, #16
 1422              		.cfi_def_cfa_offset 24
 1423 0004 00AF     		add	r7, sp, #0
 1424              		.cfi_def_cfa_register 7
 1425 0006 0200     		movs	r2, r0
 1426 0008 FB1D     		adds	r3, r7, #7
 1427 000a 1A70     		strb	r2, [r3]
2540:Generated_Source\PSoC4/CyLib.c ****     uint8 priority;
2541:Generated_Source\PSoC4/CyLib.c **** 
2542:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 1428              		.loc 1 2542 0
 1429 000c FB1D     		adds	r3, r7, #7
 1430 000e 1B78     		ldrb	r3, [r3]
 1431 0010 1F2B     		cmp	r3, #31
 1432 0012 02D9     		bls	.L79
 1433              		.loc 1 2542 0 is_stmt 0 discriminator 1
 1434 0014 0020     		movs	r0, #0
 1435 0016 FFF7FEFF 		bl	CyHalt
 1436              	.L79:
2543:Generated_Source\PSoC4/CyLib.c **** 
2544:Generated_Source\PSoC4/CyLib.c ****     priority = (uint8) (CY_INT_PRIORITY_REG(number) >> CY_INT_PRIORITY_SHIFT(number));
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccaiT5A1.s 			page 71


 1437              		.loc 1 2544 0 is_stmt 1
 1438 001a FB1D     		adds	r3, r7, #7
 1439 001c 1B78     		ldrb	r3, [r3]
 1440 001e 9B08     		lsrs	r3, r3, #2
 1441 0020 DBB2     		uxtb	r3, r3
 1442 0022 9B00     		lsls	r3, r3, #2
 1443 0024 0B4A     		ldr	r2, .L81
 1444 0026 9446     		mov	ip, r2
 1445 0028 6344     		add	r3, r3, ip
 1446 002a 1A68     		ldr	r2, [r3]
 1447 002c FB1D     		adds	r3, r7, #7
 1448 002e 1B78     		ldrb	r3, [r3]
 1449 0030 0321     		movs	r1, #3
 1450 0032 0B40     		ands	r3, r1
 1451 0034 DB00     		lsls	r3, r3, #3
 1452 0036 0633     		adds	r3, r3, #6
 1453 0038 DA40     		lsrs	r2, r2, r3
 1454 003a 0F23     		movs	r3, #15
 1455 003c FB18     		adds	r3, r7, r3
 1456 003e 1A70     		strb	r2, [r3]
2545:Generated_Source\PSoC4/CyLib.c **** 
2546:Generated_Source\PSoC4/CyLib.c ****     return (priority & (uint8) CY_INT_PRIORITY_MASK);
 1457              		.loc 1 2546 0
 1458 0040 0F23     		movs	r3, #15
 1459 0042 FB18     		adds	r3, r7, r3
 1460 0044 1B78     		ldrb	r3, [r3]
 1461 0046 0322     		movs	r2, #3
 1462 0048 1340     		ands	r3, r2
 1463 004a DBB2     		uxtb	r3, r3
2547:Generated_Source\PSoC4/CyLib.c **** }
 1464              		.loc 1 2547 0
 1465 004c 1800     		movs	r0, r3
 1466 004e BD46     		mov	sp, r7
 1467 0050 04B0     		add	sp, sp, #16
 1468              		@ sp needed
 1469 0052 80BD     		pop	{r7, pc}
 1470              	.L82:
 1471              		.align	2
 1472              	.L81:
 1473 0054 00E400E0 		.word	-536812544
 1474              		.cfi_endproc
 1475              	.LFE19:
 1476              		.size	CyIntGetPriority, .-CyIntGetPriority
 1477              		.section	.text.CyIntEnable,"ax",%progbits
 1478              		.align	2
 1479              		.global	CyIntEnable
 1480              		.code	16
 1481              		.thumb_func
 1482              		.type	CyIntEnable, %function
 1483              	CyIntEnable:
 1484              	.LFB20:
2548:Generated_Source\PSoC4/CyLib.c **** 
2549:Generated_Source\PSoC4/CyLib.c **** 
2550:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2551:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntEnable
2552:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2553:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccaiT5A1.s 			page 72


2554:Generated_Source\PSoC4/CyLib.c **** *  Enables the specified interrupt number.
2555:Generated_Source\PSoC4/CyLib.c **** *
2556:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number
2557:Generated_Source\PSoC4/CyLib.c **** *
2558:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2559:Generated_Source\PSoC4/CyLib.c **** void CyIntEnable(uint8 number)
2560:Generated_Source\PSoC4/CyLib.c **** {
 1485              		.loc 1 2560 0
 1486              		.cfi_startproc
 1487              		@ args = 0, pretend = 0, frame = 8
 1488              		@ frame_needed = 1, uses_anonymous_args = 0
 1489 0000 80B5     		push	{r7, lr}
 1490              		.cfi_def_cfa_offset 8
 1491              		.cfi_offset 7, -8
 1492              		.cfi_offset 14, -4
 1493 0002 82B0     		sub	sp, sp, #8
 1494              		.cfi_def_cfa_offset 16
 1495 0004 00AF     		add	r7, sp, #0
 1496              		.cfi_def_cfa_register 7
 1497 0006 0200     		movs	r2, r0
 1498 0008 FB1D     		adds	r3, r7, #7
 1499 000a 1A70     		strb	r2, [r3]
2561:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 1500              		.loc 1 2561 0
 1501 000c 064B     		ldr	r3, .L84
 1502 000e FA1D     		adds	r2, r7, #7
 1503 0010 1278     		ldrb	r2, [r2]
 1504 0012 1F21     		movs	r1, #31
 1505 0014 0A40     		ands	r2, r1
 1506 0016 0121     		movs	r1, #1
 1507 0018 9140     		lsls	r1, r1, r2
 1508 001a 0A00     		movs	r2, r1
 1509 001c 1A60     		str	r2, [r3]
2562:Generated_Source\PSoC4/CyLib.c **** }
 1510              		.loc 1 2562 0
 1511 001e C046     		nop
 1512 0020 BD46     		mov	sp, r7
 1513 0022 02B0     		add	sp, sp, #8
 1514              		@ sp needed
 1515 0024 80BD     		pop	{r7, pc}
 1516              	.L85:
 1517 0026 C046     		.align	2
 1518              	.L84:
 1519 0028 00E100E0 		.word	-536813312
 1520              		.cfi_endproc
 1521              	.LFE20:
 1522              		.size	CyIntEnable, .-CyIntEnable
 1523              		.section	.text.CyIntGetState,"ax",%progbits
 1524              		.align	2
 1525              		.global	CyIntGetState
 1526              		.code	16
 1527              		.thumb_func
 1528              		.type	CyIntGetState, %function
 1529              	CyIntGetState:
 1530              	.LFB21:
2563:Generated_Source\PSoC4/CyLib.c **** 
2564:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccaiT5A1.s 			page 73


2565:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2566:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetState
2567:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2568:Generated_Source\PSoC4/CyLib.c **** *
2569:Generated_Source\PSoC4/CyLib.c **** *  Gets the enable state of the specified interrupt number.
2570:Generated_Source\PSoC4/CyLib.c **** *
2571:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2572:Generated_Source\PSoC4/CyLib.c **** *
2573:Generated_Source\PSoC4/CyLib.c **** * \return
2574:Generated_Source\PSoC4/CyLib.c **** *  Enable status: 1 if enabled, 0 if disabled
2575:Generated_Source\PSoC4/CyLib.c **** *
2576:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2577:Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetState(uint8 number)
2578:Generated_Source\PSoC4/CyLib.c **** {
 1531              		.loc 1 2578 0
 1532              		.cfi_startproc
 1533              		@ args = 0, pretend = 0, frame = 8
 1534              		@ frame_needed = 1, uses_anonymous_args = 0
 1535 0000 80B5     		push	{r7, lr}
 1536              		.cfi_def_cfa_offset 8
 1537              		.cfi_offset 7, -8
 1538              		.cfi_offset 14, -4
 1539 0002 82B0     		sub	sp, sp, #8
 1540              		.cfi_def_cfa_offset 16
 1541 0004 00AF     		add	r7, sp, #0
 1542              		.cfi_def_cfa_register 7
 1543 0006 0200     		movs	r2, r0
 1544 0008 FB1D     		adds	r3, r7, #7
 1545 000a 1A70     		strb	r2, [r3]
2579:Generated_Source\PSoC4/CyLib.c ****     /* Get state of interrupt. */
2580:Generated_Source\PSoC4/CyLib.c ****     return ((0u != (CY_INT_ENABLE_REG & ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number)))) ?
 1546              		.loc 1 2580 0
 1547 000c 074B     		ldr	r3, .L88
 1548 000e 1A68     		ldr	r2, [r3]
 1549 0010 FB1D     		adds	r3, r7, #7
 1550 0012 1B78     		ldrb	r3, [r3]
 1551 0014 1F21     		movs	r1, #31
 1552 0016 0B40     		ands	r3, r1
 1553 0018 DA40     		lsrs	r2, r2, r3
 1554 001a 1300     		movs	r3, r2
 1555 001c DBB2     		uxtb	r3, r3
 1556 001e 0122     		movs	r2, #1
 1557 0020 1340     		ands	r3, r2
 1558 0022 DBB2     		uxtb	r3, r3
2581:Generated_Source\PSoC4/CyLib.c **** }
 1559              		.loc 1 2581 0
 1560 0024 1800     		movs	r0, r3
 1561 0026 BD46     		mov	sp, r7
 1562 0028 02B0     		add	sp, sp, #8
 1563              		@ sp needed
 1564 002a 80BD     		pop	{r7, pc}
 1565              	.L89:
 1566              		.align	2
 1567              	.L88:
 1568 002c 00E100E0 		.word	-536813312
 1569              		.cfi_endproc
 1570              	.LFE21:
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccaiT5A1.s 			page 74


 1571              		.size	CyIntGetState, .-CyIntGetState
 1572              		.section	.text.CyIntDisable,"ax",%progbits
 1573              		.align	2
 1574              		.global	CyIntDisable
 1575              		.code	16
 1576              		.thumb_func
 1577              		.type	CyIntDisable, %function
 1578              	CyIntDisable:
 1579              	.LFB22:
2582:Generated_Source\PSoC4/CyLib.c **** 
2583:Generated_Source\PSoC4/CyLib.c **** 
2584:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2585:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntDisable
2586:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2587:Generated_Source\PSoC4/CyLib.c **** *
2588:Generated_Source\PSoC4/CyLib.c **** *   Disables the specified interrupt number.
2589:Generated_Source\PSoC4/CyLib.c **** *
2590:Generated_Source\PSoC4/CyLib.c **** *   \param number: Valid range [0-31].  Interrupt number.
2591:Generated_Source\PSoC4/CyLib.c **** *
2592:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2593:Generated_Source\PSoC4/CyLib.c **** void CyIntDisable(uint8 number)
2594:Generated_Source\PSoC4/CyLib.c **** {
 1580              		.loc 1 2594 0
 1581              		.cfi_startproc
 1582              		@ args = 0, pretend = 0, frame = 8
 1583              		@ frame_needed = 1, uses_anonymous_args = 0
 1584 0000 80B5     		push	{r7, lr}
 1585              		.cfi_def_cfa_offset 8
 1586              		.cfi_offset 7, -8
 1587              		.cfi_offset 14, -4
 1588 0002 82B0     		sub	sp, sp, #8
 1589              		.cfi_def_cfa_offset 16
 1590 0004 00AF     		add	r7, sp, #0
 1591              		.cfi_def_cfa_register 7
 1592 0006 0200     		movs	r2, r0
 1593 0008 FB1D     		adds	r3, r7, #7
 1594 000a 1A70     		strb	r2, [r3]
2595:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 1595              		.loc 1 2595 0
 1596 000c 064B     		ldr	r3, .L91
 1597 000e FA1D     		adds	r2, r7, #7
 1598 0010 1278     		ldrb	r2, [r2]
 1599 0012 1F21     		movs	r1, #31
 1600 0014 0A40     		ands	r2, r1
 1601 0016 0121     		movs	r1, #1
 1602 0018 9140     		lsls	r1, r1, r2
 1603 001a 0A00     		movs	r2, r1
 1604 001c 1A60     		str	r2, [r3]
2596:Generated_Source\PSoC4/CyLib.c **** }
 1605              		.loc 1 2596 0
 1606 001e C046     		nop
 1607 0020 BD46     		mov	sp, r7
 1608 0022 02B0     		add	sp, sp, #8
 1609              		@ sp needed
 1610 0024 80BD     		pop	{r7, pc}
 1611              	.L92:
 1612 0026 C046     		.align	2
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccaiT5A1.s 			page 75


 1613              	.L91:
 1614 0028 80E100E0 		.word	-536813184
 1615              		.cfi_endproc
 1616              	.LFE22:
 1617              		.size	CyIntDisable, .-CyIntDisable
 1618              		.section	.text.CyIntSetPending,"ax",%progbits
 1619              		.align	2
 1620              		.global	CyIntSetPending
 1621              		.code	16
 1622              		.thumb_func
 1623              		.type	CyIntSetPending, %function
 1624              	CyIntSetPending:
 1625              	.LFB23:
2597:Generated_Source\PSoC4/CyLib.c **** 
2598:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2599:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPending
2600:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2601:Generated_Source\PSoC4/CyLib.c **** *
2602:Generated_Source\PSoC4/CyLib.c **** *  Forces the specified interrupt number to be pending.
2603:Generated_Source\PSoC4/CyLib.c **** *
2604:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2605:Generated_Source\PSoC4/CyLib.c **** *
2606:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2607:Generated_Source\PSoC4/CyLib.c **** void CyIntSetPending(uint8 number)
2608:Generated_Source\PSoC4/CyLib.c **** {
 1626              		.loc 1 2608 0
 1627              		.cfi_startproc
 1628              		@ args = 0, pretend = 0, frame = 8
 1629              		@ frame_needed = 1, uses_anonymous_args = 0
 1630 0000 80B5     		push	{r7, lr}
 1631              		.cfi_def_cfa_offset 8
 1632              		.cfi_offset 7, -8
 1633              		.cfi_offset 14, -4
 1634 0002 82B0     		sub	sp, sp, #8
 1635              		.cfi_def_cfa_offset 16
 1636 0004 00AF     		add	r7, sp, #0
 1637              		.cfi_def_cfa_register 7
 1638 0006 0200     		movs	r2, r0
 1639 0008 FB1D     		adds	r3, r7, #7
 1640 000a 1A70     		strb	r2, [r3]
2609:Generated_Source\PSoC4/CyLib.c ****     CY_INT_SET_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 1641              		.loc 1 2609 0
 1642 000c 064B     		ldr	r3, .L94
 1643 000e FA1D     		adds	r2, r7, #7
 1644 0010 1278     		ldrb	r2, [r2]
 1645 0012 1F21     		movs	r1, #31
 1646 0014 0A40     		ands	r2, r1
 1647 0016 0121     		movs	r1, #1
 1648 0018 9140     		lsls	r1, r1, r2
 1649 001a 0A00     		movs	r2, r1
 1650 001c 1A60     		str	r2, [r3]
2610:Generated_Source\PSoC4/CyLib.c **** }
 1651              		.loc 1 2610 0
 1652 001e C046     		nop
 1653 0020 BD46     		mov	sp, r7
 1654 0022 02B0     		add	sp, sp, #8
 1655              		@ sp needed
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccaiT5A1.s 			page 76


 1656 0024 80BD     		pop	{r7, pc}
 1657              	.L95:
 1658 0026 C046     		.align	2
 1659              	.L94:
 1660 0028 00E200E0 		.word	-536813056
 1661              		.cfi_endproc
 1662              	.LFE23:
 1663              		.size	CyIntSetPending, .-CyIntSetPending
 1664              		.section	.text.CyIntClearPending,"ax",%progbits
 1665              		.align	2
 1666              		.global	CyIntClearPending
 1667              		.code	16
 1668              		.thumb_func
 1669              		.type	CyIntClearPending, %function
 1670              	CyIntClearPending:
 1671              	.LFB24:
2611:Generated_Source\PSoC4/CyLib.c **** 
2612:Generated_Source\PSoC4/CyLib.c **** 
2613:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2614:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntClearPending
2615:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2616:Generated_Source\PSoC4/CyLib.c **** *
2617:Generated_Source\PSoC4/CyLib.c **** *  Clears any pending interrupt for the specified interrupt number.
2618:Generated_Source\PSoC4/CyLib.c **** *
2619:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2620:Generated_Source\PSoC4/CyLib.c **** *
2621:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2622:Generated_Source\PSoC4/CyLib.c **** void CyIntClearPending(uint8 number)
2623:Generated_Source\PSoC4/CyLib.c **** {
 1672              		.loc 1 2623 0
 1673              		.cfi_startproc
 1674              		@ args = 0, pretend = 0, frame = 8
 1675              		@ frame_needed = 1, uses_anonymous_args = 0
 1676 0000 80B5     		push	{r7, lr}
 1677              		.cfi_def_cfa_offset 8
 1678              		.cfi_offset 7, -8
 1679              		.cfi_offset 14, -4
 1680 0002 82B0     		sub	sp, sp, #8
 1681              		.cfi_def_cfa_offset 16
 1682 0004 00AF     		add	r7, sp, #0
 1683              		.cfi_def_cfa_register 7
 1684 0006 0200     		movs	r2, r0
 1685 0008 FB1D     		adds	r3, r7, #7
 1686 000a 1A70     		strb	r2, [r3]
2624:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLR_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 1687              		.loc 1 2624 0
 1688 000c 064B     		ldr	r3, .L97
 1689 000e FA1D     		adds	r2, r7, #7
 1690 0010 1278     		ldrb	r2, [r2]
 1691 0012 1F21     		movs	r1, #31
 1692 0014 0A40     		ands	r2, r1
 1693 0016 0121     		movs	r1, #1
 1694 0018 9140     		lsls	r1, r1, r2
 1695 001a 0A00     		movs	r2, r1
 1696 001c 1A60     		str	r2, [r3]
2625:Generated_Source\PSoC4/CyLib.c **** }
 1697              		.loc 1 2625 0
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccaiT5A1.s 			page 77


 1698 001e C046     		nop
 1699 0020 BD46     		mov	sp, r7
 1700 0022 02B0     		add	sp, sp, #8
 1701              		@ sp needed
 1702 0024 80BD     		pop	{r7, pc}
 1703              	.L98:
 1704 0026 C046     		.align	2
 1705              	.L97:
 1706 0028 80E200E0 		.word	-536812928
 1707              		.cfi_endproc
 1708              	.LFE24:
 1709              		.size	CyIntClearPending, .-CyIntClearPending
 1710              		.section	.text.CyHalt,"ax",%progbits
 1711              		.align	2
 1712              		.global	CyHalt
 1713              		.code	16
 1714              		.thumb_func
 1715              		.type	CyHalt, %function
 1716              	CyHalt:
 1717              	.LFB25:
2626:Generated_Source\PSoC4/CyLib.c **** 
2627:Generated_Source\PSoC4/CyLib.c **** 
2628:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2629:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyHalt
2630:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2631:Generated_Source\PSoC4/CyLib.c **** *
2632:Generated_Source\PSoC4/CyLib.c **** *  Halts the CPU.
2633:Generated_Source\PSoC4/CyLib.c **** *
2634:Generated_Source\PSoC4/CyLib.c **** *  \param reason: Value to be used during debugging.
2635:Generated_Source\PSoC4/CyLib.c **** *
2636:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2637:Generated_Source\PSoC4/CyLib.c **** void CyHalt(uint8 reason)
2638:Generated_Source\PSoC4/CyLib.c **** {
 1718              		.loc 1 2638 0
 1719              		.cfi_startproc
 1720              		@ args = 0, pretend = 0, frame = 8
 1721              		@ frame_needed = 1, uses_anonymous_args = 0
 1722 0000 80B5     		push	{r7, lr}
 1723              		.cfi_def_cfa_offset 8
 1724              		.cfi_offset 7, -8
 1725              		.cfi_offset 14, -4
 1726 0002 82B0     		sub	sp, sp, #8
 1727              		.cfi_def_cfa_offset 16
 1728 0004 00AF     		add	r7, sp, #0
 1729              		.cfi_def_cfa_register 7
 1730 0006 0200     		movs	r2, r0
 1731 0008 FB1D     		adds	r3, r7, #7
 1732 000a 1A70     		strb	r2, [r3]
2639:Generated_Source\PSoC4/CyLib.c ****     if(0u != reason)
2640:Generated_Source\PSoC4/CyLib.c ****     {
2641:Generated_Source\PSoC4/CyLib.c ****         /* To remove unreferenced local variable warning */
2642:Generated_Source\PSoC4/CyLib.c ****     }
2643:Generated_Source\PSoC4/CyLib.c **** 
2644:Generated_Source\PSoC4/CyLib.c ****     #if defined (__ARMCC_VERSION)
2645:Generated_Source\PSoC4/CyLib.c ****         __breakpoint(0x0);
2646:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__GNUC__) || defined (__ICCARM__)
2647:Generated_Source\PSoC4/CyLib.c ****         __asm("    bkpt    1");
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccaiT5A1.s 			page 78


 1733              		.loc 1 2647 0
 1734              		.syntax divided
 1735              	@ 2647 "Generated_Source\PSoC4\CyLib.c" 1
 1736 000c 01BE     		    bkpt    1
 1737              	@ 0 "" 2
2648:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__C51__)
2649:Generated_Source\PSoC4/CyLib.c ****         CYDEV_HALT_CPU;
2650:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (__ARMCC_VERSION) */
2651:Generated_Source\PSoC4/CyLib.c **** }
 1738              		.loc 1 2651 0
 1739              		.thumb
 1740              		.syntax unified
 1741 000e C046     		nop
 1742 0010 BD46     		mov	sp, r7
 1743 0012 02B0     		add	sp, sp, #8
 1744              		@ sp needed
 1745 0014 80BD     		pop	{r7, pc}
 1746              		.cfi_endproc
 1747              	.LFE25:
 1748              		.size	CyHalt, .-CyHalt
 1749 0016 C046     		.section	.text.CySoftwareReset,"ax",%progbits
 1750              		.align	2
 1751              		.global	CySoftwareReset
 1752              		.code	16
 1753              		.thumb_func
 1754              		.type	CySoftwareReset, %function
 1755              	CySoftwareReset:
 1756              	.LFB26:
2652:Generated_Source\PSoC4/CyLib.c **** 
2653:Generated_Source\PSoC4/CyLib.c **** 
2654:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2655:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySoftwareReset
2656:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2657:Generated_Source\PSoC4/CyLib.c **** *
2658:Generated_Source\PSoC4/CyLib.c **** *  Forces a software reset of the device.
2659:Generated_Source\PSoC4/CyLib.c **** *
2660:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2661:Generated_Source\PSoC4/CyLib.c **** void CySoftwareReset(void)
2662:Generated_Source\PSoC4/CyLib.c **** {
 1757              		.loc 1 2662 0
 1758              		.cfi_startproc
 1759              		@ args = 0, pretend = 0, frame = 0
 1760              		@ frame_needed = 1, uses_anonymous_args = 0
 1761 0000 80B5     		push	{r7, lr}
 1762              		.cfi_def_cfa_offset 8
 1763              		.cfi_offset 7, -8
 1764              		.cfi_offset 14, -4
 1765 0002 00AF     		add	r7, sp, #0
 1766              		.cfi_def_cfa_register 7
2663:Generated_Source\PSoC4/CyLib.c ****     /***************************************************************************
2664:Generated_Source\PSoC4/CyLib.c ****     * Setting the system reset request bit. The vector key value must be written
2665:Generated_Source\PSoC4/CyLib.c ****     * to the register, otherwise the register write is unpredictable.
2666:Generated_Source\PSoC4/CyLib.c ****     ***************************************************************************/
2667:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_AIRCR_REG = (CY_SYS_AIRCR_REG & (uint32)(~CY_SYS_AIRCR_VECTKEY_MASK)) |
 1767              		.loc 1 2667 0
 1768 0004 054B     		ldr	r3, .L101
 1769 0006 054A     		ldr	r2, .L101
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccaiT5A1.s 			page 79


 1770 0008 1268     		ldr	r2, [r2]
 1771 000a 1204     		lsls	r2, r2, #16
 1772 000c 120C     		lsrs	r2, r2, #16
2668:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 1773              		.loc 1 2668 0
 1774 000e 0449     		ldr	r1, .L101+4
 1775 0010 0A43     		orrs	r2, r1
2667:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 1776              		.loc 1 2667 0
 1777 0012 1A60     		str	r2, [r3]
2669:Generated_Source\PSoC4/CyLib.c **** }
 1778              		.loc 1 2669 0
 1779 0014 C046     		nop
 1780 0016 BD46     		mov	sp, r7
 1781              		@ sp needed
 1782 0018 80BD     		pop	{r7, pc}
 1783              	.L102:
 1784 001a C046     		.align	2
 1785              	.L101:
 1786 001c 0CED00E0 		.word	-536810228
 1787 0020 0400FA05 		.word	100270084
 1788              		.cfi_endproc
 1789              	.LFE26:
 1790              		.size	CySoftwareReset, .-CySoftwareReset
 1791              		.section	.text.CyDelay,"ax",%progbits
 1792              		.align	2
 1793              		.global	CyDelay
 1794              		.code	16
 1795              		.thumb_func
 1796              		.type	CyDelay, %function
 1797              	CyDelay:
 1798              	.LFB27:
2670:Generated_Source\PSoC4/CyLib.c **** 
2671:Generated_Source\PSoC4/CyLib.c **** 
2672:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2673:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelay
2674:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2675:Generated_Source\PSoC4/CyLib.c **** *
2676:Generated_Source\PSoC4/CyLib.c **** *  Blocks for milliseconds.
2677:Generated_Source\PSoC4/CyLib.c **** *
2678:Generated_Source\PSoC4/CyLib.c **** *  \param milliseconds: number of milliseconds to delay.
2679:Generated_Source\PSoC4/CyLib.c **** *
2680:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2681:Generated_Source\PSoC4/CyLib.c **** void CyDelay(uint32 milliseconds)
2682:Generated_Source\PSoC4/CyLib.c **** {
 1799              		.loc 1 2682 0
 1800              		.cfi_startproc
 1801              		@ args = 0, pretend = 0, frame = 8
 1802              		@ frame_needed = 1, uses_anonymous_args = 0
 1803 0000 80B5     		push	{r7, lr}
 1804              		.cfi_def_cfa_offset 8
 1805              		.cfi_offset 7, -8
 1806              		.cfi_offset 14, -4
 1807 0002 82B0     		sub	sp, sp, #8
 1808              		.cfi_def_cfa_offset 16
 1809 0004 00AF     		add	r7, sp, #0
 1810              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccaiT5A1.s 			page 80


 1811 0006 7860     		str	r0, [r7, #4]
2683:Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 1812              		.loc 1 2683 0
 1813 0008 09E0     		b	.L104
 1814              	.L105:
2684:Generated_Source\PSoC4/CyLib.c ****     {
2685:Generated_Source\PSoC4/CyLib.c ****         /* This loop prevents overflow.
2686:Generated_Source\PSoC4/CyLib.c ****          * At 100MHz, milliseconds * cydelayFreqKhz overflows at about 42 seconds
2687:Generated_Source\PSoC4/CyLib.c ****          */
2688:Generated_Source\PSoC4/CyLib.c ****         CyDelayCycles(cydelay32kMs);
 1815              		.loc 1 2688 0
 1816 000a 0D4B     		ldr	r3, .L106
 1817 000c 1B68     		ldr	r3, [r3]
 1818 000e 1800     		movs	r0, r3
 1819 0010 FFF7FEFF 		bl	CyDelayCycles
2689:Generated_Source\PSoC4/CyLib.c ****         milliseconds -= CY_DELAY_MS_OVERFLOW;
 1820              		.loc 1 2689 0
 1821 0014 7B68     		ldr	r3, [r7, #4]
 1822 0016 0B4A     		ldr	r2, .L106+4
 1823 0018 9446     		mov	ip, r2
 1824 001a 6344     		add	r3, r3, ip
 1825 001c 7B60     		str	r3, [r7, #4]
 1826              	.L104:
2683:Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 1827              		.loc 1 2683 0
 1828 001e 7A68     		ldr	r2, [r7, #4]
 1829 0020 8023     		movs	r3, #128
 1830 0022 1B02     		lsls	r3, r3, #8
 1831 0024 9A42     		cmp	r2, r3
 1832 0026 F0D8     		bhi	.L105
2690:Generated_Source\PSoC4/CyLib.c ****     }
2691:Generated_Source\PSoC4/CyLib.c **** 
2692:Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles(milliseconds * cydelayFreqKhz);
 1833              		.loc 1 2692 0
 1834 0028 074B     		ldr	r3, .L106+8
 1835 002a 1B68     		ldr	r3, [r3]
 1836 002c 7A68     		ldr	r2, [r7, #4]
 1837 002e 5343     		muls	r3, r2
 1838 0030 1800     		movs	r0, r3
 1839 0032 FFF7FEFF 		bl	CyDelayCycles
2693:Generated_Source\PSoC4/CyLib.c **** }
 1840              		.loc 1 2693 0
 1841 0036 C046     		nop
 1842 0038 BD46     		mov	sp, r7
 1843 003a 02B0     		add	sp, sp, #8
 1844              		@ sp needed
 1845 003c 80BD     		pop	{r7, pc}
 1846              	.L107:
 1847 003e C046     		.align	2
 1848              	.L106:
 1849 0040 00000000 		.word	cydelay32kMs
 1850 0044 0080FFFF 		.word	-32768
 1851 0048 00000000 		.word	cydelayFreqKhz
 1852              		.cfi_endproc
 1853              	.LFE27:
 1854              		.size	CyDelay, .-CyDelay
 1855              		.section	.text.CyDelayUs,"ax",%progbits
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccaiT5A1.s 			page 81


 1856              		.align	2
 1857              		.global	CyDelayUs
 1858              		.code	16
 1859              		.thumb_func
 1860              		.type	CyDelayUs, %function
 1861              	CyDelayUs:
 1862              	.LFB28:
2694:Generated_Source\PSoC4/CyLib.c **** 
2695:Generated_Source\PSoC4/CyLib.c **** 
2696:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2697:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayUs
2698:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2699:Generated_Source\PSoC4/CyLib.c **** *  Blocks for microseconds.
2700:Generated_Source\PSoC4/CyLib.c **** *
2701:Generated_Source\PSoC4/CyLib.c **** *  \param microseconds: number of microseconds to delay.
2702:Generated_Source\PSoC4/CyLib.c **** *
2703:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2704:Generated_Source\PSoC4/CyLib.c **** void CyDelayUs(uint16 microseconds)
2705:Generated_Source\PSoC4/CyLib.c **** {
 1863              		.loc 1 2705 0
 1864              		.cfi_startproc
 1865              		@ args = 0, pretend = 0, frame = 8
 1866              		@ frame_needed = 1, uses_anonymous_args = 0
 1867 0000 80B5     		push	{r7, lr}
 1868              		.cfi_def_cfa_offset 8
 1869              		.cfi_offset 7, -8
 1870              		.cfi_offset 14, -4
 1871 0002 82B0     		sub	sp, sp, #8
 1872              		.cfi_def_cfa_offset 16
 1873 0004 00AF     		add	r7, sp, #0
 1874              		.cfi_def_cfa_register 7
 1875 0006 0200     		movs	r2, r0
 1876 0008 BB1D     		adds	r3, r7, #6
 1877 000a 1A80     		strh	r2, [r3]
2706:Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles((uint32)microseconds * cydelayFreqMhz);
 1878              		.loc 1 2706 0
 1879 000c BB1D     		adds	r3, r7, #6
 1880 000e 1B88     		ldrh	r3, [r3]
 1881 0010 044A     		ldr	r2, .L109
 1882 0012 1278     		ldrb	r2, [r2]
 1883 0014 5343     		muls	r3, r2
 1884 0016 1800     		movs	r0, r3
 1885 0018 FFF7FEFF 		bl	CyDelayCycles
2707:Generated_Source\PSoC4/CyLib.c **** }
 1886              		.loc 1 2707 0
 1887 001c C046     		nop
 1888 001e BD46     		mov	sp, r7
 1889 0020 02B0     		add	sp, sp, #8
 1890              		@ sp needed
 1891 0022 80BD     		pop	{r7, pc}
 1892              	.L110:
 1893              		.align	2
 1894              	.L109:
 1895 0024 00000000 		.word	cydelayFreqMhz
 1896              		.cfi_endproc
 1897              	.LFE28:
 1898              		.size	CyDelayUs, .-CyDelayUs
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccaiT5A1.s 			page 82


 1899              		.global	__aeabi_uidiv
 1900              		.section	.text.CyDelayFreq,"ax",%progbits
 1901              		.align	2
 1902              		.global	CyDelayFreq
 1903              		.code	16
 1904              		.thumb_func
 1905              		.type	CyDelayFreq, %function
 1906              	CyDelayFreq:
 1907              	.LFB29:
2708:Generated_Source\PSoC4/CyLib.c **** 
2709:Generated_Source\PSoC4/CyLib.c **** 
2710:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2711:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayFreq
2712:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2713:Generated_Source\PSoC4/CyLib.c **** *  Sets clock frequency for CyDelay.
2714:Generated_Source\PSoC4/CyLib.c **** *
2715:Generated_Source\PSoC4/CyLib.c **** *  \param freq: Frequency of bus clock in Hertz.
2716:Generated_Source\PSoC4/CyLib.c **** *
2717:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2718:Generated_Source\PSoC4/CyLib.c **** void CyDelayFreq(uint32 freq)
2719:Generated_Source\PSoC4/CyLib.c **** {
 1908              		.loc 1 2719 0
 1909              		.cfi_startproc
 1910              		@ args = 0, pretend = 0, frame = 8
 1911              		@ frame_needed = 1, uses_anonymous_args = 0
 1912 0000 80B5     		push	{r7, lr}
 1913              		.cfi_def_cfa_offset 8
 1914              		.cfi_offset 7, -8
 1915              		.cfi_offset 14, -4
 1916 0002 82B0     		sub	sp, sp, #8
 1917              		.cfi_def_cfa_offset 16
 1918 0004 00AF     		add	r7, sp, #0
 1919              		.cfi_def_cfa_register 7
 1920 0006 7860     		str	r0, [r7, #4]
2720:Generated_Source\PSoC4/CyLib.c ****     if (freq != 0u)
 1921              		.loc 1 2720 0
 1922 0008 7B68     		ldr	r3, [r7, #4]
 1923 000a 002B     		cmp	r3, #0
 1924 000c 03D0     		beq	.L112
2721:Generated_Source\PSoC4/CyLib.c ****     {
2722:Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = freq;
 1925              		.loc 1 2722 0
 1926 000e 154B     		ldr	r3, .L114
 1927 0010 7A68     		ldr	r2, [r7, #4]
 1928 0012 1A60     		str	r2, [r3]
 1929 0014 02E0     		b	.L113
 1930              	.L112:
2723:Generated_Source\PSoC4/CyLib.c ****     }
2724:Generated_Source\PSoC4/CyLib.c ****     else
2725:Generated_Source\PSoC4/CyLib.c ****     {
2726:Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = CYDEV_BCLK__SYSCLK__HZ;
 1931              		.loc 1 2726 0
 1932 0016 134B     		ldr	r3, .L114
 1933 0018 134A     		ldr	r2, .L114+4
 1934 001a 1A60     		str	r2, [r3]
 1935              	.L113:
2727:Generated_Source\PSoC4/CyLib.c ****     }
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccaiT5A1.s 			page 83


2728:Generated_Source\PSoC4/CyLib.c **** 
2729:Generated_Source\PSoC4/CyLib.c ****     cydelayFreqMhz = (uint8)((cydelayFreqHz + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY_1M_THRESHOL
 1936              		.loc 1 2729 0
 1937 001c 114B     		ldr	r3, .L114
 1938 001e 1B68     		ldr	r3, [r3]
 1939 0020 124A     		ldr	r2, .L114+8
 1940 0022 9446     		mov	ip, r2
 1941 0024 6344     		add	r3, r3, ip
 1942 0026 1249     		ldr	r1, .L114+12
 1943 0028 1800     		movs	r0, r3
 1944 002a FFF7FEFF 		bl	__aeabi_uidiv
 1945 002e 0300     		movs	r3, r0
 1946 0030 DAB2     		uxtb	r2, r3
 1947 0032 104B     		ldr	r3, .L114+16
 1948 0034 1A70     		strb	r2, [r3]
2730:Generated_Source\PSoC4/CyLib.c ****     cydelayFreqKhz = (cydelayFreqHz + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRESHOLD;
 1949              		.loc 1 2730 0
 1950 0036 0B4B     		ldr	r3, .L114
 1951 0038 1B68     		ldr	r3, [r3]
 1952 003a 0F4A     		ldr	r2, .L114+20
 1953 003c 9A18     		adds	r2, r3, r2
 1954 003e FA23     		movs	r3, #250
 1955 0040 9900     		lsls	r1, r3, #2
 1956 0042 1000     		movs	r0, r2
 1957 0044 FFF7FEFF 		bl	__aeabi_uidiv
 1958 0048 0300     		movs	r3, r0
 1959 004a 1A00     		movs	r2, r3
 1960 004c 0B4B     		ldr	r3, .L114+24
 1961 004e 1A60     		str	r2, [r3]
2731:Generated_Source\PSoC4/CyLib.c ****     cydelay32kMs   = CY_DELAY_MS_OVERFLOW * cydelayFreqKhz;
 1962              		.loc 1 2731 0
 1963 0050 0A4B     		ldr	r3, .L114+24
 1964 0052 1B68     		ldr	r3, [r3]
 1965 0054 DA03     		lsls	r2, r3, #15
 1966 0056 0A4B     		ldr	r3, .L114+28
 1967 0058 1A60     		str	r2, [r3]
2732:Generated_Source\PSoC4/CyLib.c **** }
 1968              		.loc 1 2732 0
 1969 005a C046     		nop
 1970 005c BD46     		mov	sp, r7
 1971 005e 02B0     		add	sp, sp, #8
 1972              		@ sp needed
 1973 0060 80BD     		pop	{r7, pc}
 1974              	.L115:
 1975 0062 C046     		.align	2
 1976              	.L114:
 1977 0064 00000000 		.word	cydelayFreqHz
 1978 0068 00366E01 		.word	24000000
 1979 006c 3F420F00 		.word	999999
 1980 0070 40420F00 		.word	1000000
 1981 0074 00000000 		.word	cydelayFreqMhz
 1982 0078 E7030000 		.word	999
 1983 007c 00000000 		.word	cydelayFreqKhz
 1984 0080 00000000 		.word	cydelay32kMs
 1985              		.cfi_endproc
 1986              	.LFE29:
 1987              		.size	CyDelayFreq, .-CyDelayFreq
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccaiT5A1.s 			page 84


 1988              		.section	.text.CySysTickStart,"ax",%progbits
 1989              		.align	2
 1990              		.global	CySysTickStart
 1991              		.code	16
 1992              		.thumb_func
 1993              		.type	CySysTickStart, %function
 1994              	CySysTickStart:
 1995              	.LFB30:
2733:Generated_Source\PSoC4/CyLib.c **** 
2734:Generated_Source\PSoC4/CyLib.c **** 
2735:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2736:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTick_Start
2737:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2738:Generated_Source\PSoC4/CyLib.c **** *
2739:Generated_Source\PSoC4/CyLib.c **** *  Starts the system timer (SysTick): configures SysTick to generate interrupt
2740:Generated_Source\PSoC4/CyLib.c **** *  every 1 ms and enables the interrupt.
2741:Generated_Source\PSoC4/CyLib.c **** *
2742:Generated_Source\PSoC4/CyLib.c **** *  There are components (LIN, CapSense Gesture) that relies on the default 
2743:Generated_Source\PSoC4/CyLib.c **** *  interval (1 ms). And that changing the interval will negatively impact 
2744:Generated_Source\PSoC4/CyLib.c **** *  their functionality.
2745:Generated_Source\PSoC4/CyLib.c **** *
2746:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2747:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2748:Generated_Source\PSoC4/CyLib.c **** *
2749:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2750:Generated_Source\PSoC4/CyLib.c **** void CySysTickStart(void)
2751:Generated_Source\PSoC4/CyLib.c **** {
 1996              		.loc 1 2751 0
 1997              		.cfi_startproc
 1998              		@ args = 0, pretend = 0, frame = 0
 1999              		@ frame_needed = 1, uses_anonymous_args = 0
 2000 0000 80B5     		push	{r7, lr}
 2001              		.cfi_def_cfa_offset 8
 2002              		.cfi_offset 7, -8
 2003              		.cfi_offset 14, -4
 2004 0002 00AF     		add	r7, sp, #0
 2005              		.cfi_def_cfa_register 7
2752:Generated_Source\PSoC4/CyLib.c ****     if (0u == CySysTickInitVar)
 2006              		.loc 1 2752 0
 2007 0004 064B     		ldr	r3, .L118
 2008 0006 1B68     		ldr	r3, [r3]
 2009 0008 002B     		cmp	r3, #0
 2010 000a 04D1     		bne	.L117
2753:Generated_Source\PSoC4/CyLib.c ****     {
2754:Generated_Source\PSoC4/CyLib.c ****         CySysTickInit();
 2011              		.loc 1 2754 0
 2012 000c FFF7FEFF 		bl	CySysTickInit
2755:Generated_Source\PSoC4/CyLib.c ****         CySysTickInitVar = 1u;
 2013              		.loc 1 2755 0
 2014 0010 034B     		ldr	r3, .L118
 2015 0012 0122     		movs	r2, #1
 2016 0014 1A60     		str	r2, [r3]
 2017              	.L117:
2756:Generated_Source\PSoC4/CyLib.c ****     }
2757:Generated_Source\PSoC4/CyLib.c **** 
2758:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnable();
 2018              		.loc 1 2758 0
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccaiT5A1.s 			page 85


 2019 0016 FFF7FEFF 		bl	CySysTickEnable
2759:Generated_Source\PSoC4/CyLib.c **** }
 2020              		.loc 1 2759 0
 2021 001a C046     		nop
 2022 001c BD46     		mov	sp, r7
 2023              		@ sp needed
 2024 001e 80BD     		pop	{r7, pc}
 2025              	.L119:
 2026              		.align	2
 2027              	.L118:
 2028 0020 00000000 		.word	CySysTickInitVar
 2029              		.cfi_endproc
 2030              	.LFE30:
 2031              		.size	CySysTickStart, .-CySysTickStart
 2032              		.section	.text.CySysTickInit,"ax",%progbits
 2033              		.align	2
 2034              		.global	CySysTickInit
 2035              		.code	16
 2036              		.thumb_func
 2037              		.type	CySysTickInit, %function
 2038              	CySysTickInit:
 2039              	.LFB31:
2760:Generated_Source\PSoC4/CyLib.c **** 
2761:Generated_Source\PSoC4/CyLib.c **** 
2762:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2763:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickInit
2764:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2765:Generated_Source\PSoC4/CyLib.c **** *
2766:Generated_Source\PSoC4/CyLib.c **** *  Initializes the callback addresses with pointers to NULL, associates the
2767:Generated_Source\PSoC4/CyLib.c **** *  SysTick system vector with the function that is responsible for calling
2768:Generated_Source\PSoC4/CyLib.c **** *  registered callback functions, configures SysTick timer to generate interrupt
2769:Generated_Source\PSoC4/CyLib.c **** *  every 1 ms.
2770:Generated_Source\PSoC4/CyLib.c **** *
2771:Generated_Source\PSoC4/CyLib.c **** *  The 1 ms interrupt interval is configured based on the frequency determined
2772:Generated_Source\PSoC4/CyLib.c **** *  by PSoC Creator at build time. If System clock frequency is changed in
2773:Generated_Source\PSoC4/CyLib.c **** *  runtime, the CyDelayFreq() with the appropriate parameter should be called.
2774:Generated_Source\PSoC4/CyLib.c **** *
2775:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2776:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2777:Generated_Source\PSoC4/CyLib.c **** *
2778:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2779:Generated_Source\PSoC4/CyLib.c **** void CySysTickInit(void)
2780:Generated_Source\PSoC4/CyLib.c **** {
 2040              		.loc 1 2780 0
 2041              		.cfi_startproc
 2042              		@ args = 0, pretend = 0, frame = 8
 2043              		@ frame_needed = 1, uses_anonymous_args = 0
 2044 0000 80B5     		push	{r7, lr}
 2045              		.cfi_def_cfa_offset 8
 2046              		.cfi_offset 7, -8
 2047              		.cfi_offset 14, -4
 2048 0002 82B0     		sub	sp, sp, #8
 2049              		.cfi_def_cfa_offset 16
 2050 0004 00AF     		add	r7, sp, #0
 2051              		.cfi_def_cfa_register 7
2781:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
2782:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccaiT5A1.s 			page 86


2783:Generated_Source\PSoC4/CyLib.c ****     for (i = 0u; i<CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
 2052              		.loc 1 2783 0
 2053 0006 0023     		movs	r3, #0
 2054 0008 7B60     		str	r3, [r7, #4]
 2055 000a 07E0     		b	.L121
 2056              	.L122:
2784:Generated_Source\PSoC4/CyLib.c ****     {
2785:Generated_Source\PSoC4/CyLib.c ****         CySysTickCallbacks[i] = (void *) 0;
 2057              		.loc 1 2785 0 discriminator 3
 2058 000c 104B     		ldr	r3, .L123
 2059 000e 7A68     		ldr	r2, [r7, #4]
 2060 0010 9200     		lsls	r2, r2, #2
 2061 0012 0021     		movs	r1, #0
 2062 0014 D150     		str	r1, [r2, r3]
2783:Generated_Source\PSoC4/CyLib.c ****     {
 2063              		.loc 1 2783 0 discriminator 3
 2064 0016 7B68     		ldr	r3, [r7, #4]
 2065 0018 0133     		adds	r3, r3, #1
 2066 001a 7B60     		str	r3, [r7, #4]
 2067              	.L121:
2783:Generated_Source\PSoC4/CyLib.c ****     {
 2068              		.loc 1 2783 0 is_stmt 0 discriminator 1
 2069 001c 7B68     		ldr	r3, [r7, #4]
 2070 001e 042B     		cmp	r3, #4
 2071 0020 F4D9     		bls	.L122
2786:Generated_Source\PSoC4/CyLib.c ****     }
2787:Generated_Source\PSoC4/CyLib.c **** 
2788:Generated_Source\PSoC4/CyLib.c ****     (void) CyIntSetSysVector(CY_INT_SYSTICK_IRQN, &CySysTickServiceCallbacks);
 2072              		.loc 1 2788 0 is_stmt 1
 2073 0022 0C4B     		ldr	r3, .L123+4
 2074 0024 1900     		movs	r1, r3
 2075 0026 0F20     		movs	r0, #15
 2076 0028 FFF7FEFF 		bl	CyIntSetSysVector
2789:Generated_Source\PSoC4/CyLib.c **** 
2790:Generated_Source\PSoC4/CyLib.c ****     #if(CY_SYSTICK_LFCLK_SOURCE)
2791:Generated_Source\PSoC4/CyLib.c ****         CySysTickSetClockSource(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK);
2792:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
2793:Generated_Source\PSoC4/CyLib.c **** 
2794:Generated_Source\PSoC4/CyLib.c ****     CySysTickSetReload(cydelayFreqHz/1000u);
 2077              		.loc 1 2794 0
 2078 002c 0A4B     		ldr	r3, .L123+8
 2079 002e 1A68     		ldr	r2, [r3]
 2080 0030 FA23     		movs	r3, #250
 2081 0032 9900     		lsls	r1, r3, #2
 2082 0034 1000     		movs	r0, r2
 2083 0036 FFF7FEFF 		bl	__aeabi_uidiv
 2084 003a 0300     		movs	r3, r0
 2085 003c 1800     		movs	r0, r3
 2086 003e FFF7FEFF 		bl	CySysTickSetReload
2795:Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
 2087              		.loc 1 2795 0
 2088 0042 FFF7FEFF 		bl	CySysTickClear
2796:Generated_Source\PSoC4/CyLib.c **** }
 2089              		.loc 1 2796 0
 2090 0046 C046     		nop
 2091 0048 BD46     		mov	sp, r7
 2092 004a 02B0     		add	sp, sp, #8
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccaiT5A1.s 			page 87


 2093              		@ sp needed
 2094 004c 80BD     		pop	{r7, pc}
 2095              	.L124:
 2096 004e C046     		.align	2
 2097              	.L123:
 2098 0050 00000000 		.word	CySysTickCallbacks
 2099 0054 00000000 		.word	CySysTickServiceCallbacks
 2100 0058 00000000 		.word	cydelayFreqHz
 2101              		.cfi_endproc
 2102              	.LFE31:
 2103              		.size	CySysTickInit, .-CySysTickInit
 2104              		.section	.text.CySysTickEnable,"ax",%progbits
 2105              		.align	2
 2106              		.global	CySysTickEnable
 2107              		.code	16
 2108              		.thumb_func
 2109              		.type	CySysTickEnable, %function
 2110              	CySysTickEnable:
 2111              	.LFB32:
2797:Generated_Source\PSoC4/CyLib.c **** 
2798:Generated_Source\PSoC4/CyLib.c **** 
2799:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2800:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnable
2801:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2802:Generated_Source\PSoC4/CyLib.c **** *
2803:Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick timer and its interrupt.
2804:Generated_Source\PSoC4/CyLib.c **** *
2805:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2806:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2807:Generated_Source\PSoC4/CyLib.c **** *
2808:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2809:Generated_Source\PSoC4/CyLib.c **** void CySysTickEnable(void)
2810:Generated_Source\PSoC4/CyLib.c **** {
 2112              		.loc 1 2810 0
 2113              		.cfi_startproc
 2114              		@ args = 0, pretend = 0, frame = 0
 2115              		@ frame_needed = 1, uses_anonymous_args = 0
 2116 0000 80B5     		push	{r7, lr}
 2117              		.cfi_def_cfa_offset 8
 2118              		.cfi_offset 7, -8
 2119              		.cfi_offset 14, -4
 2120 0002 00AF     		add	r7, sp, #0
 2121              		.cfi_def_cfa_register 7
2811:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnableInterrupt();
 2122              		.loc 1 2811 0
 2123 0004 FFF7FEFF 		bl	CySysTickEnableInterrupt
2812:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE;
 2124              		.loc 1 2812 0
 2125 0008 044B     		ldr	r3, .L126
 2126 000a 044A     		ldr	r2, .L126
 2127 000c 1268     		ldr	r2, [r2]
 2128 000e 0121     		movs	r1, #1
 2129 0010 0A43     		orrs	r2, r1
 2130 0012 1A60     		str	r2, [r3]
2813:Generated_Source\PSoC4/CyLib.c **** }
 2131              		.loc 1 2813 0
 2132 0014 C046     		nop
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccaiT5A1.s 			page 88


 2133 0016 BD46     		mov	sp, r7
 2134              		@ sp needed
 2135 0018 80BD     		pop	{r7, pc}
 2136              	.L127:
 2137 001a C046     		.align	2
 2138              	.L126:
 2139 001c 10E000E0 		.word	-536813552
 2140              		.cfi_endproc
 2141              	.LFE32:
 2142              		.size	CySysTickEnable, .-CySysTickEnable
 2143              		.section	.text.CySysTickStop,"ax",%progbits
 2144              		.align	2
 2145              		.global	CySysTickStop
 2146              		.code	16
 2147              		.thumb_func
 2148              		.type	CySysTickStop, %function
 2149              	CySysTickStop:
 2150              	.LFB33:
2814:Generated_Source\PSoC4/CyLib.c **** 
2815:Generated_Source\PSoC4/CyLib.c **** 
2816:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2817:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickStop
2818:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2819:Generated_Source\PSoC4/CyLib.c **** *
2820:Generated_Source\PSoC4/CyLib.c **** *  Stops the system timer (SysTick).
2821:Generated_Source\PSoC4/CyLib.c **** *
2822:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2823:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2824:Generated_Source\PSoC4/CyLib.c **** *
2825:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2826:Generated_Source\PSoC4/CyLib.c **** void CySysTickStop(void)
2827:Generated_Source\PSoC4/CyLib.c **** {
 2151              		.loc 1 2827 0
 2152              		.cfi_startproc
 2153              		@ args = 0, pretend = 0, frame = 0
 2154              		@ frame_needed = 1, uses_anonymous_args = 0
 2155 0000 80B5     		push	{r7, lr}
 2156              		.cfi_def_cfa_offset 8
 2157              		.cfi_offset 7, -8
 2158              		.cfi_offset 14, -4
 2159 0002 00AF     		add	r7, sp, #0
 2160              		.cfi_def_cfa_register 7
2828:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE));
 2161              		.loc 1 2828 0
 2162 0004 044B     		ldr	r3, .L129
 2163 0006 044A     		ldr	r2, .L129
 2164 0008 1268     		ldr	r2, [r2]
 2165 000a 0121     		movs	r1, #1
 2166 000c 8A43     		bics	r2, r1
 2167 000e 1A60     		str	r2, [r3]
2829:Generated_Source\PSoC4/CyLib.c **** }
 2168              		.loc 1 2829 0
 2169 0010 C046     		nop
 2170 0012 BD46     		mov	sp, r7
 2171              		@ sp needed
 2172 0014 80BD     		pop	{r7, pc}
 2173              	.L130:
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccaiT5A1.s 			page 89


 2174 0016 C046     		.align	2
 2175              	.L129:
 2176 0018 10E000E0 		.word	-536813552
 2177              		.cfi_endproc
 2178              	.LFE33:
 2179              		.size	CySysTickStop, .-CySysTickStop
 2180              		.section	.text.CySysTickEnableInterrupt,"ax",%progbits
 2181              		.align	2
 2182              		.global	CySysTickEnableInterrupt
 2183              		.code	16
 2184              		.thumb_func
 2185              		.type	CySysTickEnableInterrupt, %function
 2186              	CySysTickEnableInterrupt:
 2187              	.LFB34:
2830:Generated_Source\PSoC4/CyLib.c **** 
2831:Generated_Source\PSoC4/CyLib.c **** 
2832:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2833:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnableInterrupt
2834:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2835:Generated_Source\PSoC4/CyLib.c **** *
2836:Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick interrupt.
2837:Generated_Source\PSoC4/CyLib.c **** *
2838:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2839:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2840:Generated_Source\PSoC4/CyLib.c **** *
2841:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2842:Generated_Source\PSoC4/CyLib.c **** void CySysTickEnableInterrupt(void)
2843:Generated_Source\PSoC4/CyLib.c **** {
 2188              		.loc 1 2843 0
 2189              		.cfi_startproc
 2190              		@ args = 0, pretend = 0, frame = 0
 2191              		@ frame_needed = 1, uses_anonymous_args = 0
 2192 0000 80B5     		push	{r7, lr}
 2193              		.cfi_def_cfa_offset 8
 2194              		.cfi_offset 7, -8
 2195              		.cfi_offset 14, -4
 2196 0002 00AF     		add	r7, sp, #0
 2197              		.cfi_def_cfa_register 7
2844:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE_INT;
 2198              		.loc 1 2844 0
 2199 0004 044B     		ldr	r3, .L132
 2200 0006 044A     		ldr	r2, .L132
 2201 0008 1268     		ldr	r2, [r2]
 2202 000a 0221     		movs	r1, #2
 2203 000c 0A43     		orrs	r2, r1
 2204 000e 1A60     		str	r2, [r3]
2845:Generated_Source\PSoC4/CyLib.c **** }
 2205              		.loc 1 2845 0
 2206 0010 C046     		nop
 2207 0012 BD46     		mov	sp, r7
 2208              		@ sp needed
 2209 0014 80BD     		pop	{r7, pc}
 2210              	.L133:
 2211 0016 C046     		.align	2
 2212              	.L132:
 2213 0018 10E000E0 		.word	-536813552
 2214              		.cfi_endproc
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccaiT5A1.s 			page 90


 2215              	.LFE34:
 2216              		.size	CySysTickEnableInterrupt, .-CySysTickEnableInterrupt
 2217              		.section	.text.CySysTickDisableInterrupt,"ax",%progbits
 2218              		.align	2
 2219              		.global	CySysTickDisableInterrupt
 2220              		.code	16
 2221              		.thumb_func
 2222              		.type	CySysTickDisableInterrupt, %function
 2223              	CySysTickDisableInterrupt:
 2224              	.LFB35:
2846:Generated_Source\PSoC4/CyLib.c **** 
2847:Generated_Source\PSoC4/CyLib.c **** 
2848:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2849:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickDisableInterrupt
2850:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2851:Generated_Source\PSoC4/CyLib.c **** *
2852:Generated_Source\PSoC4/CyLib.c **** *  Disables the SysTick interrupt.
2853:Generated_Source\PSoC4/CyLib.c **** *
2854:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2855:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2856:Generated_Source\PSoC4/CyLib.c **** *
2857:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2858:Generated_Source\PSoC4/CyLib.c **** void CySysTickDisableInterrupt(void)
2859:Generated_Source\PSoC4/CyLib.c **** {
 2225              		.loc 1 2859 0
 2226              		.cfi_startproc
 2227              		@ args = 0, pretend = 0, frame = 0
 2228              		@ frame_needed = 1, uses_anonymous_args = 0
 2229 0000 80B5     		push	{r7, lr}
 2230              		.cfi_def_cfa_offset 8
 2231              		.cfi_offset 7, -8
 2232              		.cfi_offset 14, -4
 2233 0002 00AF     		add	r7, sp, #0
 2234              		.cfi_def_cfa_register 7
2860:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE_INT));
 2235              		.loc 1 2860 0
 2236 0004 044B     		ldr	r3, .L135
 2237 0006 044A     		ldr	r2, .L135
 2238 0008 1268     		ldr	r2, [r2]
 2239 000a 0221     		movs	r1, #2
 2240 000c 8A43     		bics	r2, r1
 2241 000e 1A60     		str	r2, [r3]
2861:Generated_Source\PSoC4/CyLib.c **** }
 2242              		.loc 1 2861 0
 2243 0010 C046     		nop
 2244 0012 BD46     		mov	sp, r7
 2245              		@ sp needed
 2246 0014 80BD     		pop	{r7, pc}
 2247              	.L136:
 2248 0016 C046     		.align	2
 2249              	.L135:
 2250 0018 10E000E0 		.word	-536813552
 2251              		.cfi_endproc
 2252              	.LFE35:
 2253              		.size	CySysTickDisableInterrupt, .-CySysTickDisableInterrupt
 2254              		.section	.text.CySysTickSetReload,"ax",%progbits
 2255              		.align	2
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccaiT5A1.s 			page 91


 2256              		.global	CySysTickSetReload
 2257              		.code	16
 2258              		.thumb_func
 2259              		.type	CySysTickSetReload, %function
 2260              	CySysTickSetReload:
 2261              	.LFB36:
2862:Generated_Source\PSoC4/CyLib.c **** 
2863:Generated_Source\PSoC4/CyLib.c **** 
2864:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2865:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetReload
2866:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2867:Generated_Source\PSoC4/CyLib.c **** *
2868:Generated_Source\PSoC4/CyLib.c **** *  Sets value the counter is set to on startup and after it reaches zero. This
2869:Generated_Source\PSoC4/CyLib.c **** *  function do not change or reset current sysTick counter value, so it should
2870:Generated_Source\PSoC4/CyLib.c **** *  be cleared using CySysTickClear() API.
2871:Generated_Source\PSoC4/CyLib.c **** *
2872:Generated_Source\PSoC4/CyLib.c **** *  \param value: Valid range [0x0-0x00FFFFFF]. Counter reset value
2873:Generated_Source\PSoC4/CyLib.c **** *
2874:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2875:Generated_Source\PSoC4/CyLib.c **** void CySysTickSetReload(uint32 value)
2876:Generated_Source\PSoC4/CyLib.c **** {
 2262              		.loc 1 2876 0
 2263              		.cfi_startproc
 2264              		@ args = 0, pretend = 0, frame = 8
 2265              		@ frame_needed = 1, uses_anonymous_args = 0
 2266 0000 80B5     		push	{r7, lr}
 2267              		.cfi_def_cfa_offset 8
 2268              		.cfi_offset 7, -8
 2269              		.cfi_offset 14, -4
 2270 0002 82B0     		sub	sp, sp, #8
 2271              		.cfi_def_cfa_offset 16
 2272 0004 00AF     		add	r7, sp, #0
 2273              		.cfi_def_cfa_register 7
 2274 0006 7860     		str	r0, [r7, #4]
2877:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_RVR_REG = (value & CY_SYS_SYST_RVR_CNT_MASK);
 2275              		.loc 1 2877 0
 2276 0008 044B     		ldr	r3, .L138
 2277 000a 7A68     		ldr	r2, [r7, #4]
 2278 000c 1202     		lsls	r2, r2, #8
 2279 000e 120A     		lsrs	r2, r2, #8
 2280 0010 1A60     		str	r2, [r3]
2878:Generated_Source\PSoC4/CyLib.c **** }
 2281              		.loc 1 2878 0
 2282 0012 C046     		nop
 2283 0014 BD46     		mov	sp, r7
 2284 0016 02B0     		add	sp, sp, #8
 2285              		@ sp needed
 2286 0018 80BD     		pop	{r7, pc}
 2287              	.L139:
 2288 001a C046     		.align	2
 2289              	.L138:
 2290 001c 14E000E0 		.word	-536813548
 2291              		.cfi_endproc
 2292              	.LFE36:
 2293              		.size	CySysTickSetReload, .-CySysTickSetReload
 2294              		.section	.text.CySysTickGetReload,"ax",%progbits
 2295              		.align	2
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccaiT5A1.s 			page 92


 2296              		.global	CySysTickGetReload
 2297              		.code	16
 2298              		.thumb_func
 2299              		.type	CySysTickGetReload, %function
 2300              	CySysTickGetReload:
 2301              	.LFB37:
2879:Generated_Source\PSoC4/CyLib.c **** 
2880:Generated_Source\PSoC4/CyLib.c **** 
2881:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2882:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetReload
2883:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2884:Generated_Source\PSoC4/CyLib.c **** *
2885:Generated_Source\PSoC4/CyLib.c **** *  Gets value the counter is set to on startup and after it reaches zero.
2886:Generated_Source\PSoC4/CyLib.c **** *
2887:Generated_Source\PSoC4/CyLib.c **** * \return
2888:Generated_Source\PSoC4/CyLib.c **** *  Counter reset value.
2889:Generated_Source\PSoC4/CyLib.c **** *
2890:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2891:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetReload(void)
2892:Generated_Source\PSoC4/CyLib.c **** {
 2302              		.loc 1 2892 0
 2303              		.cfi_startproc
 2304              		@ args = 0, pretend = 0, frame = 0
 2305              		@ frame_needed = 1, uses_anonymous_args = 0
 2306 0000 80B5     		push	{r7, lr}
 2307              		.cfi_def_cfa_offset 8
 2308              		.cfi_offset 7, -8
 2309              		.cfi_offset 14, -4
 2310 0002 00AF     		add	r7, sp, #0
 2311              		.cfi_def_cfa_register 7
2893:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_RVR_REG & CY_SYS_SYST_RVR_CNT_MASK);
 2312              		.loc 1 2893 0
 2313 0004 034B     		ldr	r3, .L142
 2314 0006 1B68     		ldr	r3, [r3]
 2315 0008 1B02     		lsls	r3, r3, #8
 2316 000a 1B0A     		lsrs	r3, r3, #8
2894:Generated_Source\PSoC4/CyLib.c **** }
 2317              		.loc 1 2894 0
 2318 000c 1800     		movs	r0, r3
 2319 000e BD46     		mov	sp, r7
 2320              		@ sp needed
 2321 0010 80BD     		pop	{r7, pc}
 2322              	.L143:
 2323 0012 C046     		.align	2
 2324              	.L142:
 2325 0014 14E000E0 		.word	-536813548
 2326              		.cfi_endproc
 2327              	.LFE37:
 2328              		.size	CySysTickGetReload, .-CySysTickGetReload
 2329              		.section	.text.CySysTickGetValue,"ax",%progbits
 2330              		.align	2
 2331              		.global	CySysTickGetValue
 2332              		.code	16
 2333              		.thumb_func
 2334              		.type	CySysTickGetValue, %function
 2335              	CySysTickGetValue:
 2336              	.LFB38:
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccaiT5A1.s 			page 93


2895:Generated_Source\PSoC4/CyLib.c **** 
2896:Generated_Source\PSoC4/CyLib.c **** 
2897:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2898:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetValue
2899:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2900:Generated_Source\PSoC4/CyLib.c **** *
2901:Generated_Source\PSoC4/CyLib.c **** *  Gets current SysTick counter value.
2902:Generated_Source\PSoC4/CyLib.c **** *
2903:Generated_Source\PSoC4/CyLib.c **** * \return
2904:Generated_Source\PSoC4/CyLib.c **** *  Current SysTick counter value
2905:Generated_Source\PSoC4/CyLib.c **** *
2906:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2907:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetValue(void)
2908:Generated_Source\PSoC4/CyLib.c **** {
 2337              		.loc 1 2908 0
 2338              		.cfi_startproc
 2339              		@ args = 0, pretend = 0, frame = 0
 2340              		@ frame_needed = 1, uses_anonymous_args = 0
 2341 0000 80B5     		push	{r7, lr}
 2342              		.cfi_def_cfa_offset 8
 2343              		.cfi_offset 7, -8
 2344              		.cfi_offset 14, -4
 2345 0002 00AF     		add	r7, sp, #0
 2346              		.cfi_def_cfa_register 7
2909:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_CVR_REG & CY_SYS_SYST_CVR_CNT_MASK);
 2347              		.loc 1 2909 0
 2348 0004 034B     		ldr	r3, .L146
 2349 0006 1B68     		ldr	r3, [r3]
 2350 0008 1B02     		lsls	r3, r3, #8
 2351 000a 1B0A     		lsrs	r3, r3, #8
2910:Generated_Source\PSoC4/CyLib.c **** }
 2352              		.loc 1 2910 0
 2353 000c 1800     		movs	r0, r3
 2354 000e BD46     		mov	sp, r7
 2355              		@ sp needed
 2356 0010 80BD     		pop	{r7, pc}
 2357              	.L147:
 2358 0012 C046     		.align	2
 2359              	.L146:
 2360 0014 18E000E0 		.word	-536813544
 2361              		.cfi_endproc
 2362              	.LFE38:
 2363              		.size	CySysTickGetValue, .-CySysTickGetValue
 2364              		.section	.text.CySysTickGetCountFlag,"ax",%progbits
 2365              		.align	2
 2366              		.global	CySysTickGetCountFlag
 2367              		.code	16
 2368              		.thumb_func
 2369              		.type	CySysTickGetCountFlag, %function
 2370              	CySysTickGetCountFlag:
 2371              	.LFB39:
2911:Generated_Source\PSoC4/CyLib.c **** 
2912:Generated_Source\PSoC4/CyLib.c **** 
2913:Generated_Source\PSoC4/CyLib.c **** #if(CY_SYSTICK_LFCLK_SOURCE)
2914:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2915:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysTickSetClockSource
2916:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccaiT5A1.s 			page 94


2917:Generated_Source\PSoC4/CyLib.c ****     *
2918:Generated_Source\PSoC4/CyLib.c ****     *  Sets the clock source for the SysTick counter.
2919:Generated_Source\PSoC4/CyLib.c ****     *
2920:Generated_Source\PSoC4/CyLib.c ****     *  Clears SysTick count flag if it was set. If clock source is not ready this
2921:Generated_Source\PSoC4/CyLib.c ****     *  function call will have no effect. After changing clock source to the low
2922:Generated_Source\PSoC4/CyLib.c ****     *  frequency clock the counter and reload register values will remain unchanged
2923:Generated_Source\PSoC4/CyLib.c ****     *  so time to the interrupt will be significantly longer and vice versa.
2924:Generated_Source\PSoC4/CyLib.c ****     *
2925:Generated_Source\PSoC4/CyLib.c ****     *  The changing of SysTick clock source and\or its frequency will change 
2926:Generated_Source\PSoC4/CyLib.c ****     *  the interrupt interval and that CySysTickSetReload() should be 
2927:Generated_Source\PSoC4/CyLib.c ****     *  called to compensate this change.    
2928:Generated_Source\PSoC4/CyLib.c ****     *
2929:Generated_Source\PSoC4/CyLib.c ****     *  The function is not available on PSoC 4000, PSoC 4100, and PSoC 42000
2930:Generated_Source\PSoC4/CyLib.c ****     *  devices. The SysTick timer clocked by the System clock on these devices.
2931:Generated_Source\PSoC4/CyLib.c ****     *
2932:Generated_Source\PSoC4/CyLib.c ****     *  \param clockSource Clock source for SysTick counter
2933:Generated_Source\PSoC4/CyLib.c ****     *         Define                     Clock Source
2934:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_SYSCLK     SysTick is clocked by the CPU clock.
2935:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_LFCLK      SysTick is clocked by the low frequency
2936:Generated_Source\PSoC4/CyLib.c ****     *                                      clock. (ILO 100 KHz for PSoC 5LP, and
2937:Generated_Source\PSoC4/CyLib.c ****     *                                      LFCLK for PSoC 4).
2938:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2939:Generated_Source\PSoC4/CyLib.c ****     void CySysTickSetClockSource(uint32 clockSource)
2940:Generated_Source\PSoC4/CyLib.c ****     {
2941:Generated_Source\PSoC4/CyLib.c ****         if (clockSource == CY_SYS_SYST_CSR_CLK_SRC_SYSCLK)
2942:Generated_Source\PSoC4/CyLib.c ****         {
2943:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG |= (uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SYST_CSR_CLK_S
2944:Generated_Source\PSoC4/CyLib.c ****         }
2945:Generated_Source\PSoC4/CyLib.c ****         else
2946:Generated_Source\PSoC4/CyLib.c ****         {
2947:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG &= ((uint32) ~((uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SY
2948:Generated_Source\PSoC4/CyLib.c ****         }
2949:Generated_Source\PSoC4/CyLib.c ****     }
2950:Generated_Source\PSoC4/CyLib.c **** 
2951:Generated_Source\PSoC4/CyLib.c ****     
2952:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2953:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysTickGetClockSource
2954:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2955:Generated_Source\PSoC4/CyLib.c ****     *
2956:Generated_Source\PSoC4/CyLib.c ****     *  Returns the current clock source of the SysTick counter.
2957:Generated_Source\PSoC4/CyLib.c ****     *
2958:Generated_Source\PSoC4/CyLib.c ****     *  \return 
2959:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_SYSCLK     SysTick is clocked by CPU clock.
2960:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_LFCLK      SysTick is clocked by the low frequency
2961:Generated_Source\PSoC4/CyLib.c ****     *                                      clock. (ILO 100 KHz for PSoC 5LP, and
2962:Generated_Source\PSoC4/CyLib.c ****     *                                      LFCLK for PSoC 4).
2963:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2964:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysTickGetClockSource(void)
2965:Generated_Source\PSoC4/CyLib.c ****     {
2966:Generated_Source\PSoC4/CyLib.c ****         return ((CY_SYS_SYST_CSR_REG >> CY_SYS_SYST_CSR_CLK_SOURCE_SHIFT) & CY_SYS_SYST_CSR_CLK_SRC
2967:Generated_Source\PSoC4/CyLib.c ****     }
2968:Generated_Source\PSoC4/CyLib.c ****     
2969:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
2970:Generated_Source\PSoC4/CyLib.c **** 
2971:Generated_Source\PSoC4/CyLib.c **** 
2972:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2973:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCountFlag
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccaiT5A1.s 			page 95


2974:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2975:Generated_Source\PSoC4/CyLib.c **** *
2976:Generated_Source\PSoC4/CyLib.c **** *  The count flag is set once SysTick counter reaches zero.
2977:Generated_Source\PSoC4/CyLib.c **** *  The flag cleared on read.
2978:Generated_Source\PSoC4/CyLib.c **** *
2979:Generated_Source\PSoC4/CyLib.c **** * \return
2980:Generated_Source\PSoC4/CyLib.c ****     *  Returns non-zero value if flag is set, otherwise zero is returned.
2981:Generated_Source\PSoC4/CyLib.c **** *
2982:Generated_Source\PSoC4/CyLib.c **** *
2983:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2984:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2985:Generated_Source\PSoC4/CyLib.c **** *
2986:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2987:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetCountFlag(void)
2988:Generated_Source\PSoC4/CyLib.c **** {
 2372              		.loc 1 2988 0
 2373              		.cfi_startproc
 2374              		@ args = 0, pretend = 0, frame = 0
 2375              		@ frame_needed = 1, uses_anonymous_args = 0
 2376 0000 80B5     		push	{r7, lr}
 2377              		.cfi_def_cfa_offset 8
 2378              		.cfi_offset 7, -8
 2379              		.cfi_offset 14, -4
 2380 0002 00AF     		add	r7, sp, #0
 2381              		.cfi_def_cfa_register 7
2989:Generated_Source\PSoC4/CyLib.c ****     return ((CY_SYS_SYST_CSR_REG >> CY_SYS_SYST_CSR_COUNTFLAG_SHIFT) & 0x01u);
 2382              		.loc 1 2989 0
 2383 0004 034B     		ldr	r3, .L150
 2384 0006 1B68     		ldr	r3, [r3]
 2385 0008 1B0C     		lsrs	r3, r3, #16
 2386 000a 0122     		movs	r2, #1
 2387 000c 1340     		ands	r3, r2
2990:Generated_Source\PSoC4/CyLib.c **** }
 2388              		.loc 1 2990 0
 2389 000e 1800     		movs	r0, r3
 2390 0010 BD46     		mov	sp, r7
 2391              		@ sp needed
 2392 0012 80BD     		pop	{r7, pc}
 2393              	.L151:
 2394              		.align	2
 2395              	.L150:
 2396 0014 10E000E0 		.word	-536813552
 2397              		.cfi_endproc
 2398              	.LFE39:
 2399              		.size	CySysTickGetCountFlag, .-CySysTickGetCountFlag
 2400              		.section	.text.CySysTickClear,"ax",%progbits
 2401              		.align	2
 2402              		.global	CySysTickClear
 2403              		.code	16
 2404              		.thumb_func
 2405              		.type	CySysTickClear, %function
 2406              	CySysTickClear:
 2407              	.LFB40:
2991:Generated_Source\PSoC4/CyLib.c **** 
2992:Generated_Source\PSoC4/CyLib.c **** 
2993:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2994:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickClear
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccaiT5A1.s 			page 96


2995:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2996:Generated_Source\PSoC4/CyLib.c **** *
2997:Generated_Source\PSoC4/CyLib.c **** *  Clears the SysTick counter for well-defined startup.
2998:Generated_Source\PSoC4/CyLib.c **** *
2999:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3000:Generated_Source\PSoC4/CyLib.c **** void CySysTickClear(void)
3001:Generated_Source\PSoC4/CyLib.c **** {
 2408              		.loc 1 3001 0
 2409              		.cfi_startproc
 2410              		@ args = 0, pretend = 0, frame = 0
 2411              		@ frame_needed = 1, uses_anonymous_args = 0
 2412 0000 80B5     		push	{r7, lr}
 2413              		.cfi_def_cfa_offset 8
 2414              		.cfi_offset 7, -8
 2415              		.cfi_offset 14, -4
 2416 0002 00AF     		add	r7, sp, #0
 2417              		.cfi_def_cfa_register 7
3002:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CVR_REG = 0u;
 2418              		.loc 1 3002 0
 2419 0004 024B     		ldr	r3, .L153
 2420 0006 0022     		movs	r2, #0
 2421 0008 1A60     		str	r2, [r3]
3003:Generated_Source\PSoC4/CyLib.c **** }
 2422              		.loc 1 3003 0
 2423 000a C046     		nop
 2424 000c BD46     		mov	sp, r7
 2425              		@ sp needed
 2426 000e 80BD     		pop	{r7, pc}
 2427              	.L154:
 2428              		.align	2
 2429              	.L153:
 2430 0010 18E000E0 		.word	-536813544
 2431              		.cfi_endproc
 2432              	.LFE40:
 2433              		.size	CySysTickClear, .-CySysTickClear
 2434              		.section	.text.CySysTickSetCallback,"ax",%progbits
 2435              		.align	2
 2436              		.global	CySysTickSetCallback
 2437              		.code	16
 2438              		.thumb_func
 2439              		.type	CySysTickSetCallback, %function
 2440              	CySysTickSetCallback:
 2441              	.LFB41:
3004:Generated_Source\PSoC4/CyLib.c **** 
3005:Generated_Source\PSoC4/CyLib.c **** 
3006:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3007:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetCallback
3008:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3009:Generated_Source\PSoC4/CyLib.c **** *
3010:Generated_Source\PSoC4/CyLib.c **** *  This function allows up to five user-defined interrupt service routine
3011:Generated_Source\PSoC4/CyLib.c **** *  functions to be associated with the SysTick interrupt. These are specified
3012:Generated_Source\PSoC4/CyLib.c **** *  through the use of pointers to the function.
3013:Generated_Source\PSoC4/CyLib.c **** *
3014:Generated_Source\PSoC4/CyLib.c **** *  To set a custom callback function without the overhead of the system provided
3015:Generated_Source\PSoC4/CyLib.c **** *  one, use CyIntSetSysVector(CY_INT_SYSTICK_IRQN, cyisraddress <address>),
3016:Generated_Source\PSoC4/CyLib.c **** *  where <address> is address of the custom defined interrupt service routine.
3017:Generated_Source\PSoC4/CyLib.c **** *  Note: a custom callback function overrides the system defined callback
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccaiT5A1.s 			page 97


3018:Generated_Source\PSoC4/CyLib.c **** *  functions.
3019:Generated_Source\PSoC4/CyLib.c **** *
3020:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the callback function addresses to be set. The valid
3021:Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
3022:Generated_Source\PSoC4/CyLib.c **** *
3023:Generated_Source\PSoC4/CyLib.c **** *  void(*CallbackFunction(void): A pointer to the function that will be
3024:Generated_Source\PSoC4/CyLib.c **** *                                associated with the SysTick ISR for the
3025:Generated_Source\PSoC4/CyLib.c **** *                                specified number.
3026:Generated_Source\PSoC4/CyLib.c **** *
3027:Generated_Source\PSoC4/CyLib.c **** * \return
3028:Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the previous callback function.
3029:Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not set.
3030:Generated_Source\PSoC4/CyLib.c **** *
3031:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
3032:Generated_Source\PSoC4/CyLib.c **** *  The registered callback functions will be executed in the interrupt.
3033:Generated_Source\PSoC4/CyLib.c **** *
3034:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3035:Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickSetCallback(uint32 number, cySysTickCallback function)
3036:Generated_Source\PSoC4/CyLib.c **** {
 2442              		.loc 1 3036 0
 2443              		.cfi_startproc
 2444              		@ args = 0, pretend = 0, frame = 16
 2445              		@ frame_needed = 1, uses_anonymous_args = 0
 2446 0000 80B5     		push	{r7, lr}
 2447              		.cfi_def_cfa_offset 8
 2448              		.cfi_offset 7, -8
 2449              		.cfi_offset 14, -4
 2450 0002 84B0     		sub	sp, sp, #16
 2451              		.cfi_def_cfa_offset 24
 2452 0004 00AF     		add	r7, sp, #0
 2453              		.cfi_def_cfa_register 7
 2454 0006 7860     		str	r0, [r7, #4]
 2455 0008 3960     		str	r1, [r7]
3037:Generated_Source\PSoC4/CyLib.c ****     cySysTickCallback retVal;
3038:Generated_Source\PSoC4/CyLib.c **** 
3039:Generated_Source\PSoC4/CyLib.c ****     retVal = CySysTickCallbacks[number];
 2456              		.loc 1 3039 0
 2457 000a 074B     		ldr	r3, .L157
 2458 000c 7A68     		ldr	r2, [r7, #4]
 2459 000e 9200     		lsls	r2, r2, #2
 2460 0010 D358     		ldr	r3, [r2, r3]
 2461 0012 FB60     		str	r3, [r7, #12]
3040:Generated_Source\PSoC4/CyLib.c ****     CySysTickCallbacks[number] = function;
 2462              		.loc 1 3040 0
 2463 0014 044B     		ldr	r3, .L157
 2464 0016 7A68     		ldr	r2, [r7, #4]
 2465 0018 9200     		lsls	r2, r2, #2
 2466 001a 3968     		ldr	r1, [r7]
 2467 001c D150     		str	r1, [r2, r3]
3041:Generated_Source\PSoC4/CyLib.c ****     return (retVal);
 2468              		.loc 1 3041 0
 2469 001e FB68     		ldr	r3, [r7, #12]
3042:Generated_Source\PSoC4/CyLib.c **** }
 2470              		.loc 1 3042 0
 2471 0020 1800     		movs	r0, r3
 2472 0022 BD46     		mov	sp, r7
 2473 0024 04B0     		add	sp, sp, #16
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccaiT5A1.s 			page 98


 2474              		@ sp needed
 2475 0026 80BD     		pop	{r7, pc}
 2476              	.L158:
 2477              		.align	2
 2478              	.L157:
 2479 0028 00000000 		.word	CySysTickCallbacks
 2480              		.cfi_endproc
 2481              	.LFE41:
 2482              		.size	CySysTickSetCallback, .-CySysTickSetCallback
 2483              		.section	.text.CySysTickGetCallback,"ax",%progbits
 2484              		.align	2
 2485              		.global	CySysTickGetCallback
 2486              		.code	16
 2487              		.thumb_func
 2488              		.type	CySysTickGetCallback, %function
 2489              	CySysTickGetCallback:
 2490              	.LFB42:
3043:Generated_Source\PSoC4/CyLib.c **** 
3044:Generated_Source\PSoC4/CyLib.c **** 
3045:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3046:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCallback
3047:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3048:Generated_Source\PSoC4/CyLib.c **** *
3049:Generated_Source\PSoC4/CyLib.c **** *  The function get the specified callback pointer.
3050:Generated_Source\PSoC4/CyLib.c **** *
3051:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of callback function address to get. The valid
3052:Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
3053:Generated_Source\PSoC4/CyLib.c **** *
3054:Generated_Source\PSoC4/CyLib.c **** * \return
3055:Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the specified callback function.
3056:Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not initialized.
3057:Generated_Source\PSoC4/CyLib.c **** *
3058:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3059:Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickGetCallback(uint32 number)
3060:Generated_Source\PSoC4/CyLib.c **** {
 2491              		.loc 1 3060 0
 2492              		.cfi_startproc
 2493              		@ args = 0, pretend = 0, frame = 8
 2494              		@ frame_needed = 1, uses_anonymous_args = 0
 2495 0000 80B5     		push	{r7, lr}
 2496              		.cfi_def_cfa_offset 8
 2497              		.cfi_offset 7, -8
 2498              		.cfi_offset 14, -4
 2499 0002 82B0     		sub	sp, sp, #8
 2500              		.cfi_def_cfa_offset 16
 2501 0004 00AF     		add	r7, sp, #0
 2502              		.cfi_def_cfa_register 7
 2503 0006 7860     		str	r0, [r7, #4]
3061:Generated_Source\PSoC4/CyLib.c ****     return ((cySysTickCallback) CySysTickCallbacks[number]);
 2504              		.loc 1 3061 0
 2505 0008 034B     		ldr	r3, .L161
 2506 000a 7A68     		ldr	r2, [r7, #4]
 2507 000c 9200     		lsls	r2, r2, #2
 2508 000e D358     		ldr	r3, [r2, r3]
3062:Generated_Source\PSoC4/CyLib.c **** }
 2509              		.loc 1 3062 0
 2510 0010 1800     		movs	r0, r3
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccaiT5A1.s 			page 99


 2511 0012 BD46     		mov	sp, r7
 2512 0014 02B0     		add	sp, sp, #8
 2513              		@ sp needed
 2514 0016 80BD     		pop	{r7, pc}
 2515              	.L162:
 2516              		.align	2
 2517              	.L161:
 2518 0018 00000000 		.word	CySysTickCallbacks
 2519              		.cfi_endproc
 2520              	.LFE42:
 2521              		.size	CySysTickGetCallback, .-CySysTickGetCallback
 2522              		.section	.text.CySysTickServiceCallbacks,"ax",%progbits
 2523              		.align	2
 2524              		.code	16
 2525              		.thumb_func
 2526              		.type	CySysTickServiceCallbacks, %function
 2527              	CySysTickServiceCallbacks:
 2528              	.LFB43:
3063:Generated_Source\PSoC4/CyLib.c **** 
3064:Generated_Source\PSoC4/CyLib.c **** 
3065:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3066:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickServiceCallbacks
3067:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3068:Generated_Source\PSoC4/CyLib.c **** *
3069:Generated_Source\PSoC4/CyLib.c **** *  System Tick timer interrupt routine
3070:Generated_Source\PSoC4/CyLib.c **** *
3071:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3072:Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void)
3073:Generated_Source\PSoC4/CyLib.c **** {
 2529              		.loc 1 3073 0
 2530              		.cfi_startproc
 2531              		@ args = 0, pretend = 0, frame = 8
 2532              		@ frame_needed = 1, uses_anonymous_args = 0
 2533 0000 80B5     		push	{r7, lr}
 2534              		.cfi_def_cfa_offset 8
 2535              		.cfi_offset 7, -8
 2536              		.cfi_offset 14, -4
 2537 0002 82B0     		sub	sp, sp, #8
 2538              		.cfi_def_cfa_offset 16
 2539 0004 00AF     		add	r7, sp, #0
 2540              		.cfi_def_cfa_register 7
3074:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
3075:Generated_Source\PSoC4/CyLib.c **** 
3076:Generated_Source\PSoC4/CyLib.c ****     /* Verify that tick timer flag was set */
3077:Generated_Source\PSoC4/CyLib.c ****     if (1u == CySysTickGetCountFlag())
 2541              		.loc 1 3077 0
 2542 0006 FFF7FEFF 		bl	CySysTickGetCountFlag
 2543 000a 0300     		movs	r3, r0
 2544 000c 012B     		cmp	r3, #1
 2545 000e 13D1     		bne	.L168
3078:Generated_Source\PSoC4/CyLib.c ****     {
3079:Generated_Source\PSoC4/CyLib.c ****         for (i=0u; i < CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
 2546              		.loc 1 3079 0
 2547 0010 0023     		movs	r3, #0
 2548 0012 7B60     		str	r3, [r7, #4]
 2549 0014 0DE0     		b	.L165
 2550              	.L167:
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccaiT5A1.s 			page 100


3080:Generated_Source\PSoC4/CyLib.c ****         {
3081:Generated_Source\PSoC4/CyLib.c ****             if (CySysTickCallbacks[i] != (void *) 0)
 2551              		.loc 1 3081 0
 2552 0016 0A4B     		ldr	r3, .L169
 2553 0018 7A68     		ldr	r2, [r7, #4]
 2554 001a 9200     		lsls	r2, r2, #2
 2555 001c D358     		ldr	r3, [r2, r3]
 2556 001e 002B     		cmp	r3, #0
 2557 0020 04D0     		beq	.L166
3082:Generated_Source\PSoC4/CyLib.c ****             {
3083:Generated_Source\PSoC4/CyLib.c ****                 (void)(CySysTickCallbacks[i])();
 2558              		.loc 1 3083 0
 2559 0022 074B     		ldr	r3, .L169
 2560 0024 7A68     		ldr	r2, [r7, #4]
 2561 0026 9200     		lsls	r2, r2, #2
 2562 0028 D358     		ldr	r3, [r2, r3]
 2563 002a 9847     		blx	r3
 2564              	.L166:
3079:Generated_Source\PSoC4/CyLib.c ****         {
 2565              		.loc 1 3079 0 discriminator 2
 2566 002c 7B68     		ldr	r3, [r7, #4]
 2567 002e 0133     		adds	r3, r3, #1
 2568 0030 7B60     		str	r3, [r7, #4]
 2569              	.L165:
3079:Generated_Source\PSoC4/CyLib.c ****         {
 2570              		.loc 1 3079 0 is_stmt 0 discriminator 1
 2571 0032 7B68     		ldr	r3, [r7, #4]
 2572 0034 042B     		cmp	r3, #4
 2573 0036 EED9     		bls	.L167
 2574              	.L168:
3084:Generated_Source\PSoC4/CyLib.c ****             }
3085:Generated_Source\PSoC4/CyLib.c ****         }
3086:Generated_Source\PSoC4/CyLib.c ****     }
3087:Generated_Source\PSoC4/CyLib.c **** }
 2575              		.loc 1 3087 0 is_stmt 1
 2576 0038 C046     		nop
 2577 003a BD46     		mov	sp, r7
 2578 003c 02B0     		add	sp, sp, #8
 2579              		@ sp needed
 2580 003e 80BD     		pop	{r7, pc}
 2581              	.L170:
 2582              		.align	2
 2583              	.L169:
 2584 0040 00000000 		.word	CySysTickCallbacks
 2585              		.cfi_endproc
 2586              	.LFE43:
 2587              		.size	CySysTickServiceCallbacks, .-CySysTickServiceCallbacks
 2588              		.section	.text.CyGetUniqueId,"ax",%progbits
 2589              		.align	2
 2590              		.global	CyGetUniqueId
 2591              		.code	16
 2592              		.thumb_func
 2593              		.type	CyGetUniqueId, %function
 2594              	CyGetUniqueId:
 2595              	.LFB44:
3088:Generated_Source\PSoC4/CyLib.c **** 
3089:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccaiT5A1.s 			page 101


3090:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
3091:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyGetUniqueId
3092:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
3093:Generated_Source\PSoC4/CyLib.c **** *
3094:Generated_Source\PSoC4/CyLib.c **** *  Returns the 64-bit unique ID of the device. The uniqueness of the number is
3095:Generated_Source\PSoC4/CyLib.c **** *  guaranteed for 10 years due to the die lot number having a cycle life of 10
3096:Generated_Source\PSoC4/CyLib.c **** *  years and even after 10 years, the probability of getting two identical
3097:Generated_Source\PSoC4/CyLib.c **** *  numbers is very small.
3098:Generated_Source\PSoC4/CyLib.c **** *
3099:Generated_Source\PSoC4/CyLib.c **** *  \param uniqueId: The pointer to a two element 32-bit unsigned integer array. Returns
3100:Generated_Source\PSoC4/CyLib.c **** *  the 64-bit unique ID of the device by loading them into the integer array
3101:Generated_Source\PSoC4/CyLib.c **** *  pointed to by uniqueId.
3102:Generated_Source\PSoC4/CyLib.c **** *
3103:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
3104:Generated_Source\PSoC4/CyLib.c **** void CyGetUniqueId(uint32* uniqueId)
3105:Generated_Source\PSoC4/CyLib.c **** {
 2596              		.loc 1 3105 0
 2597              		.cfi_startproc
 2598              		@ args = 0, pretend = 0, frame = 8
 2599              		@ frame_needed = 1, uses_anonymous_args = 0
 2600 0000 80B5     		push	{r7, lr}
 2601              		.cfi_def_cfa_offset 8
 2602              		.cfi_offset 7, -8
 2603              		.cfi_offset 14, -4
 2604 0002 82B0     		sub	sp, sp, #8
 2605              		.cfi_def_cfa_offset 16
 2606 0004 00AF     		add	r7, sp, #0
 2607              		.cfi_def_cfa_register 7
 2608 0006 7860     		str	r0, [r7, #4]
3106:Generated_Source\PSoC4/CyLib.c **** #if(CY_PSOC4)
3107:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT0  );
 2609              		.loc 1 3107 0
 2610 0008 254B     		ldr	r3, .L172
 2611 000a 1B78     		ldrb	r3, [r3]
 2612 000c DBB2     		uxtb	r3, r3
 2613 000e 1A00     		movs	r2, r3
 2614 0010 7B68     		ldr	r3, [r7, #4]
 2615 0012 1A60     		str	r2, [r3]
3108:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
 2616              		.loc 1 3108 0
 2617 0014 234B     		ldr	r3, .L172+4
 2618 0016 1B78     		ldrb	r3, [r3]
 2619 0018 DBB2     		uxtb	r3, r3
 2620 001a 1A02     		lsls	r2, r3, #8
 2621 001c 7B68     		ldr	r3, [r7, #4]
 2622 001e 1B68     		ldr	r3, [r3]
 2623 0020 1A43     		orrs	r2, r3
 2624 0022 7B68     		ldr	r3, [r7, #4]
 2625 0024 1A60     		str	r2, [r3]
3109:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT2  ) << 16u);
 2626              		.loc 1 3109 0
 2627 0026 204B     		ldr	r3, .L172+8
 2628 0028 1B78     		ldrb	r3, [r3]
 2629 002a DBB2     		uxtb	r3, r3
 2630 002c 1A04     		lsls	r2, r3, #16
 2631 002e 7B68     		ldr	r3, [r7, #4]
 2632 0030 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccaiT5A1.s 			page 102


 2633 0032 1A43     		orrs	r2, r3
 2634 0034 7B68     		ldr	r3, [r7, #4]
 2635 0036 1A60     		str	r2, [r3]
3110:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_WAFER ) << 24u);
 2636              		.loc 1 3110 0
 2637 0038 1C4B     		ldr	r3, .L172+12
 2638 003a 1B78     		ldrb	r3, [r3]
 2639 003c DBB2     		uxtb	r3, r3
 2640 003e 1A06     		lsls	r2, r3, #24
 2641 0040 7B68     		ldr	r3, [r7, #4]
 2642 0042 1B68     		ldr	r3, [r3]
 2643 0044 1A43     		orrs	r2, r3
 2644 0046 7B68     		ldr	r3, [r7, #4]
 2645 0048 1A60     		str	r2, [r3]
3111:Generated_Source\PSoC4/CyLib.c **** 
3112:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_X     );
 2646              		.loc 1 3112 0
 2647 004a 7B68     		ldr	r3, [r7, #4]
 2648 004c 0433     		adds	r3, r3, #4
 2649 004e 184A     		ldr	r2, .L172+16
 2650 0050 1278     		ldrb	r2, [r2]
 2651 0052 D2B2     		uxtb	r2, r2
 2652 0054 1A60     		str	r2, [r3]
3113:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_Y     ) <<  8u);
 2653              		.loc 1 3113 0
 2654 0056 174B     		ldr	r3, .L172+20
 2655 0058 1B78     		ldrb	r3, [r3]
 2656 005a DBB2     		uxtb	r3, r3
 2657 005c 1902     		lsls	r1, r3, #8
 2658 005e 7B68     		ldr	r3, [r7, #4]
 2659 0060 0433     		adds	r3, r3, #4
 2660 0062 7A68     		ldr	r2, [r7, #4]
 2661 0064 0432     		adds	r2, r2, #4
 2662 0066 1268     		ldr	r2, [r2]
 2663 0068 0A43     		orrs	r2, r1
 2664 006a 1A60     		str	r2, [r3]
3114:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_SORT  ) << 16u);
 2665              		.loc 1 3114 0
 2666 006c 124B     		ldr	r3, .L172+24
 2667 006e 1B78     		ldrb	r3, [r3]
 2668 0070 DBB2     		uxtb	r3, r3
 2669 0072 1904     		lsls	r1, r3, #16
 2670 0074 7B68     		ldr	r3, [r7, #4]
 2671 0076 0433     		adds	r3, r3, #4
 2672 0078 7A68     		ldr	r2, [r7, #4]
 2673 007a 0432     		adds	r2, r2, #4
 2674 007c 1268     		ldr	r2, [r2]
 2675 007e 0A43     		orrs	r2, r1
 2676 0080 1A60     		str	r2, [r3]
3115:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_MINOR ) << 24u);
 2677              		.loc 1 3115 0
 2678 0082 0E4B     		ldr	r3, .L172+28
 2679 0084 1B78     		ldrb	r3, [r3]
 2680 0086 DBB2     		uxtb	r3, r3
 2681 0088 1906     		lsls	r1, r3, #24
 2682 008a 7B68     		ldr	r3, [r7, #4]
 2683 008c 0433     		adds	r3, r3, #4
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccaiT5A1.s 			page 103


 2684 008e 7A68     		ldr	r2, [r7, #4]
 2685 0090 0432     		adds	r2, r2, #4
 2686 0092 1268     		ldr	r2, [r2]
 2687 0094 0A43     		orrs	r2, r1
 2688 0096 1A60     		str	r2, [r3]
3116:Generated_Source\PSoC4/CyLib.c **** #else
3117:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_LSB   )
3118:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_MSB   )
3119:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_MLOGIC_REV_ID                )
3120:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WAFER_NUM )
3121:Generated_Source\PSoC4/CyLib.c **** 
3122:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_X_LOC     )
3123:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_Y_LOC     )
3124:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WRK_WK    )
3125:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_FAB_YR    )
3126:Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_PSOC4) */
3127:Generated_Source\PSoC4/CyLib.c **** }
 2689              		.loc 1 3127 0
 2690 0098 C046     		nop
 2691 009a BD46     		mov	sp, r7
 2692 009c 02B0     		add	sp, sp, #8
 2693              		@ sp needed
 2694 009e 80BD     		pop	{r7, pc}
 2695              	.L173:
 2696              		.align	2
 2697              	.L172:
 2698 00a0 78F1FF0F 		.word	268431736
 2699 00a4 79F1FF0F 		.word	268431737
 2700 00a8 7AF1FF0F 		.word	268431738
 2701 00ac 7BF1FF0F 		.word	268431739
 2702 00b0 7CF1FF0F 		.word	268431740
 2703 00b4 7DF1FF0F 		.word	268431741
 2704 00b8 7EF1FF0F 		.word	268431742
 2705 00bc 7FF1FF0F 		.word	268431743
 2706              		.cfi_endproc
 2707              	.LFE44:
 2708              		.size	CyGetUniqueId, .-CyGetUniqueId
 2709              		.text
 2710              	.Letext0:
 2711              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 2712              		.file 3 "Generated_Source\\PSoC4\\CyLib.h"
 2713              		.section	.debug_info,"",%progbits
 2714              	.Ldebug_info0:
 2715 0000 DC080000 		.4byte	0x8dc
 2716 0004 0400     		.2byte	0x4
 2717 0006 00000000 		.4byte	.Ldebug_abbrev0
 2718 000a 04       		.byte	0x4
 2719 000b 01       		.uleb128 0x1
 2720 000c 45030000 		.4byte	.LASF101
 2721 0010 0C       		.byte	0xc
 2722 0011 38060000 		.4byte	.LASF102
 2723 0015 6F000000 		.4byte	.LASF103
 2724 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2725 001d 00000000 		.4byte	0
 2726 0021 00000000 		.4byte	.Ldebug_line0
 2727 0025 02       		.uleb128 0x2
 2728 0026 01       		.byte	0x1
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccaiT5A1.s 			page 104


 2729 0027 06       		.byte	0x6
 2730 0028 5D010000 		.4byte	.LASF0
 2731 002c 02       		.uleb128 0x2
 2732 002d 01       		.byte	0x1
 2733 002e 08       		.byte	0x8
 2734 002f 04050000 		.4byte	.LASF1
 2735 0033 02       		.uleb128 0x2
 2736 0034 02       		.byte	0x2
 2737 0035 05       		.byte	0x5
 2738 0036 12050000 		.4byte	.LASF2
 2739 003a 02       		.uleb128 0x2
 2740 003b 02       		.byte	0x2
 2741 003c 07       		.byte	0x7
 2742 003d FE020000 		.4byte	.LASF3
 2743 0041 02       		.uleb128 0x2
 2744 0042 04       		.byte	0x4
 2745 0043 05       		.byte	0x5
 2746 0044 9C010000 		.4byte	.LASF4
 2747 0048 02       		.uleb128 0x2
 2748 0049 04       		.byte	0x4
 2749 004a 07       		.byte	0x7
 2750 004b 9D020000 		.4byte	.LASF5
 2751 004f 02       		.uleb128 0x2
 2752 0050 08       		.byte	0x8
 2753 0051 05       		.byte	0x5
 2754 0052 4F010000 		.4byte	.LASF6
 2755 0056 02       		.uleb128 0x2
 2756 0057 08       		.byte	0x8
 2757 0058 07       		.byte	0x7
 2758 0059 E3000000 		.4byte	.LASF7
 2759 005d 03       		.uleb128 0x3
 2760 005e 04       		.byte	0x4
 2761 005f 05       		.byte	0x5
 2762 0060 696E7400 		.ascii	"int\000"
 2763 0064 02       		.uleb128 0x2
 2764 0065 04       		.byte	0x4
 2765 0066 07       		.byte	0x7
 2766 0067 81020000 		.4byte	.LASF8
 2767 006b 04       		.uleb128 0x4
 2768 006c C7010000 		.4byte	.LASF9
 2769 0070 02       		.byte	0x2
 2770 0071 E401     		.2byte	0x1e4
 2771 0073 2C000000 		.4byte	0x2c
 2772 0077 04       		.uleb128 0x4
 2773 0078 17000000 		.4byte	.LASF10
 2774 007c 02       		.byte	0x2
 2775 007d E501     		.2byte	0x1e5
 2776 007f 3A000000 		.4byte	0x3a
 2777 0083 04       		.uleb128 0x4
 2778 0084 07020000 		.4byte	.LASF11
 2779 0088 02       		.byte	0x2
 2780 0089 E601     		.2byte	0x1e6
 2781 008b 48000000 		.4byte	0x48
 2782 008f 02       		.uleb128 0x2
 2783 0090 04       		.byte	0x4
 2784 0091 04       		.byte	0x4
 2785 0092 AB040000 		.4byte	.LASF12
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccaiT5A1.s 			page 105


 2786 0096 02       		.uleb128 0x2
 2787 0097 08       		.byte	0x8
 2788 0098 04       		.byte	0x4
 2789 0099 E3010000 		.4byte	.LASF13
 2790 009d 02       		.uleb128 0x2
 2791 009e 01       		.byte	0x1
 2792 009f 08       		.byte	0x8
 2793 00a0 55050000 		.4byte	.LASF14
 2794 00a4 04       		.uleb128 0x4
 2795 00a5 EE040000 		.4byte	.LASF15
 2796 00a9 02       		.byte	0x2
 2797 00aa 8E02     		.2byte	0x28e
 2798 00ac B0000000 		.4byte	0xb0
 2799 00b0 05       		.uleb128 0x5
 2800 00b1 6B000000 		.4byte	0x6b
 2801 00b5 04       		.uleb128 0x4
 2802 00b6 FA030000 		.4byte	.LASF16
 2803 00ba 02       		.byte	0x2
 2804 00bb 9002     		.2byte	0x290
 2805 00bd C1000000 		.4byte	0xc1
 2806 00c1 05       		.uleb128 0x5
 2807 00c2 83000000 		.4byte	0x83
 2808 00c6 04       		.uleb128 0x4
 2809 00c7 5A050000 		.4byte	.LASF17
 2810 00cb 02       		.byte	0x2
 2811 00cc A002     		.2byte	0x2a0
 2812 00ce D2000000 		.4byte	0xd2
 2813 00d2 06       		.uleb128 0x6
 2814 00d3 04       		.byte	0x4
 2815 00d4 D8000000 		.4byte	0xd8
 2816 00d8 07       		.uleb128 0x7
 2817 00d9 02       		.uleb128 0x2
 2818 00da 08       		.byte	0x8
 2819 00db 04       		.byte	0x4
 2820 00dc 37040000 		.4byte	.LASF18
 2821 00e0 02       		.uleb128 0x2
 2822 00e1 04       		.byte	0x4
 2823 00e2 07       		.byte	0x7
 2824 00e3 1C040000 		.4byte	.LASF19
 2825 00e7 08       		.uleb128 0x8
 2826 00e8 C0040000 		.4byte	.LASF20
 2827 00ec 03       		.byte	0x3
 2828 00ed F5       		.byte	0xf5
 2829 00ee D2000000 		.4byte	0xd2
 2830 00f2 09       		.uleb128 0x9
 2831 00f3 16060000 		.4byte	.LASF21
 2832 00f7 01       		.byte	0x1
 2833 00f8 6C       		.byte	0x6c
 2834 00f9 00000000 		.4byte	.LFB0
 2835 00fd 1C000000 		.4byte	.LFE0-.LFB0
 2836 0101 01       		.uleb128 0x1
 2837 0102 9C       		.byte	0x9c
 2838 0103 09       		.uleb128 0x9
 2839 0104 CA020000 		.4byte	.LASF22
 2840 0108 01       		.byte	0x1
 2841 0109 8C       		.byte	0x8c
 2842 010a 00000000 		.4byte	.LFB1
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccaiT5A1.s 			page 106


 2843 010e 1C000000 		.4byte	.LFE1-.LFB1
 2844 0112 01       		.uleb128 0x1
 2845 0113 9C       		.byte	0x9c
 2846 0114 0A       		.uleb128 0xa
 2847 0115 27000000 		.4byte	.LASF25
 2848 0119 01       		.byte	0x1
 2849 011a 0102     		.2byte	0x201
 2850 011c 00000000 		.4byte	.LFB2
 2851 0120 48000000 		.4byte	.LFE2-.LFB2
 2852 0124 01       		.uleb128 0x1
 2853 0125 9C       		.byte	0x9c
 2854 0126 58010000 		.4byte	0x158
 2855 012a 0B       		.uleb128 0xb
 2856 012b 3A050000 		.4byte	.LASF27
 2857 012f 01       		.byte	0x1
 2858 0130 0102     		.2byte	0x201
 2859 0132 83000000 		.4byte	0x83
 2860 0136 02       		.uleb128 0x2
 2861 0137 91       		.byte	0x91
 2862 0138 64       		.sleb128 -28
 2863 0139 0C       		.uleb128 0xc
 2864 013a 7A010000 		.4byte	.LASF23
 2865 013e 01       		.byte	0x1
 2866 013f 0302     		.2byte	0x203
 2867 0141 6B000000 		.4byte	0x6b
 2868 0145 02       		.uleb128 0x2
 2869 0146 91       		.byte	0x91
 2870 0147 6F       		.sleb128 -17
 2871 0148 0C       		.uleb128 0xc
 2872 0149 64060000 		.4byte	.LASF24
 2873 014d 01       		.byte	0x1
 2874 014e 0402     		.2byte	0x204
 2875 0150 83000000 		.4byte	0x83
 2876 0154 02       		.uleb128 0x2
 2877 0155 91       		.byte	0x91
 2878 0156 68       		.sleb128 -24
 2879 0157 00       		.byte	0
 2880 0158 0D       		.uleb128 0xd
 2881 0159 E5030000 		.4byte	.LASF26
 2882 015d 01       		.byte	0x1
 2883 015e 4902     		.2byte	0x249
 2884 0160 00000000 		.4byte	.LFB3
 2885 0164 50000000 		.4byte	.LFE3-.LFB3
 2886 0168 01       		.uleb128 0x1
 2887 0169 9C       		.byte	0x9c
 2888 016a 7E010000 		.4byte	0x17e
 2889 016e 0B       		.uleb128 0xb
 2890 016f DC010000 		.4byte	.LASF28
 2891 0173 01       		.byte	0x1
 2892 0174 4902     		.2byte	0x249
 2893 0176 83000000 		.4byte	0x83
 2894 017a 02       		.uleb128 0x2
 2895 017b 91       		.byte	0x91
 2896 017c 74       		.sleb128 -12
 2897 017d 00       		.byte	0
 2898 017e 0E       		.uleb128 0xe
 2899 017f 13020000 		.4byte	.LASF42
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccaiT5A1.s 			page 107


 2900 0183 01       		.byte	0x1
 2901 0184 6E02     		.2byte	0x26e
 2902 0186 83000000 		.4byte	0x83
 2903 018a 00000000 		.4byte	.LFB4
 2904 018e 34000000 		.4byte	.LFE4-.LFB4
 2905 0192 01       		.uleb128 0x1
 2906 0193 9C       		.byte	0x9c
 2907 0194 B7010000 		.4byte	0x1b7
 2908 0198 0C       		.uleb128 0xc
 2909 0199 7A010000 		.4byte	.LASF23
 2910 019d 01       		.byte	0x1
 2911 019e 7002     		.2byte	0x270
 2912 01a0 6B000000 		.4byte	0x6b
 2913 01a4 02       		.uleb128 0x2
 2914 01a5 91       		.byte	0x91
 2915 01a6 6F       		.sleb128 -17
 2916 01a7 0C       		.uleb128 0xc
 2917 01a8 53040000 		.4byte	.LASF29
 2918 01ac 01       		.byte	0x1
 2919 01ad 7102     		.2byte	0x271
 2920 01af 83000000 		.4byte	0x83
 2921 01b3 02       		.uleb128 0x2
 2922 01b4 91       		.byte	0x91
 2923 01b5 68       		.sleb128 -24
 2924 01b6 00       		.byte	0
 2925 01b7 0A       		.uleb128 0xa
 2926 01b8 77050000 		.4byte	.LASF30
 2927 01bc 01       		.byte	0x1
 2928 01bd AB02     		.2byte	0x2ab
 2929 01bf 00000000 		.4byte	.LFB5
 2930 01c3 48000000 		.4byte	.LFE5-.LFB5
 2931 01c7 01       		.uleb128 0x1
 2932 01c8 9C       		.byte	0x9c
 2933 01c9 EC010000 		.4byte	0x1ec
 2934 01cd 0B       		.uleb128 0xb
 2935 01ce 0E060000 		.4byte	.LASF31
 2936 01d2 01       		.byte	0x1
 2937 01d3 AB02     		.2byte	0x2ab
 2938 01d5 83000000 		.4byte	0x83
 2939 01d9 02       		.uleb128 0x2
 2940 01da 91       		.byte	0x91
 2941 01db 64       		.sleb128 -28
 2942 01dc 0C       		.uleb128 0xc
 2943 01dd 7A010000 		.4byte	.LASF23
 2944 01e1 01       		.byte	0x1
 2945 01e2 AD02     		.2byte	0x2ad
 2946 01e4 6B000000 		.4byte	0x6b
 2947 01e8 02       		.uleb128 0x2
 2948 01e9 91       		.byte	0x91
 2949 01ea 6F       		.sleb128 -17
 2950 01eb 00       		.byte	0
 2951 01ec 0A       		.uleb128 0xa
 2952 01ed 30030000 		.4byte	.LASF32
 2953 01f1 01       		.byte	0x1
 2954 01f2 E502     		.2byte	0x2e5
 2955 01f4 00000000 		.4byte	.LFB6
 2956 01f8 E4010000 		.4byte	.LFE6-.LFB6
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccaiT5A1.s 			page 108


 2957 01fc 01       		.uleb128 0x1
 2958 01fd 9C       		.byte	0x9c
 2959 01fe 5D020000 		.4byte	0x25d
 2960 0202 0B       		.uleb128 0xb
 2961 0203 69010000 		.4byte	.LASF33
 2962 0207 01       		.byte	0x1
 2963 0208 E502     		.2byte	0x2e5
 2964 020a 83000000 		.4byte	0x83
 2965 020e 02       		.uleb128 0x2
 2966 020f 91       		.byte	0x91
 2967 0210 64       		.sleb128 -28
 2968 0211 0C       		.uleb128 0xc
 2969 0212 0F000000 		.4byte	.LASF34
 2970 0216 01       		.byte	0x1
 2971 0217 EB02     		.2byte	0x2eb
 2972 0219 6B000000 		.4byte	0x6b
 2973 021d 02       		.uleb128 0x2
 2974 021e 91       		.byte	0x91
 2975 021f 6F       		.sleb128 -17
 2976 0220 0C       		.uleb128 0xc
 2977 0221 4B040000 		.4byte	.LASF35
 2978 0225 01       		.byte	0x1
 2979 0226 EC02     		.2byte	0x2ec
 2980 0228 6B000000 		.4byte	0x6b
 2981 022c 02       		.uleb128 0x2
 2982 022d 91       		.byte	0x91
 2983 022e 6E       		.sleb128 -18
 2984 022f 0C       		.uleb128 0xc
 2985 0230 27060000 		.4byte	.LASF36
 2986 0234 01       		.byte	0x1
 2987 0235 ED02     		.2byte	0x2ed
 2988 0237 6B000000 		.4byte	0x6b
 2989 023b 02       		.uleb128 0x2
 2990 023c 91       		.byte	0x91
 2991 023d 6B       		.sleb128 -21
 2992 023e 0C       		.uleb128 0xc
 2993 023f CE000000 		.4byte	.LASF37
 2994 0243 01       		.byte	0x1
 2995 0244 EE02     		.2byte	0x2ee
 2996 0246 6B000000 		.4byte	0x6b
 2997 024a 02       		.uleb128 0x2
 2998 024b 91       		.byte	0x91
 2999 024c 6D       		.sleb128 -19
 3000 024d 0C       		.uleb128 0xc
 3001 024e 7A010000 		.4byte	.LASF23
 3002 0252 01       		.byte	0x1
 3003 0253 F902     		.2byte	0x2f9
 3004 0255 6B000000 		.4byte	0x6b
 3005 0259 02       		.uleb128 0x2
 3006 025a 91       		.byte	0x91
 3007 025b 6C       		.sleb128 -20
 3008 025c 00       		.byte	0
 3009 025d 0A       		.uleb128 0xa
 3010 025e B1040000 		.4byte	.LASF38
 3011 0262 01       		.byte	0x1
 3012 0263 C008     		.2byte	0x8c0
 3013 0265 00000000 		.4byte	.LFB7
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccaiT5A1.s 			page 109


 3014 0269 64000000 		.4byte	.LFE7-.LFB7
 3015 026d 01       		.uleb128 0x1
 3016 026e 9C       		.byte	0x9c
 3017 026f 83020000 		.4byte	0x283
 3018 0273 0B       		.uleb128 0xb
 3019 0274 F3040000 		.4byte	.LASF39
 3020 0278 01       		.byte	0x1
 3021 0279 C008     		.2byte	0x8c0
 3022 027b 83000000 		.4byte	0x83
 3023 027f 02       		.uleb128 0x2
 3024 0280 91       		.byte	0x91
 3025 0281 74       		.sleb128 -12
 3026 0282 00       		.byte	0
 3027 0283 0F       		.uleb128 0xf
 3028 0284 E1050000 		.4byte	.LASF40
 3029 0288 01       		.byte	0x1
 3030 0289 DE08     		.2byte	0x8de
 3031 028b 00000000 		.4byte	.LFB8
 3032 028f 2C000000 		.4byte	.LFE8-.LFB8
 3033 0293 01       		.uleb128 0x1
 3034 0294 9C       		.byte	0x9c
 3035 0295 10       		.uleb128 0x10
 3036 0296 AF020000 		.4byte	.LASF82
 3037 029a 01       		.byte	0x1
 3038 029b F008     		.2byte	0x8f0
 3039 029d 83000000 		.4byte	0x83
 3040 02a1 00000000 		.4byte	.LFB9
 3041 02a5 18000000 		.4byte	.LFE9-.LFB9
 3042 02a9 01       		.uleb128 0x1
 3043 02aa 9C       		.byte	0x9c
 3044 02ab 0F       		.uleb128 0xf
 3045 02ac F0010000 		.4byte	.LASF41
 3046 02b0 01       		.byte	0x1
 3047 02b1 0009     		.2byte	0x900
 3048 02b3 00000000 		.4byte	.LFB10
 3049 02b7 14000000 		.4byte	.LFE10-.LFB10
 3050 02bb 01       		.uleb128 0x1
 3051 02bc 9C       		.byte	0x9c
 3052 02bd 11       		.uleb128 0x11
 3053 02be EA020000 		.4byte	.LASF43
 3054 02c2 01       		.byte	0x1
 3055 02c3 1A09     		.2byte	0x91a
 3056 02c5 83000000 		.4byte	0x83
 3057 02c9 00000000 		.4byte	.LFB11
 3058 02cd 30000000 		.4byte	.LFE11-.LFB11
 3059 02d1 01       		.uleb128 0x1
 3060 02d2 9C       		.byte	0x9c
 3061 02d3 F6020000 		.4byte	0x2f6
 3062 02d7 0B       		.uleb128 0xb
 3063 02d8 4E050000 		.4byte	.LASF44
 3064 02dc 01       		.byte	0x1
 3065 02dd 1A09     		.2byte	0x91a
 3066 02df 83000000 		.4byte	0x83
 3067 02e3 02       		.uleb128 0x2
 3068 02e4 91       		.byte	0x91
 3069 02e5 6C       		.sleb128 -20
 3070 02e6 0C       		.uleb128 0xc
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccaiT5A1.s 			page 110


 3071 02e7 0F040000 		.4byte	.LASF45
 3072 02eb 01       		.byte	0x1
 3073 02ec 1C09     		.2byte	0x91c
 3074 02ee 83000000 		.4byte	0x83
 3075 02f2 02       		.uleb128 0x2
 3076 02f3 91       		.byte	0x91
 3077 02f4 74       		.sleb128 -12
 3078 02f5 00       		.byte	0
 3079 02f6 11       		.uleb128 0x11
 3080 02f7 61000000 		.4byte	.LASF46
 3081 02fb 01       		.byte	0x1
 3082 02fc 3109     		.2byte	0x931
 3083 02fe 83000000 		.4byte	0x83
 3084 0302 00000000 		.4byte	.LFB12
 3085 0306 24000000 		.4byte	.LFE12-.LFB12
 3086 030a 01       		.uleb128 0x1
 3087 030b 9C       		.byte	0x9c
 3088 030c 20030000 		.4byte	0x320
 3089 0310 0C       		.uleb128 0xc
 3090 0311 1E000000 		.4byte	.LASF47
 3091 0315 01       		.byte	0x1
 3092 0316 3309     		.2byte	0x933
 3093 0318 83000000 		.4byte	0x83
 3094 031c 02       		.uleb128 0x2
 3095 031d 91       		.byte	0x91
 3096 031e 74       		.sleb128 -12
 3097 031f 00       		.byte	0
 3098 0320 0D       		.uleb128 0xd
 3099 0321 0B010000 		.4byte	.LASF48
 3100 0325 01       		.byte	0x1
 3101 0326 4809     		.2byte	0x948
 3102 0328 00000000 		.4byte	.LFB13
 3103 032c 1C000000 		.4byte	.LFE13-.LFB13
 3104 0330 01       		.uleb128 0x1
 3105 0331 9C       		.byte	0x9c
 3106 0332 46030000 		.4byte	0x346
 3107 0336 0B       		.uleb128 0xb
 3108 0337 0E020000 		.4byte	.LASF49
 3109 033b 01       		.byte	0x1
 3110 033c 4809     		.2byte	0x948
 3111 033e 83000000 		.4byte	0x83
 3112 0342 02       		.uleb128 0x2
 3113 0343 91       		.byte	0x91
 3114 0344 74       		.sleb128 -12
 3115 0345 00       		.byte	0
 3116 0346 0E       		.uleb128 0xe
 3117 0347 D3030000 		.4byte	.LASF50
 3118 034b 01       		.byte	0x1
 3119 034c 6109     		.2byte	0x961
 3120 034e C6000000 		.4byte	0xc6
 3121 0352 00000000 		.4byte	.LFB14
 3122 0356 48000000 		.4byte	.LFE14-.LFB14
 3123 035a 01       		.uleb128 0x1
 3124 035b 9C       		.byte	0x9c
 3125 035c 9D030000 		.4byte	0x39d
 3126 0360 0B       		.uleb128 0xb
 3127 0361 20030000 		.4byte	.LASF51
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccaiT5A1.s 			page 111


 3128 0365 01       		.byte	0x1
 3129 0366 6109     		.2byte	0x961
 3130 0368 6B000000 		.4byte	0x6b
 3131 036c 02       		.uleb128 0x2
 3132 036d 91       		.byte	0x91
 3133 036e 6F       		.sleb128 -17
 3134 036f 0B       		.uleb128 0xb
 3135 0370 43040000 		.4byte	.LASF52
 3136 0374 01       		.byte	0x1
 3137 0375 6109     		.2byte	0x961
 3138 0377 C6000000 		.4byte	0xc6
 3139 037b 02       		.uleb128 0x2
 3140 037c 91       		.byte	0x91
 3141 037d 68       		.sleb128 -24
 3142 037e 0C       		.uleb128 0xc
 3143 037f 53000000 		.4byte	.LASF53
 3144 0383 01       		.byte	0x1
 3145 0384 6309     		.2byte	0x963
 3146 0386 C6000000 		.4byte	0xc6
 3147 038a 02       		.uleb128 0x2
 3148 038b 91       		.byte	0x91
 3149 038c 70       		.sleb128 -16
 3150 038d 0C       		.uleb128 0xc
 3151 038e 00000000 		.4byte	.LASF54
 3152 0392 01       		.byte	0x1
 3153 0393 6409     		.2byte	0x964
 3154 0395 9D030000 		.4byte	0x39d
 3155 0399 02       		.uleb128 0x2
 3156 039a 91       		.byte	0x91
 3157 039b 74       		.sleb128 -12
 3158 039c 00       		.byte	0
 3159 039d 06       		.uleb128 0x6
 3160 039e 04       		.byte	0x4
 3161 039f C6000000 		.4byte	0xc6
 3162 03a3 0E       		.uleb128 0xe
 3163 03a4 28050000 		.4byte	.LASF55
 3164 03a8 01       		.byte	0x1
 3165 03a9 8309     		.2byte	0x983
 3166 03ab C6000000 		.4byte	0xc6
 3167 03af 00000000 		.4byte	.LFB15
 3168 03b3 34000000 		.4byte	.LFE15-.LFB15
 3169 03b7 01       		.uleb128 0x1
 3170 03b8 9C       		.byte	0x9c
 3171 03b9 DC030000 		.4byte	0x3dc
 3172 03bd 0B       		.uleb128 0xb
 3173 03be 20030000 		.4byte	.LASF51
 3174 03c2 01       		.byte	0x1
 3175 03c3 8309     		.2byte	0x983
 3176 03c5 6B000000 		.4byte	0x6b
 3177 03c9 02       		.uleb128 0x2
 3178 03ca 91       		.byte	0x91
 3179 03cb 6F       		.sleb128 -17
 3180 03cc 0C       		.uleb128 0xc
 3181 03cd 00000000 		.4byte	.LASF54
 3182 03d1 01       		.byte	0x1
 3183 03d2 8509     		.2byte	0x985
 3184 03d4 9D030000 		.4byte	0x39d
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccaiT5A1.s 			page 112


 3185 03d8 02       		.uleb128 0x2
 3186 03d9 91       		.byte	0x91
 3187 03da 74       		.sleb128 -12
 3188 03db 00       		.byte	0
 3189 03dc 0E       		.uleb128 0xe
 3190 03dd 11030000 		.4byte	.LASF56
 3191 03e1 01       		.byte	0x1
 3192 03e2 9909     		.2byte	0x999
 3193 03e4 C6000000 		.4byte	0xc6
 3194 03e8 00000000 		.4byte	.LFB16
 3195 03ec 4C000000 		.4byte	.LFE16-.LFB16
 3196 03f0 01       		.uleb128 0x1
 3197 03f1 9C       		.byte	0x9c
 3198 03f2 33040000 		.4byte	0x433
 3199 03f6 0B       		.uleb128 0xb
 3200 03f7 20030000 		.4byte	.LASF51
 3201 03fb 01       		.byte	0x1
 3202 03fc 9909     		.2byte	0x999
 3203 03fe 6B000000 		.4byte	0x6b
 3204 0402 02       		.uleb128 0x2
 3205 0403 91       		.byte	0x91
 3206 0404 6F       		.sleb128 -17
 3207 0405 0B       		.uleb128 0xb
 3208 0406 43040000 		.4byte	.LASF52
 3209 040a 01       		.byte	0x1
 3210 040b 9909     		.2byte	0x999
 3211 040d C6000000 		.4byte	0xc6
 3212 0411 02       		.uleb128 0x2
 3213 0412 91       		.byte	0x91
 3214 0413 68       		.sleb128 -24
 3215 0414 0C       		.uleb128 0xc
 3216 0415 53000000 		.4byte	.LASF53
 3217 0419 01       		.byte	0x1
 3218 041a 9B09     		.2byte	0x99b
 3219 041c C6000000 		.4byte	0xc6
 3220 0420 02       		.uleb128 0x2
 3221 0421 91       		.byte	0x91
 3222 0422 70       		.sleb128 -16
 3223 0423 0C       		.uleb128 0xc
 3224 0424 00000000 		.4byte	.LASF54
 3225 0428 01       		.byte	0x1
 3226 0429 9C09     		.2byte	0x99c
 3227 042b 9D030000 		.4byte	0x39d
 3228 042f 02       		.uleb128 0x2
 3229 0430 91       		.byte	0x91
 3230 0431 74       		.sleb128 -12
 3231 0432 00       		.byte	0
 3232 0433 0E       		.uleb128 0xe
 3233 0434 D2040000 		.4byte	.LASF57
 3234 0438 01       		.byte	0x1
 3235 0439 B509     		.2byte	0x9b5
 3236 043b C6000000 		.4byte	0xc6
 3237 043f 00000000 		.4byte	.LFB17
 3238 0443 36000000 		.4byte	.LFE17-.LFB17
 3239 0447 01       		.uleb128 0x1
 3240 0448 9C       		.byte	0x9c
 3241 0449 6C040000 		.4byte	0x46c
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccaiT5A1.s 			page 113


 3242 044d 0B       		.uleb128 0xb
 3243 044e 20030000 		.4byte	.LASF51
 3244 0452 01       		.byte	0x1
 3245 0453 B509     		.2byte	0x9b5
 3246 0455 6B000000 		.4byte	0x6b
 3247 0459 02       		.uleb128 0x2
 3248 045a 91       		.byte	0x91
 3249 045b 6F       		.sleb128 -17
 3250 045c 0C       		.uleb128 0xc
 3251 045d 00000000 		.4byte	.LASF54
 3252 0461 01       		.byte	0x1
 3253 0462 B709     		.2byte	0x9b7
 3254 0464 9D030000 		.4byte	0x39d
 3255 0468 02       		.uleb128 0x2
 3256 0469 91       		.byte	0x91
 3257 046a 74       		.sleb128 -12
 3258 046b 00       		.byte	0
 3259 046c 0A       		.uleb128 0xa
 3260 046d 9A040000 		.4byte	.LASF58
 3261 0471 01       		.byte	0x1
 3262 0472 C809     		.2byte	0x9c8
 3263 0474 00000000 		.4byte	.LFB18
 3264 0478 A8000000 		.4byte	.LFE18-.LFB18
 3265 047c 01       		.uleb128 0x1
 3266 047d 9C       		.byte	0x9c
 3267 047e CE040000 		.4byte	0x4ce
 3268 0482 0B       		.uleb128 0xb
 3269 0483 20030000 		.4byte	.LASF51
 3270 0487 01       		.byte	0x1
 3271 0488 C809     		.2byte	0x9c8
 3272 048a 6B000000 		.4byte	0x6b
 3273 048e 02       		.uleb128 0x2
 3274 048f 91       		.byte	0x91
 3275 0490 5F       		.sleb128 -33
 3276 0491 0B       		.uleb128 0xb
 3277 0492 27030000 		.4byte	.LASF59
 3278 0496 01       		.byte	0x1
 3279 0497 C809     		.2byte	0x9c8
 3280 0499 6B000000 		.4byte	0x6b
 3281 049d 02       		.uleb128 0x2
 3282 049e 91       		.byte	0x91
 3283 049f 5E       		.sleb128 -34
 3284 04a0 0C       		.uleb128 0xc
 3285 04a1 7A010000 		.4byte	.LASF23
 3286 04a5 01       		.byte	0x1
 3287 04a6 CA09     		.2byte	0x9ca
 3288 04a8 6B000000 		.4byte	0x6b
 3289 04ac 02       		.uleb128 0x2
 3290 04ad 91       		.byte	0x91
 3291 04ae 6B       		.sleb128 -21
 3292 04af 0C       		.uleb128 0xc
 3293 04b0 EA010000 		.4byte	.LASF60
 3294 04b4 01       		.byte	0x1
 3295 04b5 CB09     		.2byte	0x9cb
 3296 04b7 83000000 		.4byte	0x83
 3297 04bb 02       		.uleb128 0x2
 3298 04bc 91       		.byte	0x91
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccaiT5A1.s 			page 114


 3299 04bd 6C       		.sleb128 -20
 3300 04be 0C       		.uleb128 0xc
 3301 04bf 57020000 		.4byte	.LASF61
 3302 04c3 01       		.byte	0x1
 3303 04c4 CC09     		.2byte	0x9cc
 3304 04c6 83000000 		.4byte	0x83
 3305 04ca 02       		.uleb128 0x2
 3306 04cb 91       		.byte	0x91
 3307 04cc 64       		.sleb128 -28
 3308 04cd 00       		.byte	0
 3309 04ce 0E       		.uleb128 0xe
 3310 04cf 2B020000 		.4byte	.LASF62
 3311 04d3 01       		.byte	0x1
 3312 04d4 EA09     		.2byte	0x9ea
 3313 04d6 6B000000 		.4byte	0x6b
 3314 04da 00000000 		.4byte	.LFB19
 3315 04de 58000000 		.4byte	.LFE19-.LFB19
 3316 04e2 01       		.uleb128 0x1
 3317 04e3 9C       		.byte	0x9c
 3318 04e4 07050000 		.4byte	0x507
 3319 04e8 0B       		.uleb128 0xb
 3320 04e9 20030000 		.4byte	.LASF51
 3321 04ed 01       		.byte	0x1
 3322 04ee EA09     		.2byte	0x9ea
 3323 04f0 6B000000 		.4byte	0x6b
 3324 04f4 02       		.uleb128 0x2
 3325 04f5 91       		.byte	0x91
 3326 04f6 6F       		.sleb128 -17
 3327 04f7 0C       		.uleb128 0xc
 3328 04f8 27030000 		.4byte	.LASF59
 3329 04fc 01       		.byte	0x1
 3330 04fd EC09     		.2byte	0x9ec
 3331 04ff 6B000000 		.4byte	0x6b
 3332 0503 02       		.uleb128 0x2
 3333 0504 91       		.byte	0x91
 3334 0505 77       		.sleb128 -9
 3335 0506 00       		.byte	0
 3336 0507 0D       		.uleb128 0xd
 3337 0508 1C050000 		.4byte	.LASF63
 3338 050c 01       		.byte	0x1
 3339 050d FF09     		.2byte	0x9ff
 3340 050f 00000000 		.4byte	.LFB20
 3341 0513 2C000000 		.4byte	.LFE20-.LFB20
 3342 0517 01       		.uleb128 0x1
 3343 0518 9C       		.byte	0x9c
 3344 0519 2D050000 		.4byte	0x52d
 3345 051d 0B       		.uleb128 0xb
 3346 051e 20030000 		.4byte	.LASF51
 3347 0522 01       		.byte	0x1
 3348 0523 FF09     		.2byte	0x9ff
 3349 0525 6B000000 		.4byte	0x6b
 3350 0529 02       		.uleb128 0x2
 3351 052a 91       		.byte	0x91
 3352 052b 77       		.sleb128 -9
 3353 052c 00       		.byte	0
 3354 052d 11       		.uleb128 0x11
 3355 052e 41010000 		.4byte	.LASF64
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccaiT5A1.s 			page 115


 3356 0532 01       		.byte	0x1
 3357 0533 110A     		.2byte	0xa11
 3358 0535 6B000000 		.4byte	0x6b
 3359 0539 00000000 		.4byte	.LFB21
 3360 053d 30000000 		.4byte	.LFE21-.LFB21
 3361 0541 01       		.uleb128 0x1
 3362 0542 9C       		.byte	0x9c
 3363 0543 57050000 		.4byte	0x557
 3364 0547 0B       		.uleb128 0xb
 3365 0548 20030000 		.4byte	.LASF51
 3366 054c 01       		.byte	0x1
 3367 054d 110A     		.2byte	0xa11
 3368 054f 6B000000 		.4byte	0x6b
 3369 0553 02       		.uleb128 0x2
 3370 0554 91       		.byte	0x91
 3371 0555 77       		.sleb128 -9
 3372 0556 00       		.byte	0
 3373 0557 0D       		.uleb128 0xd
 3374 0558 A5010000 		.4byte	.LASF65
 3375 055c 01       		.byte	0x1
 3376 055d 210A     		.2byte	0xa21
 3377 055f 00000000 		.4byte	.LFB22
 3378 0563 2C000000 		.4byte	.LFE22-.LFB22
 3379 0567 01       		.uleb128 0x1
 3380 0568 9C       		.byte	0x9c
 3381 0569 7D050000 		.4byte	0x57d
 3382 056d 0B       		.uleb128 0xb
 3383 056e 20030000 		.4byte	.LASF51
 3384 0572 01       		.byte	0x1
 3385 0573 210A     		.2byte	0xa21
 3386 0575 6B000000 		.4byte	0x6b
 3387 0579 02       		.uleb128 0x2
 3388 057a 91       		.byte	0x91
 3389 057b 77       		.sleb128 -9
 3390 057c 00       		.byte	0
 3391 057d 0D       		.uleb128 0xd
 3392 057e DA020000 		.4byte	.LASF66
 3393 0582 01       		.byte	0x1
 3394 0583 2F0A     		.2byte	0xa2f
 3395 0585 00000000 		.4byte	.LFB23
 3396 0589 2C000000 		.4byte	.LFE23-.LFB23
 3397 058d 01       		.uleb128 0x1
 3398 058e 9C       		.byte	0x9c
 3399 058f A3050000 		.4byte	0x5a3
 3400 0593 0B       		.uleb128 0xb
 3401 0594 20030000 		.4byte	.LASF51
 3402 0598 01       		.byte	0x1
 3403 0599 2F0A     		.2byte	0xa2f
 3404 059b 6B000000 		.4byte	0x6b
 3405 059f 02       		.uleb128 0x2
 3406 05a0 91       		.byte	0x91
 3407 05a1 77       		.sleb128 -9
 3408 05a2 00       		.byte	0
 3409 05a3 0D       		.uleb128 0xd
 3410 05a4 25040000 		.4byte	.LASF67
 3411 05a8 01       		.byte	0x1
 3412 05a9 3E0A     		.2byte	0xa3e
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccaiT5A1.s 			page 116


 3413 05ab 00000000 		.4byte	.LFB24
 3414 05af 2C000000 		.4byte	.LFE24-.LFB24
 3415 05b3 01       		.uleb128 0x1
 3416 05b4 9C       		.byte	0x9c
 3417 05b5 C9050000 		.4byte	0x5c9
 3418 05b9 0B       		.uleb128 0xb
 3419 05ba 20030000 		.4byte	.LASF51
 3420 05be 01       		.byte	0x1
 3421 05bf 3E0A     		.2byte	0xa3e
 3422 05c1 6B000000 		.4byte	0x6b
 3423 05c5 02       		.uleb128 0x2
 3424 05c6 91       		.byte	0x91
 3425 05c7 77       		.sleb128 -9
 3426 05c8 00       		.byte	0
 3427 05c9 0D       		.uleb128 0xd
 3428 05ca FD040000 		.4byte	.LASF68
 3429 05ce 01       		.byte	0x1
 3430 05cf 4D0A     		.2byte	0xa4d
 3431 05d1 00000000 		.4byte	.LFB25
 3432 05d5 16000000 		.4byte	.LFE25-.LFB25
 3433 05d9 01       		.uleb128 0x1
 3434 05da 9C       		.byte	0x9c
 3435 05db EF050000 		.4byte	0x5ef
 3436 05df 0B       		.uleb128 0xb
 3437 05e0 4E050000 		.4byte	.LASF44
 3438 05e4 01       		.byte	0x1
 3439 05e5 4D0A     		.2byte	0xa4d
 3440 05e7 6B000000 		.4byte	0x6b
 3441 05eb 02       		.uleb128 0x2
 3442 05ec 91       		.byte	0x91
 3443 05ed 77       		.sleb128 -9
 3444 05ee 00       		.byte	0
 3445 05ef 0F       		.uleb128 0xf
 3446 05f0 18010000 		.4byte	.LASF69
 3447 05f4 01       		.byte	0x1
 3448 05f5 650A     		.2byte	0xa65
 3449 05f7 00000000 		.4byte	.LFB26
 3450 05fb 24000000 		.4byte	.LFE26-.LFB26
 3451 05ff 01       		.uleb128 0x1
 3452 0600 9C       		.byte	0x9c
 3453 0601 0A       		.uleb128 0xa
 3454 0602 BF050000 		.4byte	.LASF70
 3455 0606 01       		.byte	0x1
 3456 0607 790A     		.2byte	0xa79
 3457 0609 00000000 		.4byte	.LFB27
 3458 060d 4C000000 		.4byte	.LFE27-.LFB27
 3459 0611 01       		.uleb128 0x1
 3460 0612 9C       		.byte	0x9c
 3461 0613 27060000 		.4byte	0x627
 3462 0617 0B       		.uleb128 0xb
 3463 0618 E1040000 		.4byte	.LASF71
 3464 061c 01       		.byte	0x1
 3465 061d 790A     		.2byte	0xa79
 3466 061f 83000000 		.4byte	0x83
 3467 0623 02       		.uleb128 0x2
 3468 0624 91       		.byte	0x91
 3469 0625 74       		.sleb128 -12
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccaiT5A1.s 			page 117


 3470 0626 00       		.byte	0
 3471 0627 0A       		.uleb128 0xa
 3472 0628 44050000 		.4byte	.LASF72
 3473 062c 01       		.byte	0x1
 3474 062d 900A     		.2byte	0xa90
 3475 062f 00000000 		.4byte	.LFB28
 3476 0633 28000000 		.4byte	.LFE28-.LFB28
 3477 0637 01       		.uleb128 0x1
 3478 0638 9C       		.byte	0x9c
 3479 0639 4D060000 		.4byte	0x64d
 3480 063d 0B       		.uleb128 0xb
 3481 063e 57060000 		.4byte	.LASF73
 3482 0642 01       		.byte	0x1
 3483 0643 900A     		.2byte	0xa90
 3484 0645 77000000 		.4byte	0x77
 3485 0649 02       		.uleb128 0x2
 3486 064a 91       		.byte	0x91
 3487 064b 76       		.sleb128 -10
 3488 064c 00       		.byte	0
 3489 064d 0A       		.uleb128 0xa
 3490 064e 6E010000 		.4byte	.LASF74
 3491 0652 01       		.byte	0x1
 3492 0653 9E0A     		.2byte	0xa9e
 3493 0655 00000000 		.4byte	.LFB29
 3494 0659 84000000 		.4byte	.LFE29-.LFB29
 3495 065d 01       		.uleb128 0x1
 3496 065e 9C       		.byte	0x9c
 3497 065f 73060000 		.4byte	0x673
 3498 0663 0B       		.uleb128 0xb
 3499 0664 69010000 		.4byte	.LASF33
 3500 0668 01       		.byte	0x1
 3501 0669 9E0A     		.2byte	0xa9e
 3502 066b 83000000 		.4byte	0x83
 3503 066f 02       		.uleb128 0x2
 3504 0670 91       		.byte	0x91
 3505 0671 74       		.sleb128 -12
 3506 0672 00       		.byte	0
 3507 0673 12       		.uleb128 0x12
 3508 0674 00040000 		.4byte	.LASF75
 3509 0678 01       		.byte	0x1
 3510 0679 BE0A     		.2byte	0xabe
 3511 067b 00000000 		.4byte	.LFB30
 3512 067f 24000000 		.4byte	.LFE30-.LFB30
 3513 0683 01       		.uleb128 0x1
 3514 0684 9C       		.byte	0x9c
 3515 0685 0A       		.uleb128 0xa
 3516 0686 49020000 		.4byte	.LASF76
 3517 068a 01       		.byte	0x1
 3518 068b DB0A     		.2byte	0xadb
 3519 068d 00000000 		.4byte	.LFB31
 3520 0691 5C000000 		.4byte	.LFE31-.LFB31
 3521 0695 01       		.uleb128 0x1
 3522 0696 9C       		.byte	0x9c
 3523 0697 A9060000 		.4byte	0x6a9
 3524 069b 13       		.uleb128 0x13
 3525 069c 6900     		.ascii	"i\000"
 3526 069e 01       		.byte	0x1
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccaiT5A1.s 			page 118


 3527 069f DD0A     		.2byte	0xadd
 3528 06a1 83000000 		.4byte	0x83
 3529 06a5 02       		.uleb128 0x2
 3530 06a6 91       		.byte	0x91
 3531 06a7 74       		.sleb128 -12
 3532 06a8 00       		.byte	0
 3533 06a9 12       		.uleb128 0x12
 3534 06aa 67050000 		.4byte	.LASF77
 3535 06ae 01       		.byte	0x1
 3536 06af F90A     		.2byte	0xaf9
 3537 06b1 00000000 		.4byte	.LFB32
 3538 06b5 20000000 		.4byte	.LFE32-.LFB32
 3539 06b9 01       		.uleb128 0x1
 3540 06ba 9C       		.byte	0x9c
 3541 06bb 0F       		.uleb128 0xf
 3542 06bc 00060000 		.4byte	.LASF78
 3543 06c0 01       		.byte	0x1
 3544 06c1 0A0B     		.2byte	0xb0a
 3545 06c3 00000000 		.4byte	.LFB33
 3546 06c7 1C000000 		.4byte	.LFE33-.LFB33
 3547 06cb 01       		.uleb128 0x1
 3548 06cc 9C       		.byte	0x9c
 3549 06cd 0F       		.uleb128 0xf
 3550 06ce 28010000 		.4byte	.LASF79
 3551 06d2 01       		.byte	0x1
 3552 06d3 1A0B     		.2byte	0xb1a
 3553 06d5 00000000 		.4byte	.LFB34
 3554 06d9 1C000000 		.4byte	.LFE34-.LFB34
 3555 06dd 01       		.uleb128 0x1
 3556 06de 9C       		.byte	0x9c
 3557 06df 0F       		.uleb128 0xf
 3558 06e0 C7050000 		.4byte	.LASF80
 3559 06e4 01       		.byte	0x1
 3560 06e5 2A0B     		.2byte	0xb2a
 3561 06e7 00000000 		.4byte	.LFB35
 3562 06eb 1C000000 		.4byte	.LFE35-.LFB35
 3563 06ef 01       		.uleb128 0x1
 3564 06f0 9C       		.byte	0x9c
 3565 06f1 0D       		.uleb128 0xd
 3566 06f2 6B060000 		.4byte	.LASF81
 3567 06f6 01       		.byte	0x1
 3568 06f7 3B0B     		.2byte	0xb3b
 3569 06f9 00000000 		.4byte	.LFB36
 3570 06fd 20000000 		.4byte	.LFE36-.LFB36
 3571 0701 01       		.uleb128 0x1
 3572 0702 9C       		.byte	0x9c
 3573 0703 17070000 		.4byte	0x717
 3574 0707 0B       		.uleb128 0xb
 3575 0708 57020000 		.4byte	.LASF61
 3576 070c 01       		.byte	0x1
 3577 070d 3B0B     		.2byte	0xb3b
 3578 070f 83000000 		.4byte	0x83
 3579 0713 02       		.uleb128 0x2
 3580 0714 91       		.byte	0x91
 3581 0715 74       		.sleb128 -12
 3582 0716 00       		.byte	0
 3583 0717 10       		.uleb128 0x10
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccaiT5A1.s 			page 119


 3584 0718 89010000 		.4byte	.LASF83
 3585 071c 01       		.byte	0x1
 3586 071d 4B0B     		.2byte	0xb4b
 3587 071f 83000000 		.4byte	0x83
 3588 0723 00000000 		.4byte	.LFB37
 3589 0727 18000000 		.4byte	.LFE37-.LFB37
 3590 072b 01       		.uleb128 0x1
 3591 072c 9C       		.byte	0x9c
 3592 072d 10       		.uleb128 0x10
 3593 072e 7A040000 		.4byte	.LASF84
 3594 0732 01       		.byte	0x1
 3595 0733 5B0B     		.2byte	0xb5b
 3596 0735 83000000 		.4byte	0x83
 3597 0739 00000000 		.4byte	.LFB38
 3598 073d 18000000 		.4byte	.LFE38-.LFB38
 3599 0741 01       		.uleb128 0x1
 3600 0742 9C       		.byte	0x9c
 3601 0743 10       		.uleb128 0x10
 3602 0744 6B020000 		.4byte	.LASF85
 3603 0748 01       		.byte	0x1
 3604 0749 AB0B     		.2byte	0xbab
 3605 074b 83000000 		.4byte	0x83
 3606 074f 00000000 		.4byte	.LFB39
 3607 0753 18000000 		.4byte	.LFE39-.LFB39
 3608 0757 01       		.uleb128 0x1
 3609 0758 9C       		.byte	0x9c
 3610 0759 0F       		.uleb128 0xf
 3611 075a 8E020000 		.4byte	.LASF86
 3612 075e 01       		.byte	0x1
 3613 075f B80B     		.2byte	0xbb8
 3614 0761 00000000 		.4byte	.LFB40
 3615 0765 14000000 		.4byte	.LFE40-.LFB40
 3616 0769 01       		.uleb128 0x1
 3617 076a 9C       		.byte	0x9c
 3618 076b 11       		.uleb128 0x11
 3619 076c 8E050000 		.4byte	.LASF87
 3620 0770 01       		.byte	0x1
 3621 0771 DB0B     		.2byte	0xbdb
 3622 0773 E7000000 		.4byte	0xe7
 3623 0777 00000000 		.4byte	.LFB41
 3624 077b 2C000000 		.4byte	.LFE41-.LFB41
 3625 077f 01       		.uleb128 0x1
 3626 0780 9C       		.byte	0x9c
 3627 0781 B3070000 		.4byte	0x7b3
 3628 0785 0B       		.uleb128 0xb
 3629 0786 20030000 		.4byte	.LASF51
 3630 078a 01       		.byte	0x1
 3631 078b DB0B     		.2byte	0xbdb
 3632 078d 83000000 		.4byte	0x83
 3633 0791 02       		.uleb128 0x2
 3634 0792 91       		.byte	0x91
 3635 0793 6C       		.sleb128 -20
 3636 0794 0B       		.uleb128 0xb
 3637 0795 60040000 		.4byte	.LASF88
 3638 0799 01       		.byte	0x1
 3639 079a DB0B     		.2byte	0xbdb
 3640 079c E7000000 		.4byte	0xe7
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccaiT5A1.s 			page 120


 3641 07a0 02       		.uleb128 0x2
 3642 07a1 91       		.byte	0x91
 3643 07a2 68       		.sleb128 -24
 3644 07a3 0C       		.uleb128 0xc
 3645 07a4 5A000000 		.4byte	.LASF89
 3646 07a8 01       		.byte	0x1
 3647 07a9 DD0B     		.2byte	0xbdd
 3648 07ab E7000000 		.4byte	0xe7
 3649 07af 02       		.uleb128 0x2
 3650 07b0 91       		.byte	0x91
 3651 07b1 74       		.sleb128 -12
 3652 07b2 00       		.byte	0
 3653 07b3 11       		.uleb128 0x11
 3654 07b4 B2010000 		.4byte	.LASF90
 3655 07b8 01       		.byte	0x1
 3656 07b9 F30B     		.2byte	0xbf3
 3657 07bb E7000000 		.4byte	0xe7
 3658 07bf 00000000 		.4byte	.LFB42
 3659 07c3 1C000000 		.4byte	.LFE42-.LFB42
 3660 07c7 01       		.uleb128 0x1
 3661 07c8 9C       		.byte	0x9c
 3662 07c9 DD070000 		.4byte	0x7dd
 3663 07cd 0B       		.uleb128 0xb
 3664 07ce 20030000 		.4byte	.LASF51
 3665 07d2 01       		.byte	0x1
 3666 07d3 F30B     		.2byte	0xbf3
 3667 07d5 83000000 		.4byte	0x83
 3668 07d9 02       		.uleb128 0x2
 3669 07da 91       		.byte	0x91
 3670 07db 74       		.sleb128 -12
 3671 07dc 00       		.byte	0
 3672 07dd 14       		.uleb128 0x14
 3673 07de 7E060000 		.4byte	.LASF104
 3674 07e2 01       		.byte	0x1
 3675 07e3 000C     		.2byte	0xc00
 3676 07e5 00000000 		.4byte	.LFB43
 3677 07e9 44000000 		.4byte	.LFE43-.LFB43
 3678 07ed 01       		.uleb128 0x1
 3679 07ee 9C       		.byte	0x9c
 3680 07ef 01080000 		.4byte	0x801
 3681 07f3 13       		.uleb128 0x13
 3682 07f4 6900     		.ascii	"i\000"
 3683 07f6 01       		.byte	0x1
 3684 07f7 020C     		.2byte	0xc02
 3685 07f9 83000000 		.4byte	0x83
 3686 07fd 02       		.uleb128 0x2
 3687 07fe 91       		.byte	0x91
 3688 07ff 74       		.sleb128 -12
 3689 0800 00       		.byte	0
 3690 0801 0D       		.uleb128 0xd
 3691 0802 5D020000 		.4byte	.LASF91
 3692 0806 01       		.byte	0x1
 3693 0807 200C     		.2byte	0xc20
 3694 0809 00000000 		.4byte	.LFB44
 3695 080d C0000000 		.4byte	.LFE44-.LFB44
 3696 0811 01       		.uleb128 0x1
 3697 0812 9C       		.byte	0x9c
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccaiT5A1.s 			page 121


 3698 0813 27080000 		.4byte	0x827
 3699 0817 0B       		.uleb128 0xb
 3700 0818 B6050000 		.4byte	.LASF92
 3701 081c 01       		.byte	0x1
 3702 081d 200C     		.2byte	0xc20
 3703 081f 27080000 		.4byte	0x827
 3704 0823 02       		.uleb128 0x2
 3705 0824 91       		.byte	0x91
 3706 0825 74       		.sleb128 -12
 3707 0826 00       		.byte	0
 3708 0827 06       		.uleb128 0x6
 3709 0828 04       		.byte	0x4
 3710 0829 83000000 		.4byte	0x83
 3711 082d 15       		.uleb128 0x15
 3712 082e E7000000 		.4byte	0xe7
 3713 0832 3D080000 		.4byte	0x83d
 3714 0836 16       		.uleb128 0x16
 3715 0837 E0000000 		.4byte	0xe0
 3716 083b 04       		.byte	0x4
 3717 083c 00       		.byte	0
 3718 083d 17       		.uleb128 0x17
 3719 083e A3050000 		.4byte	.LASF93
 3720 0842 01       		.byte	0x1
 3721 0843 22       		.byte	0x22
 3722 0844 2D080000 		.4byte	0x82d
 3723 0848 05       		.uleb128 0x5
 3724 0849 03       		.byte	0x3
 3725 084a 00000000 		.4byte	CySysTickCallbacks
 3726 084e 18       		.uleb128 0x18
 3727 084f 8C040000 		.4byte	.LASF94
 3728 0853 01       		.byte	0x1
 3729 0854 1B       		.byte	0x1b
 3730 0855 83000000 		.4byte	0x83
 3731 0859 05       		.uleb128 0x5
 3732 085a 03       		.byte	0x3
 3733 085b 00000000 		.4byte	cydelayFreqHz
 3734 085f 18       		.uleb128 0x18
 3735 0860 CD010000 		.4byte	.LASF95
 3736 0864 01       		.byte	0x1
 3737 0865 1C       		.byte	0x1c
 3738 0866 83000000 		.4byte	0x83
 3739 086a 05       		.uleb128 0x5
 3740 086b 03       		.byte	0x3
 3741 086c 00000000 		.4byte	cydelayFreqKhz
 3742 0870 18       		.uleb128 0x18
 3743 0871 F1050000 		.4byte	.LASF96
 3744 0875 01       		.byte	0x1
 3745 0876 1D       		.byte	0x1d
 3746 0877 6B000000 		.4byte	0x6b
 3747 087b 05       		.uleb128 0x5
 3748 087c 03       		.byte	0x3
 3749 087d 00000000 		.4byte	cydelayFreqMhz
 3750 0881 18       		.uleb128 0x18
 3751 0882 3C020000 		.4byte	.LASF97
 3752 0886 01       		.byte	0x1
 3753 0887 1E       		.byte	0x1e
 3754 0888 83000000 		.4byte	0x83
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccaiT5A1.s 			page 122


 3755 088c 05       		.uleb128 0x5
 3756 088d 03       		.byte	0x3
 3757 088e 00000000 		.4byte	cydelay32kMs
 3758 0892 18       		.uleb128 0x18
 3759 0893 FA000000 		.4byte	.LASF98
 3760 0897 01       		.byte	0x1
 3761 0898 36       		.byte	0x36
 3762 0899 83000000 		.4byte	0x83
 3763 089d 05       		.uleb128 0x5
 3764 089e 03       		.byte	0x3
 3765 089f 00000000 		.4byte	CySysTickInitVar
 3766 08a3 15       		.uleb128 0x15
 3767 08a4 B3080000 		.4byte	0x8b3
 3768 08a8 B3080000 		.4byte	0x8b3
 3769 08ac 16       		.uleb128 0x16
 3770 08ad E0000000 		.4byte	0xe0
 3771 08b1 2D       		.byte	0x2d
 3772 08b2 00       		.byte	0
 3773 08b3 19       		.uleb128 0x19
 3774 08b4 6B000000 		.4byte	0x6b
 3775 08b8 18       		.uleb128 0x18
 3776 08b9 69040000 		.4byte	.LASF99
 3777 08bd 01       		.byte	0x1
 3778 08be 3B       		.byte	0x3b
 3779 08bf C9080000 		.4byte	0x8c9
 3780 08c3 05       		.uleb128 0x5
 3781 08c4 03       		.byte	0x3
 3782 08c5 00000000 		.4byte	cyImoFreqMhz2Reg
 3783 08c9 19       		.uleb128 0x19
 3784 08ca A3080000 		.4byte	0x8a3
 3785 08ce 18       		.uleb128 0x18
 3786 08cf 40000000 		.4byte	.LASF100
 3787 08d3 01       		.byte	0x1
 3788 08d4 5C       		.byte	0x5c
 3789 08d5 83000000 		.4byte	0x83
 3790 08d9 05       		.uleb128 0x5
 3791 08da 03       		.byte	0x3
 3792 08db 00000000 		.4byte	CySysClkPumpConfig
 3793 08df 00       		.byte	0
 3794              		.section	.debug_abbrev,"",%progbits
 3795              	.Ldebug_abbrev0:
 3796 0000 01       		.uleb128 0x1
 3797 0001 11       		.uleb128 0x11
 3798 0002 01       		.byte	0x1
 3799 0003 25       		.uleb128 0x25
 3800 0004 0E       		.uleb128 0xe
 3801 0005 13       		.uleb128 0x13
 3802 0006 0B       		.uleb128 0xb
 3803 0007 03       		.uleb128 0x3
 3804 0008 0E       		.uleb128 0xe
 3805 0009 1B       		.uleb128 0x1b
 3806 000a 0E       		.uleb128 0xe
 3807 000b 55       		.uleb128 0x55
 3808 000c 17       		.uleb128 0x17
 3809 000d 11       		.uleb128 0x11
 3810 000e 01       		.uleb128 0x1
 3811 000f 10       		.uleb128 0x10
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccaiT5A1.s 			page 123


 3812 0010 17       		.uleb128 0x17
 3813 0011 00       		.byte	0
 3814 0012 00       		.byte	0
 3815 0013 02       		.uleb128 0x2
 3816 0014 24       		.uleb128 0x24
 3817 0015 00       		.byte	0
 3818 0016 0B       		.uleb128 0xb
 3819 0017 0B       		.uleb128 0xb
 3820 0018 3E       		.uleb128 0x3e
 3821 0019 0B       		.uleb128 0xb
 3822 001a 03       		.uleb128 0x3
 3823 001b 0E       		.uleb128 0xe
 3824 001c 00       		.byte	0
 3825 001d 00       		.byte	0
 3826 001e 03       		.uleb128 0x3
 3827 001f 24       		.uleb128 0x24
 3828 0020 00       		.byte	0
 3829 0021 0B       		.uleb128 0xb
 3830 0022 0B       		.uleb128 0xb
 3831 0023 3E       		.uleb128 0x3e
 3832 0024 0B       		.uleb128 0xb
 3833 0025 03       		.uleb128 0x3
 3834 0026 08       		.uleb128 0x8
 3835 0027 00       		.byte	0
 3836 0028 00       		.byte	0
 3837 0029 04       		.uleb128 0x4
 3838 002a 16       		.uleb128 0x16
 3839 002b 00       		.byte	0
 3840 002c 03       		.uleb128 0x3
 3841 002d 0E       		.uleb128 0xe
 3842 002e 3A       		.uleb128 0x3a
 3843 002f 0B       		.uleb128 0xb
 3844 0030 3B       		.uleb128 0x3b
 3845 0031 05       		.uleb128 0x5
 3846 0032 49       		.uleb128 0x49
 3847 0033 13       		.uleb128 0x13
 3848 0034 00       		.byte	0
 3849 0035 00       		.byte	0
 3850 0036 05       		.uleb128 0x5
 3851 0037 35       		.uleb128 0x35
 3852 0038 00       		.byte	0
 3853 0039 49       		.uleb128 0x49
 3854 003a 13       		.uleb128 0x13
 3855 003b 00       		.byte	0
 3856 003c 00       		.byte	0
 3857 003d 06       		.uleb128 0x6
 3858 003e 0F       		.uleb128 0xf
 3859 003f 00       		.byte	0
 3860 0040 0B       		.uleb128 0xb
 3861 0041 0B       		.uleb128 0xb
 3862 0042 49       		.uleb128 0x49
 3863 0043 13       		.uleb128 0x13
 3864 0044 00       		.byte	0
 3865 0045 00       		.byte	0
 3866 0046 07       		.uleb128 0x7
 3867 0047 15       		.uleb128 0x15
 3868 0048 00       		.byte	0
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccaiT5A1.s 			page 124


 3869 0049 27       		.uleb128 0x27
 3870 004a 19       		.uleb128 0x19
 3871 004b 00       		.byte	0
 3872 004c 00       		.byte	0
 3873 004d 08       		.uleb128 0x8
 3874 004e 16       		.uleb128 0x16
 3875 004f 00       		.byte	0
 3876 0050 03       		.uleb128 0x3
 3877 0051 0E       		.uleb128 0xe
 3878 0052 3A       		.uleb128 0x3a
 3879 0053 0B       		.uleb128 0xb
 3880 0054 3B       		.uleb128 0x3b
 3881 0055 0B       		.uleb128 0xb
 3882 0056 49       		.uleb128 0x49
 3883 0057 13       		.uleb128 0x13
 3884 0058 00       		.byte	0
 3885 0059 00       		.byte	0
 3886 005a 09       		.uleb128 0x9
 3887 005b 2E       		.uleb128 0x2e
 3888 005c 00       		.byte	0
 3889 005d 3F       		.uleb128 0x3f
 3890 005e 19       		.uleb128 0x19
 3891 005f 03       		.uleb128 0x3
 3892 0060 0E       		.uleb128 0xe
 3893 0061 3A       		.uleb128 0x3a
 3894 0062 0B       		.uleb128 0xb
 3895 0063 3B       		.uleb128 0x3b
 3896 0064 0B       		.uleb128 0xb
 3897 0065 27       		.uleb128 0x27
 3898 0066 19       		.uleb128 0x19
 3899 0067 11       		.uleb128 0x11
 3900 0068 01       		.uleb128 0x1
 3901 0069 12       		.uleb128 0x12
 3902 006a 06       		.uleb128 0x6
 3903 006b 40       		.uleb128 0x40
 3904 006c 18       		.uleb128 0x18
 3905 006d 9742     		.uleb128 0x2117
 3906 006f 19       		.uleb128 0x19
 3907 0070 00       		.byte	0
 3908 0071 00       		.byte	0
 3909 0072 0A       		.uleb128 0xa
 3910 0073 2E       		.uleb128 0x2e
 3911 0074 01       		.byte	0x1
 3912 0075 3F       		.uleb128 0x3f
 3913 0076 19       		.uleb128 0x19
 3914 0077 03       		.uleb128 0x3
 3915 0078 0E       		.uleb128 0xe
 3916 0079 3A       		.uleb128 0x3a
 3917 007a 0B       		.uleb128 0xb
 3918 007b 3B       		.uleb128 0x3b
 3919 007c 05       		.uleb128 0x5
 3920 007d 27       		.uleb128 0x27
 3921 007e 19       		.uleb128 0x19
 3922 007f 11       		.uleb128 0x11
 3923 0080 01       		.uleb128 0x1
 3924 0081 12       		.uleb128 0x12
 3925 0082 06       		.uleb128 0x6
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccaiT5A1.s 			page 125


 3926 0083 40       		.uleb128 0x40
 3927 0084 18       		.uleb128 0x18
 3928 0085 9642     		.uleb128 0x2116
 3929 0087 19       		.uleb128 0x19
 3930 0088 01       		.uleb128 0x1
 3931 0089 13       		.uleb128 0x13
 3932 008a 00       		.byte	0
 3933 008b 00       		.byte	0
 3934 008c 0B       		.uleb128 0xb
 3935 008d 05       		.uleb128 0x5
 3936 008e 00       		.byte	0
 3937 008f 03       		.uleb128 0x3
 3938 0090 0E       		.uleb128 0xe
 3939 0091 3A       		.uleb128 0x3a
 3940 0092 0B       		.uleb128 0xb
 3941 0093 3B       		.uleb128 0x3b
 3942 0094 05       		.uleb128 0x5
 3943 0095 49       		.uleb128 0x49
 3944 0096 13       		.uleb128 0x13
 3945 0097 02       		.uleb128 0x2
 3946 0098 18       		.uleb128 0x18
 3947 0099 00       		.byte	0
 3948 009a 00       		.byte	0
 3949 009b 0C       		.uleb128 0xc
 3950 009c 34       		.uleb128 0x34
 3951 009d 00       		.byte	0
 3952 009e 03       		.uleb128 0x3
 3953 009f 0E       		.uleb128 0xe
 3954 00a0 3A       		.uleb128 0x3a
 3955 00a1 0B       		.uleb128 0xb
 3956 00a2 3B       		.uleb128 0x3b
 3957 00a3 05       		.uleb128 0x5
 3958 00a4 49       		.uleb128 0x49
 3959 00a5 13       		.uleb128 0x13
 3960 00a6 02       		.uleb128 0x2
 3961 00a7 18       		.uleb128 0x18
 3962 00a8 00       		.byte	0
 3963 00a9 00       		.byte	0
 3964 00aa 0D       		.uleb128 0xd
 3965 00ab 2E       		.uleb128 0x2e
 3966 00ac 01       		.byte	0x1
 3967 00ad 3F       		.uleb128 0x3f
 3968 00ae 19       		.uleb128 0x19
 3969 00af 03       		.uleb128 0x3
 3970 00b0 0E       		.uleb128 0xe
 3971 00b1 3A       		.uleb128 0x3a
 3972 00b2 0B       		.uleb128 0xb
 3973 00b3 3B       		.uleb128 0x3b
 3974 00b4 05       		.uleb128 0x5
 3975 00b5 27       		.uleb128 0x27
 3976 00b6 19       		.uleb128 0x19
 3977 00b7 11       		.uleb128 0x11
 3978 00b8 01       		.uleb128 0x1
 3979 00b9 12       		.uleb128 0x12
 3980 00ba 06       		.uleb128 0x6
 3981 00bb 40       		.uleb128 0x40
 3982 00bc 18       		.uleb128 0x18
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccaiT5A1.s 			page 126


 3983 00bd 9742     		.uleb128 0x2117
 3984 00bf 19       		.uleb128 0x19
 3985 00c0 01       		.uleb128 0x1
 3986 00c1 13       		.uleb128 0x13
 3987 00c2 00       		.byte	0
 3988 00c3 00       		.byte	0
 3989 00c4 0E       		.uleb128 0xe
 3990 00c5 2E       		.uleb128 0x2e
 3991 00c6 01       		.byte	0x1
 3992 00c7 3F       		.uleb128 0x3f
 3993 00c8 19       		.uleb128 0x19
 3994 00c9 03       		.uleb128 0x3
 3995 00ca 0E       		.uleb128 0xe
 3996 00cb 3A       		.uleb128 0x3a
 3997 00cc 0B       		.uleb128 0xb
 3998 00cd 3B       		.uleb128 0x3b
 3999 00ce 05       		.uleb128 0x5
 4000 00cf 27       		.uleb128 0x27
 4001 00d0 19       		.uleb128 0x19
 4002 00d1 49       		.uleb128 0x49
 4003 00d2 13       		.uleb128 0x13
 4004 00d3 11       		.uleb128 0x11
 4005 00d4 01       		.uleb128 0x1
 4006 00d5 12       		.uleb128 0x12
 4007 00d6 06       		.uleb128 0x6
 4008 00d7 40       		.uleb128 0x40
 4009 00d8 18       		.uleb128 0x18
 4010 00d9 9642     		.uleb128 0x2116
 4011 00db 19       		.uleb128 0x19
 4012 00dc 01       		.uleb128 0x1
 4013 00dd 13       		.uleb128 0x13
 4014 00de 00       		.byte	0
 4015 00df 00       		.byte	0
 4016 00e0 0F       		.uleb128 0xf
 4017 00e1 2E       		.uleb128 0x2e
 4018 00e2 00       		.byte	0
 4019 00e3 3F       		.uleb128 0x3f
 4020 00e4 19       		.uleb128 0x19
 4021 00e5 03       		.uleb128 0x3
 4022 00e6 0E       		.uleb128 0xe
 4023 00e7 3A       		.uleb128 0x3a
 4024 00e8 0B       		.uleb128 0xb
 4025 00e9 3B       		.uleb128 0x3b
 4026 00ea 05       		.uleb128 0x5
 4027 00eb 27       		.uleb128 0x27
 4028 00ec 19       		.uleb128 0x19
 4029 00ed 11       		.uleb128 0x11
 4030 00ee 01       		.uleb128 0x1
 4031 00ef 12       		.uleb128 0x12
 4032 00f0 06       		.uleb128 0x6
 4033 00f1 40       		.uleb128 0x40
 4034 00f2 18       		.uleb128 0x18
 4035 00f3 9742     		.uleb128 0x2117
 4036 00f5 19       		.uleb128 0x19
 4037 00f6 00       		.byte	0
 4038 00f7 00       		.byte	0
 4039 00f8 10       		.uleb128 0x10
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccaiT5A1.s 			page 127


 4040 00f9 2E       		.uleb128 0x2e
 4041 00fa 00       		.byte	0
 4042 00fb 3F       		.uleb128 0x3f
 4043 00fc 19       		.uleb128 0x19
 4044 00fd 03       		.uleb128 0x3
 4045 00fe 0E       		.uleb128 0xe
 4046 00ff 3A       		.uleb128 0x3a
 4047 0100 0B       		.uleb128 0xb
 4048 0101 3B       		.uleb128 0x3b
 4049 0102 05       		.uleb128 0x5
 4050 0103 27       		.uleb128 0x27
 4051 0104 19       		.uleb128 0x19
 4052 0105 49       		.uleb128 0x49
 4053 0106 13       		.uleb128 0x13
 4054 0107 11       		.uleb128 0x11
 4055 0108 01       		.uleb128 0x1
 4056 0109 12       		.uleb128 0x12
 4057 010a 06       		.uleb128 0x6
 4058 010b 40       		.uleb128 0x40
 4059 010c 18       		.uleb128 0x18
 4060 010d 9742     		.uleb128 0x2117
 4061 010f 19       		.uleb128 0x19
 4062 0110 00       		.byte	0
 4063 0111 00       		.byte	0
 4064 0112 11       		.uleb128 0x11
 4065 0113 2E       		.uleb128 0x2e
 4066 0114 01       		.byte	0x1
 4067 0115 3F       		.uleb128 0x3f
 4068 0116 19       		.uleb128 0x19
 4069 0117 03       		.uleb128 0x3
 4070 0118 0E       		.uleb128 0xe
 4071 0119 3A       		.uleb128 0x3a
 4072 011a 0B       		.uleb128 0xb
 4073 011b 3B       		.uleb128 0x3b
 4074 011c 05       		.uleb128 0x5
 4075 011d 27       		.uleb128 0x27
 4076 011e 19       		.uleb128 0x19
 4077 011f 49       		.uleb128 0x49
 4078 0120 13       		.uleb128 0x13
 4079 0121 11       		.uleb128 0x11
 4080 0122 01       		.uleb128 0x1
 4081 0123 12       		.uleb128 0x12
 4082 0124 06       		.uleb128 0x6
 4083 0125 40       		.uleb128 0x40
 4084 0126 18       		.uleb128 0x18
 4085 0127 9742     		.uleb128 0x2117
 4086 0129 19       		.uleb128 0x19
 4087 012a 01       		.uleb128 0x1
 4088 012b 13       		.uleb128 0x13
 4089 012c 00       		.byte	0
 4090 012d 00       		.byte	0
 4091 012e 12       		.uleb128 0x12
 4092 012f 2E       		.uleb128 0x2e
 4093 0130 00       		.byte	0
 4094 0131 3F       		.uleb128 0x3f
 4095 0132 19       		.uleb128 0x19
 4096 0133 03       		.uleb128 0x3
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccaiT5A1.s 			page 128


 4097 0134 0E       		.uleb128 0xe
 4098 0135 3A       		.uleb128 0x3a
 4099 0136 0B       		.uleb128 0xb
 4100 0137 3B       		.uleb128 0x3b
 4101 0138 05       		.uleb128 0x5
 4102 0139 27       		.uleb128 0x27
 4103 013a 19       		.uleb128 0x19
 4104 013b 11       		.uleb128 0x11
 4105 013c 01       		.uleb128 0x1
 4106 013d 12       		.uleb128 0x12
 4107 013e 06       		.uleb128 0x6
 4108 013f 40       		.uleb128 0x40
 4109 0140 18       		.uleb128 0x18
 4110 0141 9642     		.uleb128 0x2116
 4111 0143 19       		.uleb128 0x19
 4112 0144 00       		.byte	0
 4113 0145 00       		.byte	0
 4114 0146 13       		.uleb128 0x13
 4115 0147 34       		.uleb128 0x34
 4116 0148 00       		.byte	0
 4117 0149 03       		.uleb128 0x3
 4118 014a 08       		.uleb128 0x8
 4119 014b 3A       		.uleb128 0x3a
 4120 014c 0B       		.uleb128 0xb
 4121 014d 3B       		.uleb128 0x3b
 4122 014e 05       		.uleb128 0x5
 4123 014f 49       		.uleb128 0x49
 4124 0150 13       		.uleb128 0x13
 4125 0151 02       		.uleb128 0x2
 4126 0152 18       		.uleb128 0x18
 4127 0153 00       		.byte	0
 4128 0154 00       		.byte	0
 4129 0155 14       		.uleb128 0x14
 4130 0156 2E       		.uleb128 0x2e
 4131 0157 01       		.byte	0x1
 4132 0158 03       		.uleb128 0x3
 4133 0159 0E       		.uleb128 0xe
 4134 015a 3A       		.uleb128 0x3a
 4135 015b 0B       		.uleb128 0xb
 4136 015c 3B       		.uleb128 0x3b
 4137 015d 05       		.uleb128 0x5
 4138 015e 27       		.uleb128 0x27
 4139 015f 19       		.uleb128 0x19
 4140 0160 11       		.uleb128 0x11
 4141 0161 01       		.uleb128 0x1
 4142 0162 12       		.uleb128 0x12
 4143 0163 06       		.uleb128 0x6
 4144 0164 40       		.uleb128 0x40
 4145 0165 18       		.uleb128 0x18
 4146 0166 9642     		.uleb128 0x2116
 4147 0168 19       		.uleb128 0x19
 4148 0169 01       		.uleb128 0x1
 4149 016a 13       		.uleb128 0x13
 4150 016b 00       		.byte	0
 4151 016c 00       		.byte	0
 4152 016d 15       		.uleb128 0x15
 4153 016e 01       		.uleb128 0x1
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccaiT5A1.s 			page 129


 4154 016f 01       		.byte	0x1
 4155 0170 49       		.uleb128 0x49
 4156 0171 13       		.uleb128 0x13
 4157 0172 01       		.uleb128 0x1
 4158 0173 13       		.uleb128 0x13
 4159 0174 00       		.byte	0
 4160 0175 00       		.byte	0
 4161 0176 16       		.uleb128 0x16
 4162 0177 21       		.uleb128 0x21
 4163 0178 00       		.byte	0
 4164 0179 49       		.uleb128 0x49
 4165 017a 13       		.uleb128 0x13
 4166 017b 2F       		.uleb128 0x2f
 4167 017c 0B       		.uleb128 0xb
 4168 017d 00       		.byte	0
 4169 017e 00       		.byte	0
 4170 017f 17       		.uleb128 0x17
 4171 0180 34       		.uleb128 0x34
 4172 0181 00       		.byte	0
 4173 0182 03       		.uleb128 0x3
 4174 0183 0E       		.uleb128 0xe
 4175 0184 3A       		.uleb128 0x3a
 4176 0185 0B       		.uleb128 0xb
 4177 0186 3B       		.uleb128 0x3b
 4178 0187 0B       		.uleb128 0xb
 4179 0188 49       		.uleb128 0x49
 4180 0189 13       		.uleb128 0x13
 4181 018a 02       		.uleb128 0x2
 4182 018b 18       		.uleb128 0x18
 4183 018c 00       		.byte	0
 4184 018d 00       		.byte	0
 4185 018e 18       		.uleb128 0x18
 4186 018f 34       		.uleb128 0x34
 4187 0190 00       		.byte	0
 4188 0191 03       		.uleb128 0x3
 4189 0192 0E       		.uleb128 0xe
 4190 0193 3A       		.uleb128 0x3a
 4191 0194 0B       		.uleb128 0xb
 4192 0195 3B       		.uleb128 0x3b
 4193 0196 0B       		.uleb128 0xb
 4194 0197 49       		.uleb128 0x49
 4195 0198 13       		.uleb128 0x13
 4196 0199 3F       		.uleb128 0x3f
 4197 019a 19       		.uleb128 0x19
 4198 019b 02       		.uleb128 0x2
 4199 019c 18       		.uleb128 0x18
 4200 019d 00       		.byte	0
 4201 019e 00       		.byte	0
 4202 019f 19       		.uleb128 0x19
 4203 01a0 26       		.uleb128 0x26
 4204 01a1 00       		.byte	0
 4205 01a2 49       		.uleb128 0x49
 4206 01a3 13       		.uleb128 0x13
 4207 01a4 00       		.byte	0
 4208 01a5 00       		.byte	0
 4209 01a6 00       		.byte	0
 4210              		.section	.debug_aranges,"",%progbits
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccaiT5A1.s 			page 130


 4211 0000 7C010000 		.4byte	0x17c
 4212 0004 0200     		.2byte	0x2
 4213 0006 00000000 		.4byte	.Ldebug_info0
 4214 000a 04       		.byte	0x4
 4215 000b 00       		.byte	0
 4216 000c 0000     		.2byte	0
 4217 000e 0000     		.2byte	0
 4218 0010 00000000 		.4byte	.LFB0
 4219 0014 1C000000 		.4byte	.LFE0-.LFB0
 4220 0018 00000000 		.4byte	.LFB1
 4221 001c 1C000000 		.4byte	.LFE1-.LFB1
 4222 0020 00000000 		.4byte	.LFB2
 4223 0024 48000000 		.4byte	.LFE2-.LFB2
 4224 0028 00000000 		.4byte	.LFB3
 4225 002c 50000000 		.4byte	.LFE3-.LFB3
 4226 0030 00000000 		.4byte	.LFB4
 4227 0034 34000000 		.4byte	.LFE4-.LFB4
 4228 0038 00000000 		.4byte	.LFB5
 4229 003c 48000000 		.4byte	.LFE5-.LFB5
 4230 0040 00000000 		.4byte	.LFB6
 4231 0044 E4010000 		.4byte	.LFE6-.LFB6
 4232 0048 00000000 		.4byte	.LFB7
 4233 004c 64000000 		.4byte	.LFE7-.LFB7
 4234 0050 00000000 		.4byte	.LFB8
 4235 0054 2C000000 		.4byte	.LFE8-.LFB8
 4236 0058 00000000 		.4byte	.LFB9
 4237 005c 18000000 		.4byte	.LFE9-.LFB9
 4238 0060 00000000 		.4byte	.LFB10
 4239 0064 14000000 		.4byte	.LFE10-.LFB10
 4240 0068 00000000 		.4byte	.LFB11
 4241 006c 30000000 		.4byte	.LFE11-.LFB11
 4242 0070 00000000 		.4byte	.LFB12
 4243 0074 24000000 		.4byte	.LFE12-.LFB12
 4244 0078 00000000 		.4byte	.LFB13
 4245 007c 1C000000 		.4byte	.LFE13-.LFB13
 4246 0080 00000000 		.4byte	.LFB14
 4247 0084 48000000 		.4byte	.LFE14-.LFB14
 4248 0088 00000000 		.4byte	.LFB15
 4249 008c 34000000 		.4byte	.LFE15-.LFB15
 4250 0090 00000000 		.4byte	.LFB16
 4251 0094 4C000000 		.4byte	.LFE16-.LFB16
 4252 0098 00000000 		.4byte	.LFB17
 4253 009c 36000000 		.4byte	.LFE17-.LFB17
 4254 00a0 00000000 		.4byte	.LFB18
 4255 00a4 A8000000 		.4byte	.LFE18-.LFB18
 4256 00a8 00000000 		.4byte	.LFB19
 4257 00ac 58000000 		.4byte	.LFE19-.LFB19
 4258 00b0 00000000 		.4byte	.LFB20
 4259 00b4 2C000000 		.4byte	.LFE20-.LFB20
 4260 00b8 00000000 		.4byte	.LFB21
 4261 00bc 30000000 		.4byte	.LFE21-.LFB21
 4262 00c0 00000000 		.4byte	.LFB22
 4263 00c4 2C000000 		.4byte	.LFE22-.LFB22
 4264 00c8 00000000 		.4byte	.LFB23
 4265 00cc 2C000000 		.4byte	.LFE23-.LFB23
 4266 00d0 00000000 		.4byte	.LFB24
 4267 00d4 2C000000 		.4byte	.LFE24-.LFB24
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccaiT5A1.s 			page 131


 4268 00d8 00000000 		.4byte	.LFB25
 4269 00dc 16000000 		.4byte	.LFE25-.LFB25
 4270 00e0 00000000 		.4byte	.LFB26
 4271 00e4 24000000 		.4byte	.LFE26-.LFB26
 4272 00e8 00000000 		.4byte	.LFB27
 4273 00ec 4C000000 		.4byte	.LFE27-.LFB27
 4274 00f0 00000000 		.4byte	.LFB28
 4275 00f4 28000000 		.4byte	.LFE28-.LFB28
 4276 00f8 00000000 		.4byte	.LFB29
 4277 00fc 84000000 		.4byte	.LFE29-.LFB29
 4278 0100 00000000 		.4byte	.LFB30
 4279 0104 24000000 		.4byte	.LFE30-.LFB30
 4280 0108 00000000 		.4byte	.LFB31
 4281 010c 5C000000 		.4byte	.LFE31-.LFB31
 4282 0110 00000000 		.4byte	.LFB32
 4283 0114 20000000 		.4byte	.LFE32-.LFB32
 4284 0118 00000000 		.4byte	.LFB33
 4285 011c 1C000000 		.4byte	.LFE33-.LFB33
 4286 0120 00000000 		.4byte	.LFB34
 4287 0124 1C000000 		.4byte	.LFE34-.LFB34
 4288 0128 00000000 		.4byte	.LFB35
 4289 012c 1C000000 		.4byte	.LFE35-.LFB35
 4290 0130 00000000 		.4byte	.LFB36
 4291 0134 20000000 		.4byte	.LFE36-.LFB36
 4292 0138 00000000 		.4byte	.LFB37
 4293 013c 18000000 		.4byte	.LFE37-.LFB37
 4294 0140 00000000 		.4byte	.LFB38
 4295 0144 18000000 		.4byte	.LFE38-.LFB38
 4296 0148 00000000 		.4byte	.LFB39
 4297 014c 18000000 		.4byte	.LFE39-.LFB39
 4298 0150 00000000 		.4byte	.LFB40
 4299 0154 14000000 		.4byte	.LFE40-.LFB40
 4300 0158 00000000 		.4byte	.LFB41
 4301 015c 2C000000 		.4byte	.LFE41-.LFB41
 4302 0160 00000000 		.4byte	.LFB42
 4303 0164 1C000000 		.4byte	.LFE42-.LFB42
 4304 0168 00000000 		.4byte	.LFB43
 4305 016c 44000000 		.4byte	.LFE43-.LFB43
 4306 0170 00000000 		.4byte	.LFB44
 4307 0174 C0000000 		.4byte	.LFE44-.LFB44
 4308 0178 00000000 		.4byte	0
 4309 017c 00000000 		.4byte	0
 4310              		.section	.debug_ranges,"",%progbits
 4311              	.Ldebug_ranges0:
 4312 0000 00000000 		.4byte	.LFB0
 4313 0004 1C000000 		.4byte	.LFE0
 4314 0008 00000000 		.4byte	.LFB1
 4315 000c 1C000000 		.4byte	.LFE1
 4316 0010 00000000 		.4byte	.LFB2
 4317 0014 48000000 		.4byte	.LFE2
 4318 0018 00000000 		.4byte	.LFB3
 4319 001c 50000000 		.4byte	.LFE3
 4320 0020 00000000 		.4byte	.LFB4
 4321 0024 34000000 		.4byte	.LFE4
 4322 0028 00000000 		.4byte	.LFB5
 4323 002c 48000000 		.4byte	.LFE5
 4324 0030 00000000 		.4byte	.LFB6
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccaiT5A1.s 			page 132


 4325 0034 E4010000 		.4byte	.LFE6
 4326 0038 00000000 		.4byte	.LFB7
 4327 003c 64000000 		.4byte	.LFE7
 4328 0040 00000000 		.4byte	.LFB8
 4329 0044 2C000000 		.4byte	.LFE8
 4330 0048 00000000 		.4byte	.LFB9
 4331 004c 18000000 		.4byte	.LFE9
 4332 0050 00000000 		.4byte	.LFB10
 4333 0054 14000000 		.4byte	.LFE10
 4334 0058 00000000 		.4byte	.LFB11
 4335 005c 30000000 		.4byte	.LFE11
 4336 0060 00000000 		.4byte	.LFB12
 4337 0064 24000000 		.4byte	.LFE12
 4338 0068 00000000 		.4byte	.LFB13
 4339 006c 1C000000 		.4byte	.LFE13
 4340 0070 00000000 		.4byte	.LFB14
 4341 0074 48000000 		.4byte	.LFE14
 4342 0078 00000000 		.4byte	.LFB15
 4343 007c 34000000 		.4byte	.LFE15
 4344 0080 00000000 		.4byte	.LFB16
 4345 0084 4C000000 		.4byte	.LFE16
 4346 0088 00000000 		.4byte	.LFB17
 4347 008c 36000000 		.4byte	.LFE17
 4348 0090 00000000 		.4byte	.LFB18
 4349 0094 A8000000 		.4byte	.LFE18
 4350 0098 00000000 		.4byte	.LFB19
 4351 009c 58000000 		.4byte	.LFE19
 4352 00a0 00000000 		.4byte	.LFB20
 4353 00a4 2C000000 		.4byte	.LFE20
 4354 00a8 00000000 		.4byte	.LFB21
 4355 00ac 30000000 		.4byte	.LFE21
 4356 00b0 00000000 		.4byte	.LFB22
 4357 00b4 2C000000 		.4byte	.LFE22
 4358 00b8 00000000 		.4byte	.LFB23
 4359 00bc 2C000000 		.4byte	.LFE23
 4360 00c0 00000000 		.4byte	.LFB24
 4361 00c4 2C000000 		.4byte	.LFE24
 4362 00c8 00000000 		.4byte	.LFB25
 4363 00cc 16000000 		.4byte	.LFE25
 4364 00d0 00000000 		.4byte	.LFB26
 4365 00d4 24000000 		.4byte	.LFE26
 4366 00d8 00000000 		.4byte	.LFB27
 4367 00dc 4C000000 		.4byte	.LFE27
 4368 00e0 00000000 		.4byte	.LFB28
 4369 00e4 28000000 		.4byte	.LFE28
 4370 00e8 00000000 		.4byte	.LFB29
 4371 00ec 84000000 		.4byte	.LFE29
 4372 00f0 00000000 		.4byte	.LFB30
 4373 00f4 24000000 		.4byte	.LFE30
 4374 00f8 00000000 		.4byte	.LFB31
 4375 00fc 5C000000 		.4byte	.LFE31
 4376 0100 00000000 		.4byte	.LFB32
 4377 0104 20000000 		.4byte	.LFE32
 4378 0108 00000000 		.4byte	.LFB33
 4379 010c 1C000000 		.4byte	.LFE33
 4380 0110 00000000 		.4byte	.LFB34
 4381 0114 1C000000 		.4byte	.LFE34
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccaiT5A1.s 			page 133


 4382 0118 00000000 		.4byte	.LFB35
 4383 011c 1C000000 		.4byte	.LFE35
 4384 0120 00000000 		.4byte	.LFB36
 4385 0124 20000000 		.4byte	.LFE36
 4386 0128 00000000 		.4byte	.LFB37
 4387 012c 18000000 		.4byte	.LFE37
 4388 0130 00000000 		.4byte	.LFB38
 4389 0134 18000000 		.4byte	.LFE38
 4390 0138 00000000 		.4byte	.LFB39
 4391 013c 18000000 		.4byte	.LFE39
 4392 0140 00000000 		.4byte	.LFB40
 4393 0144 14000000 		.4byte	.LFE40
 4394 0148 00000000 		.4byte	.LFB41
 4395 014c 2C000000 		.4byte	.LFE41
 4396 0150 00000000 		.4byte	.LFB42
 4397 0154 1C000000 		.4byte	.LFE42
 4398 0158 00000000 		.4byte	.LFB43
 4399 015c 44000000 		.4byte	.LFE43
 4400 0160 00000000 		.4byte	.LFB44
 4401 0164 C0000000 		.4byte	.LFE44
 4402 0168 00000000 		.4byte	0
 4403 016c 00000000 		.4byte	0
 4404              		.section	.debug_line,"",%progbits
 4405              	.Ldebug_line0:
 4406 0000 77040000 		.section	.debug_str,"MS",%progbits,1
 4406      02004D00 
 4406      00000201 
 4406      FB0E0D00 
 4406      01010101 
 4407              	.LASF54:
 4408 0000 72616D56 		.ascii	"ramVectorTable\000"
 4408      6563746F 
 4408      72546162 
 4408      6C6500
 4409              	.LASF34:
 4410 000f 62675472 		.ascii	"bgTrim4\000"
 4410      696D3400 
 4411              	.LASF10:
 4412 0017 75696E74 		.ascii	"uint16\000"
 4412      313600
 4413              	.LASF47:
 4414 001e 696E7453 		.ascii	"intState\000"
 4414      74617465 
 4414      00
 4415              	.LASF25:
 4416 0027 43795379 		.ascii	"CySysClkWriteHfclkDirect\000"
 4416      73436C6B 
 4416      57726974 
 4416      65486663 
 4416      6C6B4469 
 4417              	.LASF100:
 4418 0040 43795379 		.ascii	"CySysClkPumpConfig\000"
 4418      73436C6B 
 4418      50756D70 
 4418      436F6E66 
 4418      696700
 4419              	.LASF53:
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccaiT5A1.s 			page 134


 4420 0053 6F6C6449 		.ascii	"oldIsr\000"
 4420      737200
 4421              	.LASF89:
 4422 005a 72657456 		.ascii	"retVal\000"
 4422      616C00
 4423              	.LASF46:
 4424 0061 43794469 		.ascii	"CyDisableInts\000"
 4424      7361626C 
 4424      65496E74 
 4424      7300
 4425              	.LASF103:
 4426 006f 443A5C55 		.ascii	"D:\\Users\\jagumiel\\Documents\\PSoC Creator\\PSoC-"
 4426      73657273 
 4426      5C6A6167 
 4426      756D6965 
 4426      6C5C446F 
 4427 009d 3130315C 		.ascii	"101\\PSoC-101\\TrainingProjects\\ADC-PWM-UART.cydsn"
 4427      50536F43 
 4427      2D313031 
 4427      5C547261 
 4427      696E696E 
 4428 00cd 00       		.ascii	"\000"
 4429              	.LASF37:
 4430 00ce 63757272 		.ascii	"currentImoTrim2Value\000"
 4430      656E7449 
 4430      6D6F5472 
 4430      696D3256 
 4430      616C7565 
 4431              	.LASF7:
 4432 00e3 6C6F6E67 		.ascii	"long long unsigned int\000"
 4432      206C6F6E 
 4432      6720756E 
 4432      7369676E 
 4432      65642069 
 4433              	.LASF98:
 4434 00fa 43795379 		.ascii	"CySysTickInitVar\000"
 4434      73546963 
 4434      6B496E69 
 4434      74566172 
 4434      00
 4435              	.LASF48:
 4436 010b 4379456E 		.ascii	"CyEnableInts\000"
 4436      61626C65 
 4436      496E7473 
 4436      00
 4437              	.LASF69:
 4438 0118 4379536F 		.ascii	"CySoftwareReset\000"
 4438      66747761 
 4438      72655265 
 4438      73657400 
 4439              	.LASF79:
 4440 0128 43795379 		.ascii	"CySysTickEnableInterrupt\000"
 4440      73546963 
 4440      6B456E61 
 4440      626C6549 
 4440      6E746572 
 4441              	.LASF64:
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccaiT5A1.s 			page 135


 4442 0141 4379496E 		.ascii	"CyIntGetState\000"
 4442      74476574 
 4442      53746174 
 4442      6500
 4443              	.LASF6:
 4444 014f 6C6F6E67 		.ascii	"long long int\000"
 4444      206C6F6E 
 4444      6720696E 
 4444      7400
 4445              	.LASF0:
 4446 015d 7369676E 		.ascii	"signed char\000"
 4446      65642063 
 4446      68617200 
 4447              	.LASF33:
 4448 0169 66726571 		.ascii	"freq\000"
 4448      00
 4449              	.LASF74:
 4450 016e 43794465 		.ascii	"CyDelayFreq\000"
 4450      6C617946 
 4450      72657100 
 4451              	.LASF23:
 4452 017a 696E7465 		.ascii	"interruptState\000"
 4452      72727570 
 4452      74537461 
 4452      746500
 4453              	.LASF83:
 4454 0189 43795379 		.ascii	"CySysTickGetReload\000"
 4454      73546963 
 4454      6B476574 
 4454      52656C6F 
 4454      616400
 4455              	.LASF4:
 4456 019c 6C6F6E67 		.ascii	"long int\000"
 4456      20696E74 
 4456      00
 4457              	.LASF65:
 4458 01a5 4379496E 		.ascii	"CyIntDisable\000"
 4458      74446973 
 4458      61626C65 
 4458      00
 4459              	.LASF90:
 4460 01b2 43795379 		.ascii	"CySysTickGetCallback\000"
 4460      73546963 
 4460      6B476574 
 4460      43616C6C 
 4460      6261636B 
 4461              	.LASF9:
 4462 01c7 75696E74 		.ascii	"uint8\000"
 4462      3800
 4463              	.LASF95:
 4464 01cd 63796465 		.ascii	"cydelayFreqKhz\000"
 4464      6C617946 
 4464      7265714B 
 4464      687A00
 4465              	.LASF28:
 4466 01dc 656E6162 		.ascii	"enable\000"
 4466      6C6500
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccaiT5A1.s 			page 136


 4467              	.LASF13:
 4468 01e3 646F7562 		.ascii	"double\000"
 4468      6C6500
 4469              	.LASF60:
 4470 01ea 73686966 		.ascii	"shift\000"
 4470      7400
 4471              	.LASF41:
 4472 01f0 43795379 		.ascii	"CySysLvdClearInterrupt\000"
 4472      734C7664 
 4472      436C6561 
 4472      72496E74 
 4472      65727275 
 4473              	.LASF11:
 4474 0207 75696E74 		.ascii	"uint32\000"
 4474      333200
 4475              	.LASF49:
 4476 020e 6D61736B 		.ascii	"mask\000"
 4476      00
 4477              	.LASF42:
 4478 0213 43795379 		.ascii	"CySysClkGetSysclkSource\000"
 4478      73436C6B 
 4478      47657453 
 4478      7973636C 
 4478      6B536F75 
 4479              	.LASF62:
 4480 022b 4379496E 		.ascii	"CyIntGetPriority\000"
 4480      74476574 
 4480      5072696F 
 4480      72697479 
 4480      00
 4481              	.LASF97:
 4482 023c 63796465 		.ascii	"cydelay32kMs\000"
 4482      6C617933 
 4482      326B4D73 
 4482      00
 4483              	.LASF76:
 4484 0249 43795379 		.ascii	"CySysTickInit\000"
 4484      73546963 
 4484      6B496E69 
 4484      7400
 4485              	.LASF61:
 4486 0257 76616C75 		.ascii	"value\000"
 4486      6500
 4487              	.LASF91:
 4488 025d 43794765 		.ascii	"CyGetUniqueId\000"
 4488      74556E69 
 4488      71756549 
 4488      6400
 4489              	.LASF85:
 4490 026b 43795379 		.ascii	"CySysTickGetCountFlag\000"
 4490      73546963 
 4490      6B476574 
 4490      436F756E 
 4490      74466C61 
 4491              	.LASF8:
 4492 0281 756E7369 		.ascii	"unsigned int\000"
 4492      676E6564 
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccaiT5A1.s 			page 137


 4492      20696E74 
 4492      00
 4493              	.LASF86:
 4494 028e 43795379 		.ascii	"CySysTickClear\000"
 4494      73546963 
 4494      6B436C65 
 4494      617200
 4495              	.LASF5:
 4496 029d 6C6F6E67 		.ascii	"long unsigned int\000"
 4496      20756E73 
 4496      69676E65 
 4496      6420696E 
 4496      7400
 4497              	.LASF82:
 4498 02af 43795379 		.ascii	"CySysLvdGetInterruptSource\000"
 4498      734C7664 
 4498      47657449 
 4498      6E746572 
 4498      72757074 
 4499              	.LASF22:
 4500 02ca 43795379 		.ascii	"CySysClkImoStop\000"
 4500      73436C6B 
 4500      496D6F53 
 4500      746F7000 
 4501              	.LASF66:
 4502 02da 4379496E 		.ascii	"CyIntSetPending\000"
 4502      74536574 
 4502      50656E64 
 4502      696E6700 
 4503              	.LASF43:
 4504 02ea 43795379 		.ascii	"CySysGetResetReason\000"
 4504      73476574 
 4504      52657365 
 4504      74526561 
 4504      736F6E00 
 4505              	.LASF3:
 4506 02fe 73686F72 		.ascii	"short unsigned int\000"
 4506      7420756E 
 4506      7369676E 
 4506      65642069 
 4506      6E7400
 4507              	.LASF56:
 4508 0311 4379496E 		.ascii	"CyIntSetVector\000"
 4508      74536574 
 4508      56656374 
 4508      6F7200
 4509              	.LASF51:
 4510 0320 6E756D62 		.ascii	"number\000"
 4510      657200
 4511              	.LASF59:
 4512 0327 7072696F 		.ascii	"priority\000"
 4512      72697479 
 4512      00
 4513              	.LASF32:
 4514 0330 43795379 		.ascii	"CySysClkWriteImoFreq\000"
 4514      73436C6B 
 4514      57726974 
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccaiT5A1.s 			page 138


 4514      65496D6F 
 4514      46726571 
 4515              	.LASF101:
 4516 0345 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 4516      43313120 
 4516      352E342E 
 4516      31203230 
 4516      31363036 
 4517 0378 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 4517      20726576 
 4517      6973696F 
 4517      6E203233 
 4517      37373135 
 4518 03ab 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 4518      66756E63 
 4518      74696F6E 
 4518      2D736563 
 4518      74696F6E 
 4519              	.LASF50:
 4520 03d3 4379496E 		.ascii	"CyIntSetSysVector\000"
 4520      74536574 
 4520      53797356 
 4520      6563746F 
 4520      7200
 4521              	.LASF26:
 4522 03e5 43795379 		.ascii	"CySysEnablePumpClock\000"
 4522      73456E61 
 4522      626C6550 
 4522      756D7043 
 4522      6C6F636B 
 4523              	.LASF16:
 4524 03fa 72656733 		.ascii	"reg32\000"
 4524      3200
 4525              	.LASF75:
 4526 0400 43795379 		.ascii	"CySysTickStart\000"
 4526      73546963 
 4526      6B537461 
 4526      727400
 4527              	.LASF45:
 4528 040f 72657475 		.ascii	"returnStatus\000"
 4528      726E5374 
 4528      61747573 
 4528      00
 4529              	.LASF19:
 4530 041c 73697A65 		.ascii	"sizetype\000"
 4530      74797065 
 4530      00
 4531              	.LASF67:
 4532 0425 4379496E 		.ascii	"CyIntClearPending\000"
 4532      74436C65 
 4532      61725065 
 4532      6E64696E 
 4532      6700
 4533              	.LASF18:
 4534 0437 6C6F6E67 		.ascii	"long double\000"
 4534      20646F75 
 4534      626C6500 
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccaiT5A1.s 			page 139


 4535              	.LASF52:
 4536 0443 61646472 		.ascii	"address\000"
 4536      65737300 
 4537              	.LASF35:
 4538 044b 62675472 		.ascii	"bgTrim5\000"
 4538      696D3500 
 4539              	.LASF29:
 4540 0453 73797363 		.ascii	"sysclkSource\000"
 4540      6C6B536F 
 4540      75726365 
 4540      00
 4541              	.LASF88:
 4542 0460 66756E63 		.ascii	"function\000"
 4542      74696F6E 
 4542      00
 4543              	.LASF99:
 4544 0469 6379496D 		.ascii	"cyImoFreqMhz2Reg\000"
 4544      6F467265 
 4544      714D687A 
 4544      32526567 
 4544      00
 4545              	.LASF84:
 4546 047a 43795379 		.ascii	"CySysTickGetValue\000"
 4546      73546963 
 4546      6B476574 
 4546      56616C75 
 4546      6500
 4547              	.LASF94:
 4548 048c 63796465 		.ascii	"cydelayFreqHz\000"
 4548      6C617946 
 4548      72657148 
 4548      7A00
 4549              	.LASF58:
 4550 049a 4379496E 		.ascii	"CyIntSetPriority\000"
 4550      74536574 
 4550      5072696F 
 4550      72697479 
 4550      00
 4551              	.LASF12:
 4552 04ab 666C6F61 		.ascii	"float\000"
 4552      7400
 4553              	.LASF38:
 4554 04b1 43795379 		.ascii	"CySysLvdEnable\000"
 4554      734C7664 
 4554      456E6162 
 4554      6C6500
 4555              	.LASF20:
 4556 04c0 63795379 		.ascii	"cySysTickCallback\000"
 4556      73546963 
 4556      6B43616C 
 4556      6C626163 
 4556      6B00
 4557              	.LASF57:
 4558 04d2 4379496E 		.ascii	"CyIntGetVector\000"
 4558      74476574 
 4558      56656374 
 4558      6F7200
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccaiT5A1.s 			page 140


 4559              	.LASF71:
 4560 04e1 6D696C6C 		.ascii	"milliseconds\000"
 4560      69736563 
 4560      6F6E6473 
 4560      00
 4561              	.LASF15:
 4562 04ee 72656738 		.ascii	"reg8\000"
 4562      00
 4563              	.LASF39:
 4564 04f3 74687265 		.ascii	"threshold\000"
 4564      73686F6C 
 4564      6400
 4565              	.LASF68:
 4566 04fd 43794861 		.ascii	"CyHalt\000"
 4566      6C7400
 4567              	.LASF1:
 4568 0504 756E7369 		.ascii	"unsigned char\000"
 4568      676E6564 
 4568      20636861 
 4568      7200
 4569              	.LASF2:
 4570 0512 73686F72 		.ascii	"short int\000"
 4570      7420696E 
 4570      7400
 4571              	.LASF63:
 4572 051c 4379496E 		.ascii	"CyIntEnable\000"
 4572      74456E61 
 4572      626C6500 
 4573              	.LASF55:
 4574 0528 4379496E 		.ascii	"CyIntGetSysVector\000"
 4574      74476574 
 4574      53797356 
 4574      6563746F 
 4574      7200
 4575              	.LASF27:
 4576 053a 636C6B53 		.ascii	"clkSelect\000"
 4576      656C6563 
 4576      7400
 4577              	.LASF72:
 4578 0544 43794465 		.ascii	"CyDelayUs\000"
 4578      6C617955 
 4578      7300
 4579              	.LASF44:
 4580 054e 72656173 		.ascii	"reason\000"
 4580      6F6E00
 4581              	.LASF14:
 4582 0555 63686172 		.ascii	"char\000"
 4582      00
 4583              	.LASF17:
 4584 055a 63796973 		.ascii	"cyisraddress\000"
 4584      72616464 
 4584      72657373 
 4584      00
 4585              	.LASF77:
 4586 0567 43795379 		.ascii	"CySysTickEnable\000"
 4586      73546963 
 4586      6B456E61 
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccaiT5A1.s 			page 141


 4586      626C6500 
 4587              	.LASF30:
 4588 0577 43795379 		.ascii	"CySysClkWriteSysclkDiv\000"
 4588      73436C6B 
 4588      57726974 
 4588      65537973 
 4588      636C6B44 
 4589              	.LASF87:
 4590 058e 43795379 		.ascii	"CySysTickSetCallback\000"
 4590      73546963 
 4590      6B536574 
 4590      43616C6C 
 4590      6261636B 
 4591              	.LASF93:
 4592 05a3 43795379 		.ascii	"CySysTickCallbacks\000"
 4592      73546963 
 4592      6B43616C 
 4592      6C626163 
 4592      6B7300
 4593              	.LASF92:
 4594 05b6 756E6971 		.ascii	"uniqueId\000"
 4594      75654964 
 4594      00
 4595              	.LASF70:
 4596 05bf 43794465 		.ascii	"CyDelay\000"
 4596      6C617900 
 4597              	.LASF80:
 4598 05c7 43795379 		.ascii	"CySysTickDisableInterrupt\000"
 4598      73546963 
 4598      6B446973 
 4598      61626C65 
 4598      496E7465 
 4599              	.LASF40:
 4600 05e1 43795379 		.ascii	"CySysLvdDisable\000"
 4600      734C7664 
 4600      44697361 
 4600      626C6500 
 4601              	.LASF96:
 4602 05f1 63796465 		.ascii	"cydelayFreqMhz\000"
 4602      6C617946 
 4602      7265714D 
 4602      687A00
 4603              	.LASF78:
 4604 0600 43795379 		.ascii	"CySysTickStop\000"
 4604      73546963 
 4604      6B53746F 
 4604      7000
 4605              	.LASF31:
 4606 060e 64697669 		.ascii	"divider\000"
 4606      64657200 
 4607              	.LASF21:
 4608 0616 43795379 		.ascii	"CySysClkImoStart\000"
 4608      73436C6B 
 4608      496D6F53 
 4608      74617274 
 4608      00
 4609              	.LASF36:
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccaiT5A1.s 			page 142


 4610 0627 6E657749 		.ascii	"newImoTrim2Value\000"
 4610      6D6F5472 
 4610      696D3256 
 4610      616C7565 
 4610      00
 4611              	.LASF102:
 4612 0638 47656E65 		.ascii	"Generated_Source\\PSoC4\\CyLib.c\000"
 4612      72617465 
 4612      645F536F 
 4612      75726365 
 4612      5C50536F 
 4613              	.LASF73:
 4614 0657 6D696372 		.ascii	"microseconds\000"
 4614      6F736563 
 4614      6F6E6473 
 4614      00
 4615              	.LASF24:
 4616 0664 746D7052 		.ascii	"tmpReg\000"
 4616      656700
 4617              	.LASF81:
 4618 066b 43795379 		.ascii	"CySysTickSetReload\000"
 4618      73546963 
 4618      6B536574 
 4618      52656C6F 
 4618      616400
 4619              	.LASF104:
 4620 067e 43795379 		.ascii	"CySysTickServiceCallbacks\000"
 4620      73546963 
 4620      6B536572 
 4620      76696365 
 4620      43616C6C 
 4621              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
