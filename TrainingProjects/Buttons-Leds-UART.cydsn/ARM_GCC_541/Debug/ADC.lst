ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccVMELUE.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"ADC.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	ADC_initVar
  20              		.bss
  21              		.type	ADC_initVar, %object
  22              		.size	ADC_initVar, 1
  23              	ADC_initVar:
  24 0000 00       		.space	1
  25              		.comm	ADC_offset,2,4
  26              		.comm	ADC_countsPer10Volt,4,4
  27              		.section	.rodata
  28              		.align	2
  29              		.type	ADC_channelsConfig, %object
  30              		.size	ADC_channelsConfig, 4
  31              	ADC_channelsConfig:
  32 0000 02040000 		.word	1026
  33              		.section	.text.ADC_Start,"ax",%progbits
  34              		.align	2
  35              		.global	ADC_Start
  36              		.code	16
  37              		.thumb_func
  38              		.type	ADC_Start, %function
  39              	ADC_Start:
  40              	.LFB0:
  41              		.file 1 "Generated_Source\\PSoC4\\ADC.c"
   1:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
   2:Generated_Source\PSoC4/ADC.c **** * File Name: ADC.c
   3:Generated_Source\PSoC4/ADC.c **** * Version 2.50
   4:Generated_Source\PSoC4/ADC.c **** *
   5:Generated_Source\PSoC4/ADC.c **** * Description:
   6:Generated_Source\PSoC4/ADC.c **** *  This file provides the source code to the API for the Sequencing Successive
   7:Generated_Source\PSoC4/ADC.c **** *  Approximation ADC Component Component.
   8:Generated_Source\PSoC4/ADC.c **** *
   9:Generated_Source\PSoC4/ADC.c **** * Note:
  10:Generated_Source\PSoC4/ADC.c **** *
  11:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
  12:Generated_Source\PSoC4/ADC.c **** * Copyright 2008-2017, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC4/ADC.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC4/ADC.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC4/ADC.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccVMELUE.s 			page 2


  17:Generated_Source\PSoC4/ADC.c **** 
  18:Generated_Source\PSoC4/ADC.c **** #include "ADC.h"
  19:Generated_Source\PSoC4/ADC.c **** 
  20:Generated_Source\PSoC4/ADC.c **** 
  21:Generated_Source\PSoC4/ADC.c **** /***************************************
  22:Generated_Source\PSoC4/ADC.c **** * Global data allocation
  23:Generated_Source\PSoC4/ADC.c **** ***************************************/
  24:Generated_Source\PSoC4/ADC.c **** uint8 ADC_initVar = 0u;
  25:Generated_Source\PSoC4/ADC.c **** volatile int16 ADC_offset[ADC_TOTAL_CHANNELS_NUM];
  26:Generated_Source\PSoC4/ADC.c **** volatile int32 ADC_countsPer10Volt[ADC_TOTAL_CHANNELS_NUM];   /* Gain compensation */
  27:Generated_Source\PSoC4/ADC.c **** 
  28:Generated_Source\PSoC4/ADC.c **** 
  29:Generated_Source\PSoC4/ADC.c **** /***************************************
  30:Generated_Source\PSoC4/ADC.c **** * Local data allocation
  31:Generated_Source\PSoC4/ADC.c **** ***************************************/
  32:Generated_Source\PSoC4/ADC.c **** /* Channels configuration generated by customiser */
  33:Generated_Source\PSoC4/ADC.c **** static const uint32 CYCODE ADC_channelsConfig[] = { 0x00000402u };
  34:Generated_Source\PSoC4/ADC.c **** 
  35:Generated_Source\PSoC4/ADC.c **** 
  36:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
  37:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_Start
  38:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
  39:Generated_Source\PSoC4/ADC.c **** *
  40:Generated_Source\PSoC4/ADC.c **** * Summary:
  41:Generated_Source\PSoC4/ADC.c **** *  Performs all required initialization for this component
  42:Generated_Source\PSoC4/ADC.c **** *  and enables the power. The power will be set to the appropriate
  43:Generated_Source\PSoC4/ADC.c **** *  power based on the clock frequency.
  44:Generated_Source\PSoC4/ADC.c **** *
  45:Generated_Source\PSoC4/ADC.c **** * Parameters:
  46:Generated_Source\PSoC4/ADC.c **** *  None.
  47:Generated_Source\PSoC4/ADC.c **** *
  48:Generated_Source\PSoC4/ADC.c **** * Return:
  49:Generated_Source\PSoC4/ADC.c **** *  None.
  50:Generated_Source\PSoC4/ADC.c **** *
  51:Generated_Source\PSoC4/ADC.c **** * Global variables:
  52:Generated_Source\PSoC4/ADC.c **** *  The ADC_initVar variable is used to indicate when/if initial
  53:Generated_Source\PSoC4/ADC.c **** *  configuration of this component has happened. The variable is initialized to
  54:Generated_Source\PSoC4/ADC.c **** *  zero and set to 1 the first time ADC_Start() is called. This allows for
  55:Generated_Source\PSoC4/ADC.c **** *  component Re-Start without re-initialization in all subsequent calls to the
  56:Generated_Source\PSoC4/ADC.c **** *  ADC_Start() routine.
  57:Generated_Source\PSoC4/ADC.c **** *  If re-initialization of the component is required the variable should be set
  58:Generated_Source\PSoC4/ADC.c **** *  to zero before call of ADC_Start() routine, or the user may call
  59:Generated_Source\PSoC4/ADC.c **** *  ADC_Init() and ADC_Enable() as done in the
  60:Generated_Source\PSoC4/ADC.c **** *  ADC_Start() routine.
  61:Generated_Source\PSoC4/ADC.c **** *
  62:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
  63:Generated_Source\PSoC4/ADC.c **** void ADC_Start(void)
  64:Generated_Source\PSoC4/ADC.c **** {
  42              		.loc 1 64 0
  43              		.cfi_startproc
  44              		@ args = 0, pretend = 0, frame = 0
  45              		@ frame_needed = 1, uses_anonymous_args = 0
  46 0000 80B5     		push	{r7, lr}
  47              		.cfi_def_cfa_offset 8
  48              		.cfi_offset 7, -8
  49              		.cfi_offset 14, -4
  50 0002 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccVMELUE.s 			page 3


  51              		.cfi_def_cfa_register 7
  65:Generated_Source\PSoC4/ADC.c ****     /* If not Initialized then initialize all required hardware and software */
  66:Generated_Source\PSoC4/ADC.c ****     if(ADC_initVar == 0u)
  52              		.loc 1 66 0
  53 0004 064B     		ldr	r3, .L3
  54 0006 1B78     		ldrb	r3, [r3]
  55 0008 002B     		cmp	r3, #0
  56 000a 04D1     		bne	.L2
  67:Generated_Source\PSoC4/ADC.c ****     {
  68:Generated_Source\PSoC4/ADC.c ****         ADC_Init();
  57              		.loc 1 68 0
  58 000c FFF7FEFF 		bl	ADC_Init
  69:Generated_Source\PSoC4/ADC.c ****         ADC_initVar = 1u;
  59              		.loc 1 69 0
  60 0010 034B     		ldr	r3, .L3
  61 0012 0122     		movs	r2, #1
  62 0014 1A70     		strb	r2, [r3]
  63              	.L2:
  70:Generated_Source\PSoC4/ADC.c ****     }
  71:Generated_Source\PSoC4/ADC.c ****     ADC_Enable();
  64              		.loc 1 71 0
  65 0016 FFF7FEFF 		bl	ADC_Enable
  72:Generated_Source\PSoC4/ADC.c **** }
  66              		.loc 1 72 0
  67 001a C046     		nop
  68 001c BD46     		mov	sp, r7
  69              		@ sp needed
  70 001e 80BD     		pop	{r7, pc}
  71              	.L4:
  72              		.align	2
  73              	.L3:
  74 0020 00000000 		.word	ADC_initVar
  75              		.cfi_endproc
  76              	.LFE0:
  77              		.size	ADC_Start, .-ADC_Start
  78              		.global	__aeabi_idiv
  79              		.section	.text.ADC_Init,"ax",%progbits
  80              		.align	2
  81              		.global	ADC_Init
  82              		.code	16
  83              		.thumb_func
  84              		.type	ADC_Init, %function
  85              	ADC_Init:
  86              	.LFB1:
  73:Generated_Source\PSoC4/ADC.c **** 
  74:Generated_Source\PSoC4/ADC.c **** 
  75:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
  76:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_Init
  77:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
  78:Generated_Source\PSoC4/ADC.c **** *
  79:Generated_Source\PSoC4/ADC.c **** * Summary:
  80:Generated_Source\PSoC4/ADC.c **** *  Initialize component's parameters to the parameters set by user in the
  81:Generated_Source\PSoC4/ADC.c **** *  customizer of the component placed onto schematic. Usually called in
  82:Generated_Source\PSoC4/ADC.c **** *  ADC_Start().
  83:Generated_Source\PSoC4/ADC.c **** *
  84:Generated_Source\PSoC4/ADC.c **** * Parameters:
  85:Generated_Source\PSoC4/ADC.c **** *  None.
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccVMELUE.s 			page 4


  86:Generated_Source\PSoC4/ADC.c **** *
  87:Generated_Source\PSoC4/ADC.c **** * Return:
  88:Generated_Source\PSoC4/ADC.c **** *  None.
  89:Generated_Source\PSoC4/ADC.c **** *
  90:Generated_Source\PSoC4/ADC.c **** * Global variables:
  91:Generated_Source\PSoC4/ADC.c **** *  The ADC_offset variable is initialized.
  92:Generated_Source\PSoC4/ADC.c **** *
  93:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
  94:Generated_Source\PSoC4/ADC.c **** void ADC_Init(void)
  95:Generated_Source\PSoC4/ADC.c **** {
  87              		.loc 1 95 0
  88              		.cfi_startproc
  89              		@ args = 0, pretend = 0, frame = 16
  90              		@ frame_needed = 1, uses_anonymous_args = 0
  91 0000 80B5     		push	{r7, lr}
  92              		.cfi_def_cfa_offset 8
  93              		.cfi_offset 7, -8
  94              		.cfi_offset 14, -4
  95 0002 84B0     		sub	sp, sp, #16
  96              		.cfi_def_cfa_offset 24
  97 0004 00AF     		add	r7, sp, #0
  98              		.cfi_def_cfa_register 7
  96:Generated_Source\PSoC4/ADC.c ****     uint32 chNum;
  97:Generated_Source\PSoC4/ADC.c ****     uint32 tmpRegVal;
  98:Generated_Source\PSoC4/ADC.c ****     int32 counts;
  99:Generated_Source\PSoC4/ADC.c **** 
 100:Generated_Source\PSoC4/ADC.c ****     #if(ADC_TOTAL_CHANNELS_NUM > 1u)
 101:Generated_Source\PSoC4/ADC.c ****         static const uint8 CYCODE ADC_InputsPlacement[] =
 102:Generated_Source\PSoC4/ADC.c ****         {
 103:Generated_Source\PSoC4/ADC.c ****             (uint8)(ADC_cy_psoc4_sarmux_8__CH_0_PORT << 4u) |
 104:Generated_Source\PSoC4/ADC.c ****             (uint8)ADC_cy_psoc4_sarmux_8__CH_0_PIN
 105:Generated_Source\PSoC4/ADC.c ****             ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_1_PORT << 4u) |
 106:Generated_Source\PSoC4/ADC.c ****              (uint8)ADC_cy_psoc4_sarmux_8__CH_1_PIN
 107:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 2u)
 108:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_2_PORT << 4u) |
 109:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_2_PIN
 110:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 2u */
 111:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 3u)
 112:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_3_PORT << 4u) |
 113:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_3_PIN
 114:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 3u */
 115:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 4u)
 116:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_4_PORT << 4u) |
 117:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_4_PIN
 118:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 4u */
 119:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 5u)
 120:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_5_PORT << 4u) |
 121:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_5_PIN
 122:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 5u */
 123:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 6u)
 124:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_6_PORT << 4u) |
 125:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_6_PIN
 126:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 6u */
 127:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 7u)
 128:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_7_PORT << 4u) |
 129:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_7_PIN
 130:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 7u */
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccVMELUE.s 			page 5


 131:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 8u)
 132:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_8_PORT << 4u) |
 133:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_8_PIN
 134:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 8u */
 135:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 9u)
 136:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_9_PORT << 4u) |
 137:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_9_PIN
 138:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 9u */
 139:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 10u)
 140:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_10_PORT << 4u) |
 141:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_10_PIN
 142:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 10u */
 143:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 11u)
 144:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_11_PORT << 4u) |
 145:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_11_PIN
 146:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 11u */
 147:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 12u)
 148:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_12_PORT << 4u) |
 149:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_12_PIN
 150:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 12u */
 151:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 13u)
 152:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_13_PORT << 4u) |
 153:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_13_PIN
 154:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 13u */
 155:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 14u)
 156:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_14_PORT << 4u) |
 157:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_14_PIN
 158:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 14u */
 159:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 15u)
 160:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_15_PORT << 4u) |
 161:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_15_PIN
 162:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 15u */
 163:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 16u)
 164:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_16_PORT << 4u) |
 165:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_16_PIN
 166:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 16u */
 167:Generated_Source\PSoC4/ADC.c ****         };
 168:Generated_Source\PSoC4/ADC.c ****     #endif /* End ADC_TOTAL_CHANNELS_NUM > 1u */
 169:Generated_Source\PSoC4/ADC.c **** 
 170:Generated_Source\PSoC4/ADC.c ****     #if(ADC_IRQ_REMOVE == 0u)
 171:Generated_Source\PSoC4/ADC.c ****         /* Start and set interrupt vector */
 172:Generated_Source\PSoC4/ADC.c ****         CyIntSetPriority(ADC_INTC_NUMBER, ADC_INTC_PRIOR_NUMBER);
  99              		.loc 1 172 0
 100 0006 0321     		movs	r1, #3
 101 0008 0E20     		movs	r0, #14
 102 000a FFF7FEFF 		bl	CyIntSetPriority
 173:Generated_Source\PSoC4/ADC.c ****         (void)CyIntSetVector(ADC_INTC_NUMBER, &ADC_ISR);
 103              		.loc 1 173 0
 104 000e 574B     		ldr	r3, .L17
 105 0010 1900     		movs	r1, r3
 106 0012 0E20     		movs	r0, #14
 107 0014 FFF7FEFF 		bl	CyIntSetVector
 174:Generated_Source\PSoC4/ADC.c ****     #endif   /* End ADC_IRQ_REMOVE */
 175:Generated_Source\PSoC4/ADC.c **** 
 176:Generated_Source\PSoC4/ADC.c ****     /* Init SAR and MUX registers */
 177:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CHAN_EN_REG = ADC_DEFAULT_EN_CHANNELS;
 108              		.loc 1 177 0
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccVMELUE.s 			page 6


 109 0018 554B     		ldr	r3, .L17+4
 110 001a 0122     		movs	r2, #1
 111 001c 1A60     		str	r2, [r3]
 178:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG |= ADC_DEFAULT_CTRL_REG_CFG | 
 179:Generated_Source\PSoC4/ADC.c ****         /* Enable the SAR internal pump when global pump is enabled */
 180:Generated_Source\PSoC4/ADC.c ****         (((ADC_PUMP_CTRL_REG & ADC_PUMP_CTRL_ENABLED) != 0u) ? 
 112              		.loc 1 180 0
 113 001e 554B     		ldr	r3, .L17+8
 114 0020 1B68     		ldr	r3, [r3]
 178:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG |= ADC_DEFAULT_CTRL_REG_CFG | 
 115              		.loc 1 178 0
 116 0022 002B     		cmp	r3, #0
 117 0024 01DA     		bge	.L6
 178:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG |= ADC_DEFAULT_CTRL_REG_CFG | 
 118              		.loc 1 178 0 is_stmt 0 discriminator 1
 119 0026 5449     		ldr	r1, .L17+12
 120 0028 00E0     		b	.L7
 121              	.L6:
 178:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG |= ADC_DEFAULT_CTRL_REG_CFG | 
 122              		.loc 1 178 0 discriminator 2
 123 002a 5449     		ldr	r1, .L17+16
 124              	.L7:
 178:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG |= ADC_DEFAULT_CTRL_REG_CFG | 
 125              		.loc 1 178 0 discriminator 4
 126 002c 544B     		ldr	r3, .L17+20
 127 002e 544A     		ldr	r2, .L17+20
 128 0030 1268     		ldr	r2, [r2]
 129 0032 0A43     		orrs	r2, r1
 130 0034 1A60     		str	r2, [r3]
 181:Generated_Source\PSoC4/ADC.c ****         ADC_BOOSTPUMP_EN : 0u);
 182:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SAMPLE_CTRL_REG = ADC_DEFAULT_SAMPLE_CTRL_REG_CFG;
 131              		.loc 1 182 0 is_stmt 1 discriminator 4
 132 0036 534B     		ldr	r3, .L17+24
 133 0038 534A     		ldr	r2, .L17+28
 134 003a 1A60     		str	r2, [r3]
 183:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG = ADC_DEFAULT_RANGE_THRES_REG_CFG;
 135              		.loc 1 183 0 discriminator 4
 136 003c 534B     		ldr	r3, .L17+32
 137 003e 544A     		ldr	r2, .L17+36
 138 0040 1A60     		str	r2, [r3]
 184:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_COND_REG  = ADC_COMPARE_MODE;
 139              		.loc 1 184 0 discriminator 4
 140 0042 544B     		ldr	r3, .L17+40
 141 0044 C022     		movs	r2, #192
 142 0046 1206     		lsls	r2, r2, #24
 143 0048 1A60     		str	r2, [r3]
 185:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SAMPLE_TIME01_REG = ADC_DEFAULT_SAMPLE_TIME01_REG_CFG;
 144              		.loc 1 185 0 discriminator 4
 145 004a 534B     		ldr	r3, .L17+44
 146 004c 534A     		ldr	r2, .L17+48
 147 004e 1A60     		str	r2, [r3]
 186:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SAMPLE_TIME23_REG = ADC_DEFAULT_SAMPLE_TIME23_REG_CFG;
 148              		.loc 1 186 0 discriminator 4
 149 0050 534B     		ldr	r3, .L17+52
 150 0052 524A     		ldr	r2, .L17+48
 151 0054 1A60     		str	r2, [r3]
 187:Generated_Source\PSoC4/ADC.c ****     
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccVMELUE.s 			page 7


 188:Generated_Source\PSoC4/ADC.c ****     /* Connect Vm to VSSA when even one channel is single-ended or multiple channels configured */
 189:Generated_Source\PSoC4/ADC.c ****     #if(ADC_DEFAULT_MUX_SWITCH0 != 0u)
 190:Generated_Source\PSoC4/ADC.c ****         ADC_MUX_SWITCH0_REG |= ADC_DEFAULT_MUX_SWITCH0;
 152              		.loc 1 190 0 discriminator 4
 153 0056 534B     		ldr	r3, .L17+56
 154 0058 524A     		ldr	r2, .L17+56
 155 005a 1268     		ldr	r2, [r2]
 156 005c 8021     		movs	r1, #128
 157 005e 4902     		lsls	r1, r1, #9
 158 0060 0A43     		orrs	r2, r1
 159 0062 1A60     		str	r2, [r3]
 191:Generated_Source\PSoC4/ADC.c ****         /* Set MUX_HW_CTRL_VSSA in MUX_SWITCH_HW_CTRL when multiple channels enabled */
 192:Generated_Source\PSoC4/ADC.c ****         #if(ADC_TOTAL_CHANNELS_NUM > 1u)
 193:Generated_Source\PSoC4/ADC.c ****             ADC_MUX_SWITCH_HW_CTRL_REG |= ADC_DEFAULT_MUX_SWITCH0;
 194:Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_TOTAL_CHANNELS_NUM > 1u */
 195:Generated_Source\PSoC4/ADC.c ****     #endif /*ADC_CHANNELS_MODE !=0 */
 196:Generated_Source\PSoC4/ADC.c **** 
 197:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SATURATE_INTR_MASK_REG = 0u;
 160              		.loc 1 197 0 discriminator 4
 161 0064 504B     		ldr	r3, .L17+60
 162 0066 0022     		movs	r2, #0
 163 0068 1A60     		str	r2, [r3]
 198:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_INTR_MASK_REG = 0u;
 164              		.loc 1 198 0 discriminator 4
 165 006a 504B     		ldr	r3, .L17+64
 166 006c 0022     		movs	r2, #0
 167 006e 1A60     		str	r2, [r3]
 199:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_INTR_MASK_REG = ADC_SAR_INTR_MASK;
 168              		.loc 1 199 0 discriminator 4
 169 0070 4F4B     		ldr	r3, .L17+68
 170 0072 0122     		movs	r2, #1
 171 0074 1A60     		str	r2, [r3]
 200:Generated_Source\PSoC4/ADC.c **** 
 201:Generated_Source\PSoC4/ADC.c ****     #if(ADC_CY_SAR_IP_VER == ADC_CY_SAR_IP_VER0)
 202:Generated_Source\PSoC4/ADC.c ****         ADC_ANA_TRIM_REG = ADC_TRIM_COEF;
 172              		.loc 1 202 0 discriminator 4
 173 0076 4F4B     		ldr	r3, .L17+72
 174 0078 0222     		movs	r2, #2
 175 007a 1A60     		str	r2, [r3]
 203:Generated_Source\PSoC4/ADC.c ****     #endif /* (ADC_CY_SAR_IP_VER == ADC_CY_SAR_IP_VER0) */
 204:Generated_Source\PSoC4/ADC.c **** 
 205:Generated_Source\PSoC4/ADC.c ****     /* Read and modify default configuration based on characterization */
 206:Generated_Source\PSoC4/ADC.c ****     tmpRegVal = ADC_SAR_DFT_CTRL_REG;
 176              		.loc 1 206 0 discriminator 4
 177 007c 4E4B     		ldr	r3, .L17+76
 178 007e 1B68     		ldr	r3, [r3]
 179 0080 7B60     		str	r3, [r7, #4]
 207:Generated_Source\PSoC4/ADC.c ****     tmpRegVal &= (uint32)~ADC_DCEN;
 180              		.loc 1 207 0 discriminator 4
 181 0082 7B68     		ldr	r3, [r7, #4]
 182 0084 4D4A     		ldr	r2, .L17+80
 183 0086 1340     		ands	r3, r2
 184 0088 7B60     		str	r3, [r7, #4]
 208:Generated_Source\PSoC4/ADC.c ****     
 209:Generated_Source\PSoC4/ADC.c ****     #if(ADC_CY_SAR_IP_VER == ADC_CY_SAR_IP_VER0)
 210:Generated_Source\PSoC4/ADC.c ****         #if(ADC_NOMINAL_CLOCK_FREQ > (ADC_MAX_FREQUENCY / 2))
 211:Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_SEL_CSEL_DFT_CHAR;
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccVMELUE.s 			page 8


 212:Generated_Source\PSoC4/ADC.c ****         #else  /* clock speed < 9 Mhz */
 213:Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_DLY_INC;
 185              		.loc 1 213 0 discriminator 4
 186 008a 7B68     		ldr	r3, [r7, #4]
 187 008c 0122     		movs	r2, #1
 188 008e 1343     		orrs	r3, r2
 189 0090 7B60     		str	r3, [r7, #4]
 214:Generated_Source\PSoC4/ADC.c ****         #endif /* clock speed > 9 Mhz */
 215:Generated_Source\PSoC4/ADC.c ****     #else
 216:Generated_Source\PSoC4/ADC.c ****         #if ((ADC_DEFAULT_VREF_SEL == ADC__INTERNAL1024) || \
 217:Generated_Source\PSoC4/ADC.c ****              (ADC_DEFAULT_VREF_SEL == ADC__INTERNALVREF))
 218:Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_DLY_INC;
 219:Generated_Source\PSoC4/ADC.c ****         #else
 220:Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_DCEN;
 221:Generated_Source\PSoC4/ADC.c ****             tmpRegVal &= (uint32)~ADC_DLY_INC;
 222:Generated_Source\PSoC4/ADC.c ****         #endif /* ((ADC_DEFAULT_VREF_SEL == ADC__INTERNAL1024) || \
 223:Generated_Source\PSoC4/ADC.c ****                    (ADC_DEFAULT_VREF_SEL == ADC__INTERNALVREF)) */
 224:Generated_Source\PSoC4/ADC.c ****     #endif /* (ADC_CY_SAR_IP_VER == ADC_CY_SAR_IP_VER0) */
 225:Generated_Source\PSoC4/ADC.c ****     
 226:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_DFT_CTRL_REG = tmpRegVal;
 190              		.loc 1 226 0 discriminator 4
 191 0092 494B     		ldr	r3, .L17+76
 192 0094 7A68     		ldr	r2, [r7, #4]
 193 0096 1A60     		str	r2, [r3]
 227:Generated_Source\PSoC4/ADC.c **** 
 228:Generated_Source\PSoC4/ADC.c ****     #if(ADC_MAX_RESOLUTION != ADC_RESOLUTION_12)
 229:Generated_Source\PSoC4/ADC.c ****         ADC_WOUNDING_REG = ADC_ALT_WOUNDING;
 230:Generated_Source\PSoC4/ADC.c ****     #endif /* ADC_MAX_RESOLUTION != ADC_RESOLUTION_12 */
 231:Generated_Source\PSoC4/ADC.c **** 
 232:Generated_Source\PSoC4/ADC.c ****     for(chNum = 0u; chNum < ADC_TOTAL_CHANNELS_NUM; chNum++)
 194              		.loc 1 232 0 discriminator 4
 195 0098 0023     		movs	r3, #0
 196 009a FB60     		str	r3, [r7, #12]
 197 009c 5EE0     		b	.L8
 198              	.L16:
 233:Generated_Source\PSoC4/ADC.c ****     {
 234:Generated_Source\PSoC4/ADC.c ****         tmpRegVal = (ADC_channelsConfig[chNum] & ADC_CHANNEL_CONFIG_MASK);
 199              		.loc 1 234 0
 200 009e 484A     		ldr	r2, .L17+84
 201 00a0 DC23     		movs	r3, #220
 202 00a2 9B01     		lsls	r3, r3, #6
 203 00a4 1340     		ands	r3, r2
 204 00a6 7B60     		str	r3, [r7, #4]
 235:Generated_Source\PSoC4/ADC.c ****         #if(ADC_TOTAL_CHANNELS_NUM > 1u)
 236:Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_InputsPlacement[chNum];
 237:Generated_Source\PSoC4/ADC.c ****         #endif /* End ADC_TOTAL_CHANNELS_NUM > 1u */
 238:Generated_Source\PSoC4/ADC.c ****         
 239:Generated_Source\PSoC4/ADC.c ****         
 240:Generated_Source\PSoC4/ADC.c ****         /* When the part is limited to 10-bit then the SUB_RESOLUTION bit
 241:Generated_Source\PSoC4/ADC.c ****         *  will be ignored and the RESOLUTION bit selects between 10-bit
 242:Generated_Source\PSoC4/ADC.c ****         *  (0) and 8-bit (1) resolution.
 243:Generated_Source\PSoC4/ADC.c ****         */
 244:Generated_Source\PSoC4/ADC.c ****         #if((ADC_MAX_RESOLUTION != ADC_RESOLUTION_12) && \
 245:Generated_Source\PSoC4/ADC.c ****             (ADC_ALT_WOUNDING == ADC_WOUNDING_10BIT))
 246:Generated_Source\PSoC4/ADC.c ****             tmpRegVal &= (uint32)(~ADC_ALT_RESOLUTION_ON);
 247:Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_MAX_RESOLUTION != ADC_RESOLUTION_12 */
 248:Generated_Source\PSoC4/ADC.c **** 
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccVMELUE.s 			page 9


 249:Generated_Source\PSoC4/ADC.c ****         #if(ADC_INJ_CHANNEL_ENABLED)
 250:Generated_Source\PSoC4/ADC.c ****         if(chNum < ADC_SEQUENCED_CHANNELS_NUM)
 251:Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_INJ_CHANNEL_ENABLED */
 252:Generated_Source\PSoC4/ADC.c ****         {
 253:Generated_Source\PSoC4/ADC.c ****             CY_SET_REG32((reg32 *)(ADC_SAR_CHAN_CONFIG_IND + (uint32)(chNum << 2)), tmpRegVal);
 205              		.loc 1 253 0
 206 00a8 FB68     		ldr	r3, [r7, #12]
 207 00aa 9B00     		lsls	r3, r3, #2
 208 00ac 454A     		ldr	r2, .L17+88
 209 00ae 9446     		mov	ip, r2
 210 00b0 6344     		add	r3, r3, ip
 211 00b2 7A68     		ldr	r2, [r7, #4]
 212 00b4 1A60     		str	r2, [r3]
 254:Generated_Source\PSoC4/ADC.c **** 
 255:Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chNum] & ADC_IS_SATURATE_EN_MASK) != 0u)
 213              		.loc 1 255 0
 214 00b6 424A     		ldr	r2, .L17+84
 215 00b8 0123     		movs	r3, #1
 216 00ba 1340     		ands	r3, r2
 217 00bc 0AD0     		beq	.L9
 256:Generated_Source\PSoC4/ADC.c ****             {
 257:Generated_Source\PSoC4/ADC.c ****                 ADC_SAR_SATURATE_INTR_MASK_REG |= (uint16)((uint16)1 << chNum);
 218              		.loc 1 257 0
 219 00be 3A4B     		ldr	r3, .L17+60
 220 00c0 394A     		ldr	r2, .L17+60
 221 00c2 1168     		ldr	r1, [r2]
 222 00c4 0120     		movs	r0, #1
 223 00c6 FA68     		ldr	r2, [r7, #12]
 224 00c8 9040     		lsls	r0, r0, r2
 225 00ca 0200     		movs	r2, r0
 226 00cc 1204     		lsls	r2, r2, #16
 227 00ce 120C     		lsrs	r2, r2, #16
 228 00d0 0A43     		orrs	r2, r1
 229 00d2 1A60     		str	r2, [r3]
 230              	.L9:
 258:Generated_Source\PSoC4/ADC.c ****             }
 259:Generated_Source\PSoC4/ADC.c **** 
 260:Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chNum] & ADC_IS_RANGE_CTRL_EN_MASK) != 0u)
 231              		.loc 1 260 0
 232 00d4 3A4A     		ldr	r2, .L17+84
 233 00d6 0223     		movs	r3, #2
 234 00d8 1340     		ands	r3, r2
 235 00da 0AD0     		beq	.L10
 261:Generated_Source\PSoC4/ADC.c ****             {
 262:Generated_Source\PSoC4/ADC.c ****                 ADC_SAR_RANGE_INTR_MASK_REG |= (uint16)((uint16)1 << chNum);
 236              		.loc 1 262 0
 237 00dc 334B     		ldr	r3, .L17+64
 238 00de 334A     		ldr	r2, .L17+64
 239 00e0 1168     		ldr	r1, [r2]
 240 00e2 0120     		movs	r0, #1
 241 00e4 FA68     		ldr	r2, [r7, #12]
 242 00e6 9040     		lsls	r0, r0, r2
 243 00e8 0200     		movs	r2, r0
 244 00ea 1204     		lsls	r2, r2, #16
 245 00ec 120C     		lsrs	r2, r2, #16
 246 00ee 0A43     		orrs	r2, r1
 247 00f0 1A60     		str	r2, [r3]
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccVMELUE.s 			page 10


 248              	.L10:
 263:Generated_Source\PSoC4/ADC.c ****             }
 264:Generated_Source\PSoC4/ADC.c ****         }
 265:Generated_Source\PSoC4/ADC.c ****         #if(ADC_INJ_CHANNEL_ENABLED)
 266:Generated_Source\PSoC4/ADC.c ****             else
 267:Generated_Source\PSoC4/ADC.c ****             {
 268:Generated_Source\PSoC4/ADC.c ****                 CY_SET_REG32(ADC_SAR_INJ_CHAN_CONFIG_PTR, tmpRegVal | ADC_INJ_TAILGATING);
 269:Generated_Source\PSoC4/ADC.c **** 
 270:Generated_Source\PSoC4/ADC.c ****                 if((ADC_channelsConfig[chNum] & ADC_IS_SATURATE_EN_MASK) != 0u)
 271:Generated_Source\PSoC4/ADC.c ****                 {
 272:Generated_Source\PSoC4/ADC.c ****                     ADC_SAR_INTR_MASK_REG |= ADC_INJ_SATURATE_MASK;
 273:Generated_Source\PSoC4/ADC.c ****                 }
 274:Generated_Source\PSoC4/ADC.c **** 
 275:Generated_Source\PSoC4/ADC.c ****                 if((ADC_channelsConfig[chNum] & ADC_IS_RANGE_CTRL_EN_MASK) != 0u)
 276:Generated_Source\PSoC4/ADC.c ****                 {
 277:Generated_Source\PSoC4/ADC.c ****                     ADC_SAR_INTR_MASK_REG |= ADC_INJ_RANGE_MASK;
 278:Generated_Source\PSoC4/ADC.c ****                 }
 279:Generated_Source\PSoC4/ADC.c ****             }
 280:Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_INJ_CHANNEL_ENABLED */
 281:Generated_Source\PSoC4/ADC.c **** 
 282:Generated_Source\PSoC4/ADC.c ****         if((ADC_channelsConfig[chNum] & ADC_ALT_RESOLUTION_ON) != 0u)
 249              		.loc 1 282 0
 250 00f2 334A     		ldr	r2, .L17+84
 251 00f4 8023     		movs	r3, #128
 252 00f6 9B00     		lsls	r3, r3, #2
 253 00f8 1340     		ands	r3, r2
 254 00fa 03D0     		beq	.L11
 283:Generated_Source\PSoC4/ADC.c ****         {
 284:Generated_Source\PSoC4/ADC.c ****                counts = (int32)ADC_DEFAULT_MAX_WRK_ALT;
 255              		.loc 1 284 0
 256 00fc 8023     		movs	r3, #128
 257 00fe 5B00     		lsls	r3, r3, #1
 258 0100 BB60     		str	r3, [r7, #8]
 259 0102 02E0     		b	.L12
 260              	.L11:
 285:Generated_Source\PSoC4/ADC.c ****         }
 286:Generated_Source\PSoC4/ADC.c ****         else
 287:Generated_Source\PSoC4/ADC.c ****         {
 288:Generated_Source\PSoC4/ADC.c ****                counts = (int32)ADC_SAR_WRK_MAX_12BIT;
 261              		.loc 1 288 0
 262 0104 8023     		movs	r3, #128
 263 0106 5B01     		lsls	r3, r3, #5
 264 0108 BB60     		str	r3, [r7, #8]
 265              	.L12:
 289:Generated_Source\PSoC4/ADC.c ****         }
 290:Generated_Source\PSoC4/ADC.c **** 
 291:Generated_Source\PSoC4/ADC.c ****         if((ADC_channelsConfig[chNum] & ADC_DIFFERENTIAL_EN) == 0u)
 266              		.loc 1 291 0
 267 010a 2D4A     		ldr	r2, .L17+84
 268 010c 8023     		movs	r3, #128
 269 010e 5B00     		lsls	r3, r3, #1
 270 0110 1340     		ands	r3, r2
 271 0112 05D1     		bne	.L13
 292:Generated_Source\PSoC4/ADC.c ****         {
 293:Generated_Source\PSoC4/ADC.c ****             #if((ADC_DEFAULT_SE_RESULT_FORMAT_SEL == ADC__FSIGNED) && \
 294:Generated_Source\PSoC4/ADC.c ****                 (ADC_DEFAULT_NEG_INPUT_SEL == ADC__VREF))
 295:Generated_Source\PSoC4/ADC.c ****                 /* Set offset to the minus half scale to convert results to unsigned format */
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccVMELUE.s 			page 11


 296:Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = (int16)(counts / -2);
 297:Generated_Source\PSoC4/ADC.c ****             #else
 298:Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = 0;
 272              		.loc 1 298 0
 273 0114 2C4B     		ldr	r3, .L17+92
 274 0116 FA68     		ldr	r2, [r7, #12]
 275 0118 5200     		lsls	r2, r2, #1
 276 011a 0021     		movs	r1, #0
 277 011c D152     		strh	r1, [r2, r3]
 278 011e 09E0     		b	.L14
 279              	.L13:
 299:Generated_Source\PSoC4/ADC.c ****             #endif /* end DEFAULT_SE_RESULT_FORMAT_SEL == ADC__FSIGNED */
 300:Generated_Source\PSoC4/ADC.c ****         }
 301:Generated_Source\PSoC4/ADC.c ****         else    /* Differential channel */
 302:Generated_Source\PSoC4/ADC.c ****         {
 303:Generated_Source\PSoC4/ADC.c ****             #if(ADC_DEFAULT_DIFF_RESULT_FORMAT_SEL == ADC__FUNSIGNED)
 304:Generated_Source\PSoC4/ADC.c ****                 /* Set offset to the half scale to convert results to signed format */
 305:Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = (int16)(counts / 2);
 280              		.loc 1 305 0
 281 0120 BB68     		ldr	r3, [r7, #8]
 282 0122 002B     		cmp	r3, #0
 283 0124 00DA     		bge	.L15
 284 0126 0133     		adds	r3, r3, #1
 285              	.L15:
 286 0128 5B10     		asrs	r3, r3, #1
 287 012a 19B2     		sxth	r1, r3
 288 012c 264B     		ldr	r3, .L17+92
 289 012e FA68     		ldr	r2, [r7, #12]
 290 0130 5200     		lsls	r2, r2, #1
 291 0132 D152     		strh	r1, [r2, r3]
 292              	.L14:
 306:Generated_Source\PSoC4/ADC.c ****             #else
 307:Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = 0;
 308:Generated_Source\PSoC4/ADC.c ****             #endif /* end ADC_DEFAULT_DIFF_RESULT_FORMAT_SEL == ADC__FUNSIGNED */
 309:Generated_Source\PSoC4/ADC.c ****         }
 310:Generated_Source\PSoC4/ADC.c ****         /* Calculate gain in counts per 10 volts with rounding */
 311:Generated_Source\PSoC4/ADC.c ****         ADC_countsPer10Volt[chNum] = (int16)(((counts * ADC_10MV_COUNTS) +
 293              		.loc 1 311 0 discriminator 2
 294 0134 BB68     		ldr	r3, [r7, #8]
 295 0136 254A     		ldr	r2, .L17+96
 296 0138 5343     		muls	r3, r2
 297 013a 254A     		ldr	r2, .L17+100
 298 013c 9446     		mov	ip, r2
 299 013e 6344     		add	r3, r3, ip
 312:Generated_Source\PSoC4/ADC.c ****                             ADC_DEFAULT_VREF_MV_VALUE) / (ADC_DEFAULT_VREF_MV_VALUE * 2));
 300              		.loc 1 312 0 discriminator 2
 301 0140 2249     		ldr	r1, .L17+96
 302 0142 1800     		movs	r0, r3
 303 0144 FFF7FEFF 		bl	__aeabi_idiv
 304 0148 0300     		movs	r3, r0
 311:Generated_Source\PSoC4/ADC.c ****                             ADC_DEFAULT_VREF_MV_VALUE) / (ADC_DEFAULT_VREF_MV_VALUE * 2));
 305              		.loc 1 311 0 discriminator 2
 306 014a 1BB2     		sxth	r3, r3
 307 014c 1900     		movs	r1, r3
 308 014e 214B     		ldr	r3, .L17+104
 309 0150 FA68     		ldr	r2, [r7, #12]
 310 0152 9200     		lsls	r2, r2, #2
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccVMELUE.s 			page 12


 311 0154 D150     		str	r1, [r2, r3]
 232:Generated_Source\PSoC4/ADC.c ****     {
 312              		.loc 1 232 0 discriminator 2
 313 0156 FB68     		ldr	r3, [r7, #12]
 314 0158 0133     		adds	r3, r3, #1
 315 015a FB60     		str	r3, [r7, #12]
 316              	.L8:
 232:Generated_Source\PSoC4/ADC.c ****     {
 317              		.loc 1 232 0 is_stmt 0 discriminator 1
 318 015c FB68     		ldr	r3, [r7, #12]
 319 015e 002B     		cmp	r3, #0
 320 0160 9DD0     		beq	.L16
 313:Generated_Source\PSoC4/ADC.c ****     }
 314:Generated_Source\PSoC4/ADC.c **** }
 321              		.loc 1 314 0 is_stmt 1
 322 0162 C046     		nop
 323 0164 BD46     		mov	sp, r7
 324 0166 04B0     		add	sp, sp, #16
 325              		@ sp needed
 326 0168 80BD     		pop	{r7, pc}
 327              	.L18:
 328 016a C046     		.align	2
 329              	.L17:
 330 016c 00000000 		.word	ADC_ISR
 331 0170 20001A40 		.word	1075445792
 332 0174 80031A40 		.word	1075446656
 333 0178 70021053 		.word	1393558128
 334 017c 70020053 		.word	1392509552
 335 0180 00001A40 		.word	1075445760
 336 0184 04001A40 		.word	1075445764
 337 0188 F4000080 		.word	-2147483404
 338 018c 18001A40 		.word	1075445784
 339 0190 FF01FE05 		.word	100532735
 340 0194 1C001A40 		.word	1075445788
 341 0198 10001A40 		.word	1075445776
 342 019c 02000200 		.word	131074
 343 01a0 14001A40 		.word	1075445780
 344 01a4 00031A40 		.word	1075446528
 345 01a8 28021A40 		.word	1075446312
 346 01ac 38021A40 		.word	1075446328
 347 01b0 18021A40 		.word	1075446296
 348 01b4 000F1A40 		.word	1075449600
 349 01b8 30001A40 		.word	1075445808
 350 01bc FFFFFFDF 		.word	-536870913
 351 01c0 02040000 		.word	1026
 352 01c4 80001A40 		.word	1075445888
 353 01c8 00000000 		.word	ADC_offset
 354 01cc 10270000 		.word	10000
 355 01d0 88130000 		.word	5000
 356 01d4 00000000 		.word	ADC_countsPer10Volt
 357              		.cfi_endproc
 358              	.LFE1:
 359              		.size	ADC_Init, .-ADC_Init
 360              		.section	.text.ADC_Enable,"ax",%progbits
 361              		.align	2
 362              		.global	ADC_Enable
 363              		.code	16
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccVMELUE.s 			page 13


 364              		.thumb_func
 365              		.type	ADC_Enable, %function
 366              	ADC_Enable:
 367              	.LFB2:
 315:Generated_Source\PSoC4/ADC.c **** 
 316:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 317:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SAR_1_Enable
 318:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 319:Generated_Source\PSoC4/ADC.c **** *
 320:Generated_Source\PSoC4/ADC.c **** * Summary:
 321:Generated_Source\PSoC4/ADC.c **** *  Enables the clock and analog power for SAR ADC.
 322:Generated_Source\PSoC4/ADC.c **** *
 323:Generated_Source\PSoC4/ADC.c **** * Parameters:
 324:Generated_Source\PSoC4/ADC.c **** *  None.
 325:Generated_Source\PSoC4/ADC.c **** *
 326:Generated_Source\PSoC4/ADC.c **** * Return:
 327:Generated_Source\PSoC4/ADC.c **** *  None.
 328:Generated_Source\PSoC4/ADC.c **** *
 329:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 330:Generated_Source\PSoC4/ADC.c **** void ADC_Enable(void)
 331:Generated_Source\PSoC4/ADC.c **** {
 368              		.loc 1 331 0
 369              		.cfi_startproc
 370              		@ args = 0, pretend = 0, frame = 0
 371              		@ frame_needed = 1, uses_anonymous_args = 0
 372 0000 80B5     		push	{r7, lr}
 373              		.cfi_def_cfa_offset 8
 374              		.cfi_offset 7, -8
 375              		.cfi_offset 14, -4
 376 0002 00AF     		add	r7, sp, #0
 377              		.cfi_def_cfa_register 7
 332:Generated_Source\PSoC4/ADC.c ****     if (0u == (ADC_SAR_CTRL_REG & ADC_ENABLE))
 378              		.loc 1 332 0
 379 0004 084B     		ldr	r3, .L22
 380 0006 1B68     		ldr	r3, [r3]
 381 0008 002B     		cmp	r3, #0
 382 000a 09DB     		blt	.L21
 333:Generated_Source\PSoC4/ADC.c ****     {
 334:Generated_Source\PSoC4/ADC.c ****         #if(ADC_CY_SAR_IP_VER != ADC_CY_SAR_IP_VER0)
 335:Generated_Source\PSoC4/ADC.c **** 
 336:Generated_Source\PSoC4/ADC.c ****             while (0u != (ADC_SAR_STATUS_REG & ADC_STATUS_BUSY))
 337:Generated_Source\PSoC4/ADC.c ****             {
 338:Generated_Source\PSoC4/ADC.c ****                 /* wait for SAR to go idle to avoid deadlock */
 339:Generated_Source\PSoC4/ADC.c ****             }
 340:Generated_Source\PSoC4/ADC.c ****         #endif /* (ADC_CY_SAR_IP_VER != ADC_CY_SAR_IP_VER0) */
 341:Generated_Source\PSoC4/ADC.c ****         
 342:Generated_Source\PSoC4/ADC.c ****         ADC_SAR_CTRL_REG |= ADC_ENABLE;
 383              		.loc 1 342 0
 384 000c 064B     		ldr	r3, .L22
 385 000e 064A     		ldr	r2, .L22
 386 0010 1268     		ldr	r2, [r2]
 387 0012 8021     		movs	r1, #128
 388 0014 0906     		lsls	r1, r1, #24
 389 0016 0A43     		orrs	r2, r1
 390 0018 1A60     		str	r2, [r3]
 343:Generated_Source\PSoC4/ADC.c ****         
 344:Generated_Source\PSoC4/ADC.c ****         /* The block is ready to use 10 us after the enable signal is set high. */
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccVMELUE.s 			page 14


 345:Generated_Source\PSoC4/ADC.c ****         CyDelayUs(ADC_10US_DELAY);         
 391              		.loc 1 345 0
 392 001a 0A20     		movs	r0, #10
 393 001c FFF7FEFF 		bl	CyDelayUs
 394              	.L21:
 346:Generated_Source\PSoC4/ADC.c ****     }
 347:Generated_Source\PSoC4/ADC.c **** }
 395              		.loc 1 347 0
 396 0020 C046     		nop
 397 0022 BD46     		mov	sp, r7
 398              		@ sp needed
 399 0024 80BD     		pop	{r7, pc}
 400              	.L23:
 401 0026 C046     		.align	2
 402              	.L22:
 403 0028 00001A40 		.word	1075445760
 404              		.cfi_endproc
 405              	.LFE2:
 406              		.size	ADC_Enable, .-ADC_Enable
 407              		.section	.text.ADC_Stop,"ax",%progbits
 408              		.align	2
 409              		.global	ADC_Stop
 410              		.code	16
 411              		.thumb_func
 412              		.type	ADC_Stop, %function
 413              	ADC_Stop:
 414              	.LFB3:
 348:Generated_Source\PSoC4/ADC.c **** 
 349:Generated_Source\PSoC4/ADC.c **** 
 350:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 351:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_Stop
 352:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 353:Generated_Source\PSoC4/ADC.c **** *
 354:Generated_Source\PSoC4/ADC.c **** * Summary:
 355:Generated_Source\PSoC4/ADC.c **** *  This function stops ADC conversions and puts the ADC into its lowest power
 356:Generated_Source\PSoC4/ADC.c **** *  mode.
 357:Generated_Source\PSoC4/ADC.c **** *
 358:Generated_Source\PSoC4/ADC.c **** * Parameters:
 359:Generated_Source\PSoC4/ADC.c **** *  None.
 360:Generated_Source\PSoC4/ADC.c **** *
 361:Generated_Source\PSoC4/ADC.c **** * Return:
 362:Generated_Source\PSoC4/ADC.c **** *  None.
 363:Generated_Source\PSoC4/ADC.c **** *
 364:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 365:Generated_Source\PSoC4/ADC.c **** void ADC_Stop(void)
 366:Generated_Source\PSoC4/ADC.c **** {
 415              		.loc 1 366 0
 416              		.cfi_startproc
 417              		@ args = 0, pretend = 0, frame = 0
 418              		@ frame_needed = 1, uses_anonymous_args = 0
 419 0000 80B5     		push	{r7, lr}
 420              		.cfi_def_cfa_offset 8
 421              		.cfi_offset 7, -8
 422              		.cfi_offset 14, -4
 423 0002 00AF     		add	r7, sp, #0
 424              		.cfi_def_cfa_register 7
 367:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG &= (uint32)~ADC_ENABLE;
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccVMELUE.s 			page 15


 425              		.loc 1 367 0
 426 0004 044B     		ldr	r3, .L25
 427 0006 044A     		ldr	r2, .L25
 428 0008 1268     		ldr	r2, [r2]
 429 000a 5200     		lsls	r2, r2, #1
 430 000c 5208     		lsrs	r2, r2, #1
 431 000e 1A60     		str	r2, [r3]
 368:Generated_Source\PSoC4/ADC.c **** }
 432              		.loc 1 368 0
 433 0010 C046     		nop
 434 0012 BD46     		mov	sp, r7
 435              		@ sp needed
 436 0014 80BD     		pop	{r7, pc}
 437              	.L26:
 438 0016 C046     		.align	2
 439              	.L25:
 440 0018 00001A40 		.word	1075445760
 441              		.cfi_endproc
 442              	.LFE3:
 443              		.size	ADC_Stop, .-ADC_Stop
 444              		.section	.text.ADC_StartConvert,"ax",%progbits
 445              		.align	2
 446              		.global	ADC_StartConvert
 447              		.code	16
 448              		.thumb_func
 449              		.type	ADC_StartConvert, %function
 450              	ADC_StartConvert:
 451              	.LFB4:
 369:Generated_Source\PSoC4/ADC.c **** 
 370:Generated_Source\PSoC4/ADC.c **** 
 371:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 372:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_StartConvert
 373:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 374:Generated_Source\PSoC4/ADC.c **** *
 375:Generated_Source\PSoC4/ADC.c **** * Summary:
 376:Generated_Source\PSoC4/ADC.c **** *  Description:
 377:Generated_Source\PSoC4/ADC.c **** *  For free running mode, this API starts the conversion process and it
 378:Generated_Source\PSoC4/ADC.c **** *  runs continuously.
 379:Generated_Source\PSoC4/ADC.c **** *
 380:Generated_Source\PSoC4/ADC.c **** *  In a triggered mode, this routine triggers every conversion by
 381:Generated_Source\PSoC4/ADC.c **** *  writing into the FW_TRIGGER bit in SAR_START_CTRL reg. In triggered mode,
 382:Generated_Source\PSoC4/ADC.c **** *  every conversion has to start by this API.
 383:Generated_Source\PSoC4/ADC.c **** *
 384:Generated_Source\PSoC4/ADC.c **** * Parameters:
 385:Generated_Source\PSoC4/ADC.c **** *  None.
 386:Generated_Source\PSoC4/ADC.c **** *
 387:Generated_Source\PSoC4/ADC.c **** * Return:
 388:Generated_Source\PSoC4/ADC.c **** *  None.
 389:Generated_Source\PSoC4/ADC.c **** *
 390:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 391:Generated_Source\PSoC4/ADC.c **** void ADC_StartConvert(void)
 392:Generated_Source\PSoC4/ADC.c **** {
 452              		.loc 1 392 0
 453              		.cfi_startproc
 454              		@ args = 0, pretend = 0, frame = 0
 455              		@ frame_needed = 1, uses_anonymous_args = 0
 456 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccVMELUE.s 			page 16


 457              		.cfi_def_cfa_offset 8
 458              		.cfi_offset 7, -8
 459              		.cfi_offset 14, -4
 460 0002 00AF     		add	r7, sp, #0
 461              		.cfi_def_cfa_register 7
 393:Generated_Source\PSoC4/ADC.c ****     #if(ADC_DEFAULT_SAMPLE_MODE_SEL == ADC__FREERUNNING)
 394:Generated_Source\PSoC4/ADC.c ****         ADC_SAR_SAMPLE_CTRL_REG |= ADC_CONTINUOUS_EN;
 462              		.loc 1 394 0
 463 0004 044B     		ldr	r3, .L28
 464 0006 044A     		ldr	r2, .L28
 465 0008 1268     		ldr	r2, [r2]
 466 000a 8021     		movs	r1, #128
 467 000c 4902     		lsls	r1, r1, #9
 468 000e 0A43     		orrs	r2, r1
 469 0010 1A60     		str	r2, [r3]
 395:Generated_Source\PSoC4/ADC.c ****     #else /* Firmware trigger */
 396:Generated_Source\PSoC4/ADC.c ****         ADC_SAR_START_CTRL_REG = ADC_FW_TRIGGER;
 397:Generated_Source\PSoC4/ADC.c ****     #endif /* End ADC_DEFAULT_SAMPLE_MODE == ADC__FREERUNNING */
 398:Generated_Source\PSoC4/ADC.c **** 
 399:Generated_Source\PSoC4/ADC.c **** }
 470              		.loc 1 399 0
 471 0012 C046     		nop
 472 0014 BD46     		mov	sp, r7
 473              		@ sp needed
 474 0016 80BD     		pop	{r7, pc}
 475              	.L29:
 476              		.align	2
 477              	.L28:
 478 0018 04001A40 		.word	1075445764
 479              		.cfi_endproc
 480              	.LFE4:
 481              		.size	ADC_StartConvert, .-ADC_StartConvert
 482              		.section	.text.ADC_StopConvert,"ax",%progbits
 483              		.align	2
 484              		.global	ADC_StopConvert
 485              		.code	16
 486              		.thumb_func
 487              		.type	ADC_StopConvert, %function
 488              	ADC_StopConvert:
 489              	.LFB5:
 400:Generated_Source\PSoC4/ADC.c **** 
 401:Generated_Source\PSoC4/ADC.c **** 
 402:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 403:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_StopConvert
 404:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 405:Generated_Source\PSoC4/ADC.c **** *
 406:Generated_Source\PSoC4/ADC.c **** * Summary:
 407:Generated_Source\PSoC4/ADC.c **** *  Forces the ADC to stop all conversions.
 408:Generated_Source\PSoC4/ADC.c **** *
 409:Generated_Source\PSoC4/ADC.c **** * Parameters:
 410:Generated_Source\PSoC4/ADC.c **** *  None.
 411:Generated_Source\PSoC4/ADC.c **** *
 412:Generated_Source\PSoC4/ADC.c **** * Return:
 413:Generated_Source\PSoC4/ADC.c **** *  None.
 414:Generated_Source\PSoC4/ADC.c **** *
 415:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 416:Generated_Source\PSoC4/ADC.c **** void ADC_StopConvert(void)
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccVMELUE.s 			page 17


 417:Generated_Source\PSoC4/ADC.c **** {
 490              		.loc 1 417 0
 491              		.cfi_startproc
 492              		@ args = 0, pretend = 0, frame = 0
 493              		@ frame_needed = 1, uses_anonymous_args = 0
 494 0000 80B5     		push	{r7, lr}
 495              		.cfi_def_cfa_offset 8
 496              		.cfi_offset 7, -8
 497              		.cfi_offset 14, -4
 498 0002 00AF     		add	r7, sp, #0
 499              		.cfi_def_cfa_register 7
 418:Generated_Source\PSoC4/ADC.c ****     #if(ADC_DEFAULT_SAMPLE_MODE_SEL == ADC__FREERUNNING)
 419:Generated_Source\PSoC4/ADC.c ****         ADC_SAR_SAMPLE_CTRL_REG &= (uint32)(~ADC_CONTINUOUS_EN);
 500              		.loc 1 419 0
 501 0004 044B     		ldr	r3, .L31
 502 0006 044A     		ldr	r2, .L31
 503 0008 1268     		ldr	r2, [r2]
 504 000a 0449     		ldr	r1, .L31+4
 505 000c 0A40     		ands	r2, r1
 506 000e 1A60     		str	r2, [r3]
 420:Generated_Source\PSoC4/ADC.c ****     #endif /* ADC_DEFAULT_SAMPLE_MODE == ADC__FREERUNNING */
 421:Generated_Source\PSoC4/ADC.c **** }
 507              		.loc 1 421 0
 508 0010 C046     		nop
 509 0012 BD46     		mov	sp, r7
 510              		@ sp needed
 511 0014 80BD     		pop	{r7, pc}
 512              	.L32:
 513 0016 C046     		.align	2
 514              	.L31:
 515 0018 04001A40 		.word	1075445764
 516 001c FFFFFEFF 		.word	-65537
 517              		.cfi_endproc
 518              	.LFE5:
 519              		.size	ADC_StopConvert, .-ADC_StopConvert
 520              		.section	.text.ADC_IsEndConversion,"ax",%progbits
 521              		.align	2
 522              		.global	ADC_IsEndConversion
 523              		.code	16
 524              		.thumb_func
 525              		.type	ADC_IsEndConversion, %function
 526              	ADC_IsEndConversion:
 527              	.LFB6:
 422:Generated_Source\PSoC4/ADC.c **** 
 423:Generated_Source\PSoC4/ADC.c **** 
 424:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 425:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_IsEndConversion
 426:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 427:Generated_Source\PSoC4/ADC.c **** *
 428:Generated_Source\PSoC4/ADC.c **** * Summary:
 429:Generated_Source\PSoC4/ADC.c **** *  Description: Checks for ADC end of conversion for the case one
 430:Generated_Source\PSoC4/ADC.c **** *  channel and end of scan for the case of multiple channels. It acts
 431:Generated_Source\PSoC4/ADC.c **** *  as a software version of the EOC. This function provides the
 432:Generated_Source\PSoC4/ADC.c **** *  programmer with two options. In one mode this function
 433:Generated_Source\PSoC4/ADC.c **** *  immediately returns with the conversion status. In the other mode,
 434:Generated_Source\PSoC4/ADC.c **** *  the function does not return (blocking) until the conversion has
 435:Generated_Source\PSoC4/ADC.c **** *  completed.
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccVMELUE.s 			page 18


 436:Generated_Source\PSoC4/ADC.c **** *
 437:Generated_Source\PSoC4/ADC.c **** * Parameters:
 438:Generated_Source\PSoC4/ADC.c **** *  ADC_RETURN_STATUS        -> Immediately returns conversion result status
 439:Generated_Source\PSoC4/ADC.c **** *  ADC_WAIT_FOR_RESULT      -> Does not return until ADC complete
 440:Generated_Source\PSoC4/ADC.c **** *  ADC_RETURN_STATUS_INJ    -> Immediately returns conversion result status
 441:Generated_Source\PSoC4/ADC.c **** *                              for injection channel
 442:Generated_Source\PSoC4/ADC.c **** *  ADC_WAIT_FOR_RESULT_INJ  -> Does not return until ADC completes injection
 443:Generated_Source\PSoC4/ADC.c **** *                              channel conversion
 444:Generated_Source\PSoC4/ADC.c **** *
 445:Generated_Source\PSoC4/ADC.c **** * Return:
 446:Generated_Source\PSoC4/ADC.c **** *  If a non-zero value is returned, the last conversion or scan has completed.
 447:Generated_Source\PSoC4/ADC.c **** *  If the returned value is zero, the ADC is still in the process of a scan.
 448:Generated_Source\PSoC4/ADC.c **** *
 449:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 450:Generated_Source\PSoC4/ADC.c **** uint32 ADC_IsEndConversion(uint32 retMode)
 451:Generated_Source\PSoC4/ADC.c **** {
 528              		.loc 1 451 0
 529              		.cfi_startproc
 530              		@ args = 0, pretend = 0, frame = 16
 531              		@ frame_needed = 1, uses_anonymous_args = 0
 532 0000 80B5     		push	{r7, lr}
 533              		.cfi_def_cfa_offset 8
 534              		.cfi_offset 7, -8
 535              		.cfi_offset 14, -4
 536 0002 84B0     		sub	sp, sp, #16
 537              		.cfi_def_cfa_offset 24
 538 0004 00AF     		add	r7, sp, #0
 539              		.cfi_def_cfa_register 7
 540 0006 7860     		str	r0, [r7, #4]
 452:Generated_Source\PSoC4/ADC.c ****     uint32 status = 0u;
 541              		.loc 1 452 0
 542 0008 0023     		movs	r3, #0
 543 000a FB60     		str	r3, [r7, #12]
 453:Generated_Source\PSoC4/ADC.c **** 
 454:Generated_Source\PSoC4/ADC.c ****     if((retMode & (ADC_RETURN_STATUS | ADC_WAIT_FOR_RESULT)) != 0u)
 544              		.loc 1 454 0
 545 000c 7B68     		ldr	r3, [r7, #4]
 546 000e 0322     		movs	r2, #3
 547 0010 1340     		ands	r3, r2
 548 0012 11D0     		beq	.L34
 549              	.L36:
 455:Generated_Source\PSoC4/ADC.c ****     {
 456:Generated_Source\PSoC4/ADC.c ****         do
 457:Generated_Source\PSoC4/ADC.c ****         {
 458:Generated_Source\PSoC4/ADC.c ****             status = ADC_SAR_INTR_REG & ADC_EOS_MASK;
 550              		.loc 1 458 0 discriminator 2
 551 0014 0B4B     		ldr	r3, .L38
 552 0016 1B68     		ldr	r3, [r3]
 553 0018 0122     		movs	r2, #1
 554 001a 1340     		ands	r3, r2
 555 001c FB60     		str	r3, [r7, #12]
 459:Generated_Source\PSoC4/ADC.c ****         }while((status == 0u) && ((retMode & ADC_WAIT_FOR_RESULT) != 0u));
 556              		.loc 1 459 0 discriminator 2
 557 001e FB68     		ldr	r3, [r7, #12]
 558 0020 002B     		cmp	r3, #0
 559 0022 03D1     		bne	.L35
 560              		.loc 1 459 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccVMELUE.s 			page 19


 561 0024 7B68     		ldr	r3, [r7, #4]
 562 0026 0222     		movs	r2, #2
 563 0028 1340     		ands	r3, r2
 564 002a F3D1     		bne	.L36
 565              	.L35:
 460:Generated_Source\PSoC4/ADC.c **** 
 461:Generated_Source\PSoC4/ADC.c ****         if(status != 0u)
 566              		.loc 1 461 0 is_stmt 1
 567 002c FB68     		ldr	r3, [r7, #12]
 568 002e 002B     		cmp	r3, #0
 569 0030 02D0     		beq	.L34
 462:Generated_Source\PSoC4/ADC.c ****         {
 463:Generated_Source\PSoC4/ADC.c ****             /* Clear EOS bit */
 464:Generated_Source\PSoC4/ADC.c ****             ADC_SAR_INTR_REG = ADC_EOS_MASK;
 570              		.loc 1 464 0
 571 0032 044B     		ldr	r3, .L38
 572 0034 0122     		movs	r2, #1
 573 0036 1A60     		str	r2, [r3]
 574              	.L34:
 465:Generated_Source\PSoC4/ADC.c ****         }
 466:Generated_Source\PSoC4/ADC.c ****     }
 467:Generated_Source\PSoC4/ADC.c **** 
 468:Generated_Source\PSoC4/ADC.c ****     #if(ADC_INJ_CHANNEL_ENABLED)
 469:Generated_Source\PSoC4/ADC.c ****         if((retMode & (ADC_RETURN_STATUS_INJ | ADC_WAIT_FOR_RESULT_INJ)) != 0u)
 470:Generated_Source\PSoC4/ADC.c ****         {
 471:Generated_Source\PSoC4/ADC.c ****             do
 472:Generated_Source\PSoC4/ADC.c ****             {
 473:Generated_Source\PSoC4/ADC.c ****                 status |= ADC_SAR_INTR_REG & ADC_INJ_EOC_MASK;
 474:Generated_Source\PSoC4/ADC.c ****             }while(((status & ADC_INJ_EOC_MASK) == 0u) &&
 475:Generated_Source\PSoC4/ADC.c ****                    ((retMode & ADC_WAIT_FOR_RESULT_INJ) != 0u));
 476:Generated_Source\PSoC4/ADC.c **** 
 477:Generated_Source\PSoC4/ADC.c ****             if((status & ADC_INJ_EOC_MASK) != 0u)
 478:Generated_Source\PSoC4/ADC.c ****             {
 479:Generated_Source\PSoC4/ADC.c ****                 /* Clear Injection EOS bit */
 480:Generated_Source\PSoC4/ADC.c ****                 ADC_SAR_INTR_REG = ADC_INJ_EOC_MASK;
 481:Generated_Source\PSoC4/ADC.c ****             }
 482:Generated_Source\PSoC4/ADC.c ****         }
 483:Generated_Source\PSoC4/ADC.c ****     #endif /* ADC_INJ_CHANNEL_ENABLED */
 484:Generated_Source\PSoC4/ADC.c **** 
 485:Generated_Source\PSoC4/ADC.c ****     return (status);
 575              		.loc 1 485 0
 576 0038 FB68     		ldr	r3, [r7, #12]
 486:Generated_Source\PSoC4/ADC.c **** }
 577              		.loc 1 486 0
 578 003a 1800     		movs	r0, r3
 579 003c BD46     		mov	sp, r7
 580 003e 04B0     		add	sp, sp, #16
 581              		@ sp needed
 582 0040 80BD     		pop	{r7, pc}
 583              	.L39:
 584 0042 C046     		.align	2
 585              	.L38:
 586 0044 10021A40 		.word	1075446288
 587              		.cfi_endproc
 588              	.LFE6:
 589              		.size	ADC_IsEndConversion, .-ADC_IsEndConversion
 590              		.section	.text.ADC_GetResult16,"ax",%progbits
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccVMELUE.s 			page 20


 591              		.align	2
 592              		.global	ADC_GetResult16
 593              		.code	16
 594              		.thumb_func
 595              		.type	ADC_GetResult16, %function
 596              	ADC_GetResult16:
 597              	.LFB7:
 487:Generated_Source\PSoC4/ADC.c **** 
 488:Generated_Source\PSoC4/ADC.c **** 
 489:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 490:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_GetResult16
 491:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 492:Generated_Source\PSoC4/ADC.c **** *
 493:Generated_Source\PSoC4/ADC.c **** * Summary:
 494:Generated_Source\PSoC4/ADC.c **** *  Gets the data available in the SAR DATA register.
 495:Generated_Source\PSoC4/ADC.c **** *
 496:Generated_Source\PSoC4/ADC.c **** * Parameters:
 497:Generated_Source\PSoC4/ADC.c **** *  chan: The ADC channel in which to return the result. The first channel
 498:Generated_Source\PSoC4/ADC.c **** *  is 0 and the injection channel if enabled is the number of valid channels.
 499:Generated_Source\PSoC4/ADC.c **** *
 500:Generated_Source\PSoC4/ADC.c **** * Return:
 501:Generated_Source\PSoC4/ADC.c **** *  Returns converted data as a signed 16-bit integer
 502:Generated_Source\PSoC4/ADC.c **** *
 503:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 504:Generated_Source\PSoC4/ADC.c **** int16 ADC_GetResult16(uint32 chan)
 505:Generated_Source\PSoC4/ADC.c **** {
 598              		.loc 1 505 0
 599              		.cfi_startproc
 600              		@ args = 0, pretend = 0, frame = 16
 601              		@ frame_needed = 1, uses_anonymous_args = 0
 602 0000 80B5     		push	{r7, lr}
 603              		.cfi_def_cfa_offset 8
 604              		.cfi_offset 7, -8
 605              		.cfi_offset 14, -4
 606 0002 84B0     		sub	sp, sp, #16
 607              		.cfi_def_cfa_offset 24
 608 0004 00AF     		add	r7, sp, #0
 609              		.cfi_def_cfa_register 7
 610 0006 7860     		str	r0, [r7, #4]
 506:Generated_Source\PSoC4/ADC.c ****     uint32 result;
 507:Generated_Source\PSoC4/ADC.c **** 
 508:Generated_Source\PSoC4/ADC.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 509:Generated_Source\PSoC4/ADC.c ****     CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 611              		.loc 1 509 0
 612 0008 7B68     		ldr	r3, [r7, #4]
 613 000a 002B     		cmp	r3, #0
 614 000c 02D0     		beq	.L41
 615              		.loc 1 509 0 is_stmt 0 discriminator 1
 616 000e 0020     		movs	r0, #0
 617 0010 FFF7FEFF 		bl	CyHalt
 618              	.L41:
 510:Generated_Source\PSoC4/ADC.c **** 
 511:Generated_Source\PSoC4/ADC.c ****     if(chan < ADC_SEQUENCED_CHANNELS_NUM)
 619              		.loc 1 511 0 is_stmt 1
 620 0014 7B68     		ldr	r3, [r7, #4]
 621 0016 002B     		cmp	r3, #0
 622 0018 09D1     		bne	.L42
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccVMELUE.s 			page 21


 512:Generated_Source\PSoC4/ADC.c ****     {
 513:Generated_Source\PSoC4/ADC.c ****         result = CY_GET_REG32((reg32 *)(ADC_SAR_CHAN_RESULT_IND + (uint32)(chan << 2u))) &
 623              		.loc 1 513 0
 624 001a 7B68     		ldr	r3, [r7, #4]
 625 001c 9B00     		lsls	r3, r3, #2
 626 001e 084A     		ldr	r2, .L45
 627 0020 9446     		mov	ip, r2
 628 0022 6344     		add	r3, r3, ip
 629 0024 1B68     		ldr	r3, [r3]
 630 0026 1B04     		lsls	r3, r3, #16
 631 0028 1B0C     		lsrs	r3, r3, #16
 632 002a FB60     		str	r3, [r7, #12]
 633 002c 01E0     		b	.L43
 634              	.L42:
 514:Generated_Source\PSoC4/ADC.c ****                 ADC_RESULT_MASK;
 515:Generated_Source\PSoC4/ADC.c ****     }
 516:Generated_Source\PSoC4/ADC.c ****     else
 517:Generated_Source\PSoC4/ADC.c ****     {
 518:Generated_Source\PSoC4/ADC.c ****         #if(ADC_INJ_CHANNEL_ENABLED)
 519:Generated_Source\PSoC4/ADC.c ****             result = ADC_SAR_INJ_RESULT_REG & ADC_RESULT_MASK;
 520:Generated_Source\PSoC4/ADC.c ****         #else
 521:Generated_Source\PSoC4/ADC.c ****             result = 0u;
 635              		.loc 1 521 0
 636 002e 0023     		movs	r3, #0
 637 0030 FB60     		str	r3, [r7, #12]
 638              	.L43:
 522:Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_INJ_CHANNEL_ENABLED */
 523:Generated_Source\PSoC4/ADC.c ****     }
 524:Generated_Source\PSoC4/ADC.c **** 
 525:Generated_Source\PSoC4/ADC.c ****     return ( (int16)result );
 639              		.loc 1 525 0
 640 0032 FB68     		ldr	r3, [r7, #12]
 641 0034 1BB2     		sxth	r3, r3
 526:Generated_Source\PSoC4/ADC.c **** }
 642              		.loc 1 526 0
 643 0036 1800     		movs	r0, r3
 644 0038 BD46     		mov	sp, r7
 645 003a 04B0     		add	sp, sp, #16
 646              		@ sp needed
 647 003c 80BD     		pop	{r7, pc}
 648              	.L46:
 649 003e C046     		.align	2
 650              	.L45:
 651 0040 80011A40 		.word	1075446144
 652              		.cfi_endproc
 653              	.LFE7:
 654              		.size	ADC_GetResult16, .-ADC_GetResult16
 655              		.section	.text.ADC_SetChanMask,"ax",%progbits
 656              		.align	2
 657              		.global	ADC_SetChanMask
 658              		.code	16
 659              		.thumb_func
 660              		.type	ADC_SetChanMask, %function
 661              	ADC_SetChanMask:
 662              	.LFB8:
 527:Generated_Source\PSoC4/ADC.c **** 
 528:Generated_Source\PSoC4/ADC.c **** 
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccVMELUE.s 			page 22


 529:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 530:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetChanMask
 531:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 532:Generated_Source\PSoC4/ADC.c **** *
 533:Generated_Source\PSoC4/ADC.c **** * Summary:
 534:Generated_Source\PSoC4/ADC.c **** *  Sets the channel enable mask.
 535:Generated_Source\PSoC4/ADC.c **** *
 536:Generated_Source\PSoC4/ADC.c **** * Parameters:
 537:Generated_Source\PSoC4/ADC.c **** *  mask: Sets which channels that will be
 538:Generated_Source\PSoC4/ADC.c **** *  scanned. Setting bits for channels that do not exist will have no
 539:Generated_Source\PSoC4/ADC.c **** *  effect. For example, if only 6 channels were enabled, setting a
 540:Generated_Source\PSoC4/ADC.c **** *  mask of 0x0103 would only enable the last two channels (0 and 1).
 541:Generated_Source\PSoC4/ADC.c **** *  This API will not enable the injection channel.
 542:Generated_Source\PSoC4/ADC.c **** *  Examples: If the component is setup to sequence through 8
 543:Generated_Source\PSoC4/ADC.c **** *  channels, a mask of 0x000F would enable channels 0, 1, 2, and 3.
 544:Generated_Source\PSoC4/ADC.c **** *
 545:Generated_Source\PSoC4/ADC.c **** * Return:
 546:Generated_Source\PSoC4/ADC.c **** *  None.
 547:Generated_Source\PSoC4/ADC.c **** *
 548:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 549:Generated_Source\PSoC4/ADC.c **** void ADC_SetChanMask(uint32 mask)
 550:Generated_Source\PSoC4/ADC.c **** {
 663              		.loc 1 550 0
 664              		.cfi_startproc
 665              		@ args = 0, pretend = 0, frame = 8
 666              		@ frame_needed = 1, uses_anonymous_args = 0
 667 0000 80B5     		push	{r7, lr}
 668              		.cfi_def_cfa_offset 8
 669              		.cfi_offset 7, -8
 670              		.cfi_offset 14, -4
 671 0002 82B0     		sub	sp, sp, #8
 672              		.cfi_def_cfa_offset 16
 673 0004 00AF     		add	r7, sp, #0
 674              		.cfi_def_cfa_register 7
 675 0006 7860     		str	r0, [r7, #4]
 551:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CHAN_EN_REG = mask & ADC_MAX_CHANNELS_EN_MASK;
 676              		.loc 1 551 0
 677 0008 044B     		ldr	r3, .L48
 678 000a 7A68     		ldr	r2, [r7, #4]
 679 000c 0121     		movs	r1, #1
 680 000e 0A40     		ands	r2, r1
 681 0010 1A60     		str	r2, [r3]
 552:Generated_Source\PSoC4/ADC.c **** }
 682              		.loc 1 552 0
 683 0012 C046     		nop
 684 0014 BD46     		mov	sp, r7
 685 0016 02B0     		add	sp, sp, #8
 686              		@ sp needed
 687 0018 80BD     		pop	{r7, pc}
 688              	.L49:
 689 001a C046     		.align	2
 690              	.L48:
 691 001c 20001A40 		.word	1075445792
 692              		.cfi_endproc
 693              	.LFE8:
 694              		.size	ADC_SetChanMask, .-ADC_SetChanMask
 695              		.section	.text.ADC_SetLowLimit,"ax",%progbits
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccVMELUE.s 			page 23


 696              		.align	2
 697              		.global	ADC_SetLowLimit
 698              		.code	16
 699              		.thumb_func
 700              		.type	ADC_SetLowLimit, %function
 701              	ADC_SetLowLimit:
 702              	.LFB9:
 553:Generated_Source\PSoC4/ADC.c **** 
 554:Generated_Source\PSoC4/ADC.c **** #if(ADC_INJ_CHANNEL_ENABLED)
 555:Generated_Source\PSoC4/ADC.c **** 
 556:Generated_Source\PSoC4/ADC.c **** 
 557:Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
 558:Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_EnableInjection
 559:Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 560:Generated_Source\PSoC4/ADC.c ****     *
 561:Generated_Source\PSoC4/ADC.c ****     * Summary:
 562:Generated_Source\PSoC4/ADC.c ****     *  Enables the injection channel for the next scan only.
 563:Generated_Source\PSoC4/ADC.c ****     *
 564:Generated_Source\PSoC4/ADC.c ****     * Parameters:
 565:Generated_Source\PSoC4/ADC.c ****     *  None.
 566:Generated_Source\PSoC4/ADC.c ****     *
 567:Generated_Source\PSoC4/ADC.c ****     * Return:
 568:Generated_Source\PSoC4/ADC.c ****     *  None.
 569:Generated_Source\PSoC4/ADC.c ****     *
 570:Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
 571:Generated_Source\PSoC4/ADC.c ****     void ADC_EnableInjection(void)
 572:Generated_Source\PSoC4/ADC.c ****     {
 573:Generated_Source\PSoC4/ADC.c ****         ADC_SAR_INJ_CHAN_CONFIG_REG |= ADC_INJ_CHAN_EN;
 574:Generated_Source\PSoC4/ADC.c ****     }
 575:Generated_Source\PSoC4/ADC.c **** 
 576:Generated_Source\PSoC4/ADC.c **** #endif /* ADC_INJ_CHANNEL_ENABLED */
 577:Generated_Source\PSoC4/ADC.c **** 
 578:Generated_Source\PSoC4/ADC.c **** 
 579:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 580:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetLowLimit
 581:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 582:Generated_Source\PSoC4/ADC.c **** *
 583:Generated_Source\PSoC4/ADC.c **** * Summary:
 584:Generated_Source\PSoC4/ADC.c **** *  Sets the low limit parameter for a limit condition.
 585:Generated_Source\PSoC4/ADC.c **** *
 586:Generated_Source\PSoC4/ADC.c **** * Parameters:
 587:Generated_Source\PSoC4/ADC.c **** *  lowLimit: The low limit for a limit condition.
 588:Generated_Source\PSoC4/ADC.c **** *
 589:Generated_Source\PSoC4/ADC.c **** * Return:
 590:Generated_Source\PSoC4/ADC.c **** *  None.
 591:Generated_Source\PSoC4/ADC.c **** *
 592:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 593:Generated_Source\PSoC4/ADC.c **** void ADC_SetLowLimit(uint32 lowLimit)
 594:Generated_Source\PSoC4/ADC.c **** {
 703              		.loc 1 594 0
 704              		.cfi_startproc
 705              		@ args = 0, pretend = 0, frame = 8
 706              		@ frame_needed = 1, uses_anonymous_args = 0
 707 0000 80B5     		push	{r7, lr}
 708              		.cfi_def_cfa_offset 8
 709              		.cfi_offset 7, -8
 710              		.cfi_offset 14, -4
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccVMELUE.s 			page 24


 711 0002 82B0     		sub	sp, sp, #8
 712              		.cfi_def_cfa_offset 16
 713 0004 00AF     		add	r7, sp, #0
 714              		.cfi_def_cfa_register 7
 715 0006 7860     		str	r0, [r7, #4]
 595:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG &= (uint32)(~ADC_RANGE_LOW_MASK);
 716              		.loc 1 595 0
 717 0008 084B     		ldr	r3, .L51
 718 000a 084A     		ldr	r2, .L51
 719 000c 1268     		ldr	r2, [r2]
 720 000e 120C     		lsrs	r2, r2, #16
 721 0010 1204     		lsls	r2, r2, #16
 722 0012 1A60     		str	r2, [r3]
 596:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG |= lowLimit & ADC_RANGE_LOW_MASK;
 723              		.loc 1 596 0
 724 0014 054B     		ldr	r3, .L51
 725 0016 054A     		ldr	r2, .L51
 726 0018 1168     		ldr	r1, [r2]
 727 001a 7A68     		ldr	r2, [r7, #4]
 728 001c 1204     		lsls	r2, r2, #16
 729 001e 120C     		lsrs	r2, r2, #16
 730 0020 0A43     		orrs	r2, r1
 731 0022 1A60     		str	r2, [r3]
 597:Generated_Source\PSoC4/ADC.c **** }
 732              		.loc 1 597 0
 733 0024 C046     		nop
 734 0026 BD46     		mov	sp, r7
 735 0028 02B0     		add	sp, sp, #8
 736              		@ sp needed
 737 002a 80BD     		pop	{r7, pc}
 738              	.L52:
 739              		.align	2
 740              	.L51:
 741 002c 18001A40 		.word	1075445784
 742              		.cfi_endproc
 743              	.LFE9:
 744              		.size	ADC_SetLowLimit, .-ADC_SetLowLimit
 745              		.section	.text.ADC_SetHighLimit,"ax",%progbits
 746              		.align	2
 747              		.global	ADC_SetHighLimit
 748              		.code	16
 749              		.thumb_func
 750              		.type	ADC_SetHighLimit, %function
 751              	ADC_SetHighLimit:
 752              	.LFB10:
 598:Generated_Source\PSoC4/ADC.c **** 
 599:Generated_Source\PSoC4/ADC.c **** 
 600:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 601:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetHighLimit
 602:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 603:Generated_Source\PSoC4/ADC.c **** *
 604:Generated_Source\PSoC4/ADC.c **** * Summary:
 605:Generated_Source\PSoC4/ADC.c **** *  Sets the low limit parameter for a limit condition.
 606:Generated_Source\PSoC4/ADC.c **** *
 607:Generated_Source\PSoC4/ADC.c **** * Parameters:
 608:Generated_Source\PSoC4/ADC.c **** *  highLimit: The high limit for a limit condition.
 609:Generated_Source\PSoC4/ADC.c **** *
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccVMELUE.s 			page 25


 610:Generated_Source\PSoC4/ADC.c **** * Return:
 611:Generated_Source\PSoC4/ADC.c **** *  None.
 612:Generated_Source\PSoC4/ADC.c **** *
 613:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 614:Generated_Source\PSoC4/ADC.c **** void ADC_SetHighLimit(uint32 highLimit)
 615:Generated_Source\PSoC4/ADC.c **** {
 753              		.loc 1 615 0
 754              		.cfi_startproc
 755              		@ args = 0, pretend = 0, frame = 8
 756              		@ frame_needed = 1, uses_anonymous_args = 0
 757 0000 80B5     		push	{r7, lr}
 758              		.cfi_def_cfa_offset 8
 759              		.cfi_offset 7, -8
 760              		.cfi_offset 14, -4
 761 0002 82B0     		sub	sp, sp, #8
 762              		.cfi_def_cfa_offset 16
 763 0004 00AF     		add	r7, sp, #0
 764              		.cfi_def_cfa_register 7
 765 0006 7860     		str	r0, [r7, #4]
 616:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG &= (uint32)(~ADC_RANGE_HIGH_MASK);
 766              		.loc 1 616 0
 767 0008 084B     		ldr	r3, .L54
 768 000a 084A     		ldr	r2, .L54
 769 000c 1268     		ldr	r2, [r2]
 770 000e 1204     		lsls	r2, r2, #16
 771 0010 120C     		lsrs	r2, r2, #16
 772 0012 1A60     		str	r2, [r3]
 617:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG |= (uint32)(highLimit << ADC_RANGE_HIGH_OFFSET);
 773              		.loc 1 617 0
 774 0014 054B     		ldr	r3, .L54
 775 0016 054A     		ldr	r2, .L54
 776 0018 1168     		ldr	r1, [r2]
 777 001a 7A68     		ldr	r2, [r7, #4]
 778 001c 1204     		lsls	r2, r2, #16
 779 001e 0A43     		orrs	r2, r1
 780 0020 1A60     		str	r2, [r3]
 618:Generated_Source\PSoC4/ADC.c **** }
 781              		.loc 1 618 0
 782 0022 C046     		nop
 783 0024 BD46     		mov	sp, r7
 784 0026 02B0     		add	sp, sp, #8
 785              		@ sp needed
 786 0028 80BD     		pop	{r7, pc}
 787              	.L55:
 788 002a C046     		.align	2
 789              	.L54:
 790 002c 18001A40 		.word	1075445784
 791              		.cfi_endproc
 792              	.LFE10:
 793              		.size	ADC_SetHighLimit, .-ADC_SetHighLimit
 794              		.section	.text.ADC_SetLimitMask,"ax",%progbits
 795              		.align	2
 796              		.global	ADC_SetLimitMask
 797              		.code	16
 798              		.thumb_func
 799              		.type	ADC_SetLimitMask, %function
 800              	ADC_SetLimitMask:
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccVMELUE.s 			page 26


 801              	.LFB11:
 619:Generated_Source\PSoC4/ADC.c **** 
 620:Generated_Source\PSoC4/ADC.c **** 
 621:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 622:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetLimitMask
 623:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 624:Generated_Source\PSoC4/ADC.c **** *
 625:Generated_Source\PSoC4/ADC.c **** * Summary:
 626:Generated_Source\PSoC4/ADC.c **** *  Sets the channel limit condition mask.
 627:Generated_Source\PSoC4/ADC.c **** *
 628:Generated_Source\PSoC4/ADC.c **** * Parameters:
 629:Generated_Source\PSoC4/ADC.c **** *  mask: Sets which channels that may cause a
 630:Generated_Source\PSoC4/ADC.c **** *  limit condition interrupt. Setting bits for channels that do not exist
 631:Generated_Source\PSoC4/ADC.c **** *  will have no effect. For example, if only 6 channels were enabled,
 632:Generated_Source\PSoC4/ADC.c **** *  setting a mask of 0x0103 would only enable the last two channels (0 and 1).
 633:Generated_Source\PSoC4/ADC.c **** *
 634:Generated_Source\PSoC4/ADC.c **** * Return:
 635:Generated_Source\PSoC4/ADC.c **** *  None.
 636:Generated_Source\PSoC4/ADC.c **** *
 637:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 638:Generated_Source\PSoC4/ADC.c **** void ADC_SetLimitMask(uint32 mask)
 639:Generated_Source\PSoC4/ADC.c **** {
 802              		.loc 1 639 0
 803              		.cfi_startproc
 804              		@ args = 0, pretend = 0, frame = 8
 805              		@ frame_needed = 1, uses_anonymous_args = 0
 806 0000 80B5     		push	{r7, lr}
 807              		.cfi_def_cfa_offset 8
 808              		.cfi_offset 7, -8
 809              		.cfi_offset 14, -4
 810 0002 82B0     		sub	sp, sp, #8
 811              		.cfi_def_cfa_offset 16
 812 0004 00AF     		add	r7, sp, #0
 813              		.cfi_def_cfa_register 7
 814 0006 7860     		str	r0, [r7, #4]
 640:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_INTR_MASK_REG = mask & ADC_MAX_CHANNELS_EN_MASK;
 815              		.loc 1 640 0
 816 0008 044B     		ldr	r3, .L57
 817 000a 7A68     		ldr	r2, [r7, #4]
 818 000c 0121     		movs	r1, #1
 819 000e 0A40     		ands	r2, r1
 820 0010 1A60     		str	r2, [r3]
 641:Generated_Source\PSoC4/ADC.c **** }
 821              		.loc 1 641 0
 822 0012 C046     		nop
 823 0014 BD46     		mov	sp, r7
 824 0016 02B0     		add	sp, sp, #8
 825              		@ sp needed
 826 0018 80BD     		pop	{r7, pc}
 827              	.L58:
 828 001a C046     		.align	2
 829              	.L57:
 830 001c 38021A40 		.word	1075446328
 831              		.cfi_endproc
 832              	.LFE11:
 833              		.size	ADC_SetLimitMask, .-ADC_SetLimitMask
 834              		.section	.text.ADC_SetSatMask,"ax",%progbits
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccVMELUE.s 			page 27


 835              		.align	2
 836              		.global	ADC_SetSatMask
 837              		.code	16
 838              		.thumb_func
 839              		.type	ADC_SetSatMask, %function
 840              	ADC_SetSatMask:
 841              	.LFB12:
 642:Generated_Source\PSoC4/ADC.c **** 
 643:Generated_Source\PSoC4/ADC.c **** 
 644:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 645:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetSatMask
 646:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 647:Generated_Source\PSoC4/ADC.c **** *
 648:Generated_Source\PSoC4/ADC.c **** * Summary:
 649:Generated_Source\PSoC4/ADC.c **** *  Sets the channel saturation event mask.
 650:Generated_Source\PSoC4/ADC.c **** *
 651:Generated_Source\PSoC4/ADC.c **** * Parameters:
 652:Generated_Source\PSoC4/ADC.c **** *  mask: Sets which channels that may cause a
 653:Generated_Source\PSoC4/ADC.c **** *  saturation event interrupt. Setting bits for channels that do not exist
 654:Generated_Source\PSoC4/ADC.c **** *  will have no effect. For example, if only 8 channels were enabled,
 655:Generated_Source\PSoC4/ADC.c **** *  setting a mask of 0x01C0 would only enable two channels (6 and 7).
 656:Generated_Source\PSoC4/ADC.c **** *
 657:Generated_Source\PSoC4/ADC.c **** * Return:
 658:Generated_Source\PSoC4/ADC.c **** *  None.
 659:Generated_Source\PSoC4/ADC.c **** *
 660:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 661:Generated_Source\PSoC4/ADC.c **** void ADC_SetSatMask(uint32 mask)
 662:Generated_Source\PSoC4/ADC.c **** {
 842              		.loc 1 662 0
 843              		.cfi_startproc
 844              		@ args = 0, pretend = 0, frame = 8
 845              		@ frame_needed = 1, uses_anonymous_args = 0
 846 0000 80B5     		push	{r7, lr}
 847              		.cfi_def_cfa_offset 8
 848              		.cfi_offset 7, -8
 849              		.cfi_offset 14, -4
 850 0002 82B0     		sub	sp, sp, #8
 851              		.cfi_def_cfa_offset 16
 852 0004 00AF     		add	r7, sp, #0
 853              		.cfi_def_cfa_register 7
 854 0006 7860     		str	r0, [r7, #4]
 663:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SATURATE_INTR_MASK_REG = mask & ADC_MAX_CHANNELS_EN_MASK;
 855              		.loc 1 663 0
 856 0008 044B     		ldr	r3, .L60
 857 000a 7A68     		ldr	r2, [r7, #4]
 858 000c 0121     		movs	r1, #1
 859 000e 0A40     		ands	r2, r1
 860 0010 1A60     		str	r2, [r3]
 664:Generated_Source\PSoC4/ADC.c **** }
 861              		.loc 1 664 0
 862 0012 C046     		nop
 863 0014 BD46     		mov	sp, r7
 864 0016 02B0     		add	sp, sp, #8
 865              		@ sp needed
 866 0018 80BD     		pop	{r7, pc}
 867              	.L61:
 868 001a C046     		.align	2
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccVMELUE.s 			page 28


 869              	.L60:
 870 001c 28021A40 		.word	1075446312
 871              		.cfi_endproc
 872              	.LFE12:
 873              		.size	ADC_SetSatMask, .-ADC_SetSatMask
 874              		.section	.text.ADC_SetOffset,"ax",%progbits
 875              		.align	2
 876              		.global	ADC_SetOffset
 877              		.code	16
 878              		.thumb_func
 879              		.type	ADC_SetOffset, %function
 880              	ADC_SetOffset:
 881              	.LFB13:
 665:Generated_Source\PSoC4/ADC.c **** 
 666:Generated_Source\PSoC4/ADC.c **** 
 667:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 668:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetOffset
 669:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 670:Generated_Source\PSoC4/ADC.c **** *
 671:Generated_Source\PSoC4/ADC.c **** * Summary:
 672:Generated_Source\PSoC4/ADC.c **** *   Description: Sets the ADC offset which is used by the functions
 673:Generated_Source\PSoC4/ADC.c **** *   ADC_CountsTo_uVolts, ADC_CountsTo_mVolts and ADC_CountsTo_Volts
 674:Generated_Source\PSoC4/ADC.c **** *   to substract the offset from the given reading
 675:Generated_Source\PSoC4/ADC.c **** *   before calculating the voltage conversion.
 676:Generated_Source\PSoC4/ADC.c **** *
 677:Generated_Source\PSoC4/ADC.c **** * Parameters:
 678:Generated_Source\PSoC4/ADC.c **** *  chan: ADC channel number.
 679:Generated_Source\PSoC4/ADC.c **** *  offset: This value is a measured value when the
 680:Generated_Source\PSoC4/ADC.c **** *          inputs are shorted or connected to the same input voltage.
 681:Generated_Source\PSoC4/ADC.c **** *
 682:Generated_Source\PSoC4/ADC.c **** * Return:
 683:Generated_Source\PSoC4/ADC.c **** *  None.
 684:Generated_Source\PSoC4/ADC.c **** *
 685:Generated_Source\PSoC4/ADC.c **** * Global variables:
 686:Generated_Source\PSoC4/ADC.c **** *  ADC_Offset:  Modified to set the user provided offset.
 687:Generated_Source\PSoC4/ADC.c **** *
 688:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 689:Generated_Source\PSoC4/ADC.c **** void ADC_SetOffset(uint32 chan, int16 offset)
 690:Generated_Source\PSoC4/ADC.c **** {
 882              		.loc 1 690 0
 883              		.cfi_startproc
 884              		@ args = 0, pretend = 0, frame = 8
 885              		@ frame_needed = 1, uses_anonymous_args = 0
 886 0000 80B5     		push	{r7, lr}
 887              		.cfi_def_cfa_offset 8
 888              		.cfi_offset 7, -8
 889              		.cfi_offset 14, -4
 890 0002 82B0     		sub	sp, sp, #8
 891              		.cfi_def_cfa_offset 16
 892 0004 00AF     		add	r7, sp, #0
 893              		.cfi_def_cfa_register 7
 894 0006 7860     		str	r0, [r7, #4]
 895 0008 0A00     		movs	r2, r1
 896 000a BB1C     		adds	r3, r7, #2
 897 000c 1A80     		strh	r2, [r3]
 691:Generated_Source\PSoC4/ADC.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 692:Generated_Source\PSoC4/ADC.c ****     CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccVMELUE.s 			page 29


 898              		.loc 1 692 0
 899 000e 7B68     		ldr	r3, [r7, #4]
 900 0010 002B     		cmp	r3, #0
 901 0012 02D0     		beq	.L63
 902              		.loc 1 692 0 is_stmt 0 discriminator 1
 903 0014 0020     		movs	r0, #0
 904 0016 FFF7FEFF 		bl	CyHalt
 905              	.L63:
 693:Generated_Source\PSoC4/ADC.c **** 
 694:Generated_Source\PSoC4/ADC.c ****     ADC_offset[chan] = offset;
 906              		.loc 1 694 0 is_stmt 1
 907 001a 054B     		ldr	r3, .L64
 908 001c 7A68     		ldr	r2, [r7, #4]
 909 001e 5200     		lsls	r2, r2, #1
 910 0020 B91C     		adds	r1, r7, #2
 911 0022 0988     		ldrh	r1, [r1]
 912 0024 D152     		strh	r1, [r2, r3]
 695:Generated_Source\PSoC4/ADC.c **** }
 913              		.loc 1 695 0
 914 0026 C046     		nop
 915 0028 BD46     		mov	sp, r7
 916 002a 02B0     		add	sp, sp, #8
 917              		@ sp needed
 918 002c 80BD     		pop	{r7, pc}
 919              	.L65:
 920 002e C046     		.align	2
 921              	.L64:
 922 0030 00000000 		.word	ADC_offset
 923              		.cfi_endproc
 924              	.LFE13:
 925              		.size	ADC_SetOffset, .-ADC_SetOffset
 926              		.section	.text.ADC_SetGain,"ax",%progbits
 927              		.align	2
 928              		.global	ADC_SetGain
 929              		.code	16
 930              		.thumb_func
 931              		.type	ADC_SetGain, %function
 932              	ADC_SetGain:
 933              	.LFB14:
 696:Generated_Source\PSoC4/ADC.c **** 
 697:Generated_Source\PSoC4/ADC.c **** 
 698:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 699:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetGain
 700:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 701:Generated_Source\PSoC4/ADC.c **** *
 702:Generated_Source\PSoC4/ADC.c **** * Summary:
 703:Generated_Source\PSoC4/ADC.c **** *  Description: Sets the ADC gain in counts per 10 volt for the voltage
 704:Generated_Source\PSoC4/ADC.c **** *  conversion functions below. This value is set by default by the
 705:Generated_Source\PSoC4/ADC.c **** *  reference and input range settings. It should only be used to further
 706:Generated_Source\PSoC4/ADC.c **** *  calibrate the ADC with a known input or if an external reference is
 707:Generated_Source\PSoC4/ADC.c **** *  used. Affects the ADC_CountsTo_uVolts, ADC_CountsTo_mVolts
 708:Generated_Source\PSoC4/ADC.c **** *  and ADC_CountsTo_Volts functions by supplying the correct
 709:Generated_Source\PSoC4/ADC.c **** *  conversion between ADC counts and voltage.
 710:Generated_Source\PSoC4/ADC.c **** *
 711:Generated_Source\PSoC4/ADC.c **** * Parameters:
 712:Generated_Source\PSoC4/ADC.c **** *  chan: ADC channel number.
 713:Generated_Source\PSoC4/ADC.c **** *  adcGain: ADC gain in counts per 10 volts.
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccVMELUE.s 			page 30


 714:Generated_Source\PSoC4/ADC.c **** *
 715:Generated_Source\PSoC4/ADC.c **** * Return:
 716:Generated_Source\PSoC4/ADC.c **** *  None.
 717:Generated_Source\PSoC4/ADC.c **** *
 718:Generated_Source\PSoC4/ADC.c **** * Global variables:
 719:Generated_Source\PSoC4/ADC.c **** *  ADC_CountsPer10Volt:  modified to set the ADC gain in counts
 720:Generated_Source\PSoC4/ADC.c **** *   per 10 volt.
 721:Generated_Source\PSoC4/ADC.c **** *
 722:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 723:Generated_Source\PSoC4/ADC.c **** void ADC_SetGain(uint32 chan, int32 adcGain)
 724:Generated_Source\PSoC4/ADC.c **** {
 934              		.loc 1 724 0
 935              		.cfi_startproc
 936              		@ args = 0, pretend = 0, frame = 8
 937              		@ frame_needed = 1, uses_anonymous_args = 0
 938 0000 80B5     		push	{r7, lr}
 939              		.cfi_def_cfa_offset 8
 940              		.cfi_offset 7, -8
 941              		.cfi_offset 14, -4
 942 0002 82B0     		sub	sp, sp, #8
 943              		.cfi_def_cfa_offset 16
 944 0004 00AF     		add	r7, sp, #0
 945              		.cfi_def_cfa_register 7
 946 0006 7860     		str	r0, [r7, #4]
 947 0008 3960     		str	r1, [r7]
 725:Generated_Source\PSoC4/ADC.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 726:Generated_Source\PSoC4/ADC.c ****     CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 948              		.loc 1 726 0
 949 000a 7B68     		ldr	r3, [r7, #4]
 950 000c 002B     		cmp	r3, #0
 951 000e 02D0     		beq	.L67
 952              		.loc 1 726 0 is_stmt 0 discriminator 1
 953 0010 0020     		movs	r0, #0
 954 0012 FFF7FEFF 		bl	CyHalt
 955              	.L67:
 727:Generated_Source\PSoC4/ADC.c **** 
 728:Generated_Source\PSoC4/ADC.c ****     ADC_countsPer10Volt[chan] = adcGain;
 956              		.loc 1 728 0 is_stmt 1
 957 0016 044B     		ldr	r3, .L68
 958 0018 7A68     		ldr	r2, [r7, #4]
 959 001a 9200     		lsls	r2, r2, #2
 960 001c 3968     		ldr	r1, [r7]
 961 001e D150     		str	r1, [r2, r3]
 729:Generated_Source\PSoC4/ADC.c **** }
 962              		.loc 1 729 0
 963 0020 C046     		nop
 964 0022 BD46     		mov	sp, r7
 965 0024 02B0     		add	sp, sp, #8
 966              		@ sp needed
 967 0026 80BD     		pop	{r7, pc}
 968              	.L69:
 969              		.align	2
 970              	.L68:
 971 0028 00000000 		.word	ADC_countsPer10Volt
 972              		.cfi_endproc
 973              	.LFE14:
 974              		.size	ADC_SetGain, .-ADC_SetGain
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccVMELUE.s 			page 31


 975              		.section	.text.ADC_CountsTo_mVolts,"ax",%progbits
 976              		.align	2
 977              		.global	ADC_CountsTo_mVolts
 978              		.code	16
 979              		.thumb_func
 980              		.type	ADC_CountsTo_mVolts, %function
 981              	ADC_CountsTo_mVolts:
 982              	.LFB15:
 730:Generated_Source\PSoC4/ADC.c **** 
 731:Generated_Source\PSoC4/ADC.c **** 
 732:Generated_Source\PSoC4/ADC.c **** #if(ADC_DEFAULT_JUSTIFICATION_SEL == ADC__RIGHT)
 733:Generated_Source\PSoC4/ADC.c **** 
 734:Generated_Source\PSoC4/ADC.c **** 
 735:Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
 736:Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_CountsTo_mVolts
 737:Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 738:Generated_Source\PSoC4/ADC.c ****     *
 739:Generated_Source\PSoC4/ADC.c ****     * Summary:
 740:Generated_Source\PSoC4/ADC.c ****     *  This function converts ADC counts to mVolts
 741:Generated_Source\PSoC4/ADC.c ****     *  This function is not available when left data format justification selected.
 742:Generated_Source\PSoC4/ADC.c ****     *
 743:Generated_Source\PSoC4/ADC.c ****     * Parameters:
 744:Generated_Source\PSoC4/ADC.c ****     *  chan: The ADC channel number.
 745:Generated_Source\PSoC4/ADC.c ****     *  adcCounts: Result from the ADC conversion
 746:Generated_Source\PSoC4/ADC.c ****     *
 747:Generated_Source\PSoC4/ADC.c ****     * Return:
 748:Generated_Source\PSoC4/ADC.c ****     *  Results in mVolts
 749:Generated_Source\PSoC4/ADC.c ****     *
 750:Generated_Source\PSoC4/ADC.c ****     * Global variables:
 751:Generated_Source\PSoC4/ADC.c ****     *  ADC_countsPer10Volt:  used to convert ADC counts to mVolts.
 752:Generated_Source\PSoC4/ADC.c ****     *  ADC_Offset:  Used as the offset while converting ADC counts
 753:Generated_Source\PSoC4/ADC.c ****     *   to mVolts.
 754:Generated_Source\PSoC4/ADC.c ****     *
 755:Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
 756:Generated_Source\PSoC4/ADC.c ****     int16 ADC_CountsTo_mVolts(uint32 chan, int16 adcCounts)
 757:Generated_Source\PSoC4/ADC.c ****     {
 983              		.loc 1 757 0
 984              		.cfi_startproc
 985              		@ args = 0, pretend = 0, frame = 16
 986              		@ frame_needed = 1, uses_anonymous_args = 0
 987 0000 80B5     		push	{r7, lr}
 988              		.cfi_def_cfa_offset 8
 989              		.cfi_offset 7, -8
 990              		.cfi_offset 14, -4
 991 0002 84B0     		sub	sp, sp, #16
 992              		.cfi_def_cfa_offset 24
 993 0004 00AF     		add	r7, sp, #0
 994              		.cfi_def_cfa_register 7
 995 0006 7860     		str	r0, [r7, #4]
 996 0008 0A00     		movs	r2, r1
 997 000a BB1C     		adds	r3, r7, #2
 998 000c 1A80     		strh	r2, [r3]
 758:Generated_Source\PSoC4/ADC.c ****         int16 mVolts;
 759:Generated_Source\PSoC4/ADC.c **** 
 760:Generated_Source\PSoC4/ADC.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 761:Generated_Source\PSoC4/ADC.c ****         CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 999              		.loc 1 761 0
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccVMELUE.s 			page 32


 1000 000e 7B68     		ldr	r3, [r7, #4]
 1001 0010 002B     		cmp	r3, #0
 1002 0012 02D0     		beq	.L71
 1003              		.loc 1 761 0 is_stmt 0 discriminator 1
 1004 0014 0020     		movs	r0, #0
 1005 0016 FFF7FEFF 		bl	CyHalt
 1006              	.L71:
 762:Generated_Source\PSoC4/ADC.c **** 
 763:Generated_Source\PSoC4/ADC.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 764:Generated_Source\PSoC4/ADC.c ****         #if(ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE)
 765:Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chan] & ADC_AVERAGING_EN) != 0u)
 766:Generated_Source\PSoC4/ADC.c ****             {
 767:Generated_Source\PSoC4/ADC.c ****                 adcCounts /= ADC_DEFAULT_AVG_SAMPLES_DIV;
 768:Generated_Source\PSoC4/ADC.c ****             }
 769:Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE */
 770:Generated_Source\PSoC4/ADC.c **** 
 771:Generated_Source\PSoC4/ADC.c ****         /* Subtract ADC offset */
 772:Generated_Source\PSoC4/ADC.c ****         adcCounts -= ADC_offset[chan];
 1007              		.loc 1 772 0 is_stmt 1
 1008 001a 1E4B     		ldr	r3, .L77
 1009 001c 7A68     		ldr	r2, [r7, #4]
 1010 001e 5200     		lsls	r2, r2, #1
 1011 0020 D35A     		ldrh	r3, [r2, r3]
 1012 0022 19B2     		sxth	r1, r3
 1013 0024 BB1C     		adds	r3, r7, #2
 1014 0026 1A88     		ldrh	r2, [r3]
 1015 0028 8BB2     		uxth	r3, r1
 1016 002a D31A     		subs	r3, r2, r3
 1017 002c 9AB2     		uxth	r2, r3
 1018 002e BB1C     		adds	r3, r7, #2
 1019 0030 1A80     		strh	r2, [r3]
 773:Generated_Source\PSoC4/ADC.c **** 
 774:Generated_Source\PSoC4/ADC.c ****         mVolts = (int16)((((int32)adcCounts * ADC_10MV_COUNTS) + ( (adcCounts > 0) ?
 1020              		.loc 1 774 0
 1021 0032 BB1C     		adds	r3, r7, #2
 1022 0034 0022     		movs	r2, #0
 1023 0036 9B5E     		ldrsh	r3, [r3, r2]
 1024 0038 174A     		ldr	r2, .L77+4
 1025 003a 5A43     		muls	r2, r3
 775:Generated_Source\PSoC4/ADC.c ****                  (ADC_countsPer10Volt[chan] / 2) : (-(ADC_countsPer10Volt[chan] / 2)) ))
 1026              		.loc 1 775 0
 1027 003c BB1C     		adds	r3, r7, #2
 1028 003e 0021     		movs	r1, #0
 1029 0040 5B5E     		ldrsh	r3, [r3, r1]
 1030 0042 002B     		cmp	r3, #0
 1031 0044 08DD     		ble	.L72
 1032              		.loc 1 775 0 is_stmt 0 discriminator 1
 1033 0046 154B     		ldr	r3, .L77+8
 1034 0048 7968     		ldr	r1, [r7, #4]
 1035 004a 8900     		lsls	r1, r1, #2
 1036 004c CB58     		ldr	r3, [r1, r3]
 1037 004e 002B     		cmp	r3, #0
 1038 0050 00DA     		bge	.L73
 1039 0052 0133     		adds	r3, r3, #1
 1040              	.L73:
 1041 0054 5B10     		asrs	r3, r3, #1
 1042 0056 08E0     		b	.L74
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccVMELUE.s 			page 33


 1043              	.L72:
 1044              		.loc 1 775 0 discriminator 2
 1045 0058 104B     		ldr	r3, .L77+8
 1046 005a 7968     		ldr	r1, [r7, #4]
 1047 005c 8900     		lsls	r1, r1, #2
 1048 005e CB58     		ldr	r3, [r1, r3]
 1049 0060 002B     		cmp	r3, #0
 1050 0062 00DA     		bge	.L75
 1051 0064 0133     		adds	r3, r3, #1
 1052              	.L75:
 1053 0066 5B10     		asrs	r3, r3, #1
 1054 0068 5B42     		rsbs	r3, r3, #0
 1055              	.L74:
 774:Generated_Source\PSoC4/ADC.c ****                  (ADC_countsPer10Volt[chan] / 2) : (-(ADC_countsPer10Volt[chan] / 2)) ))
 1056              		.loc 1 774 0 is_stmt 1
 1057 006a D018     		adds	r0, r2, r3
 776:Generated_Source\PSoC4/ADC.c ****                  / ADC_countsPer10Volt[chan]);
 1058              		.loc 1 776 0
 1059 006c 0B4B     		ldr	r3, .L77+8
 1060 006e 7A68     		ldr	r2, [r7, #4]
 1061 0070 9200     		lsls	r2, r2, #2
 1062 0072 D358     		ldr	r3, [r2, r3]
 1063 0074 1900     		movs	r1, r3
 1064 0076 FFF7FEFF 		bl	__aeabi_idiv
 1065 007a 0300     		movs	r3, r0
 1066 007c 1A00     		movs	r2, r3
 774:Generated_Source\PSoC4/ADC.c ****                  (ADC_countsPer10Volt[chan] / 2) : (-(ADC_countsPer10Volt[chan] / 2)) ))
 1067              		.loc 1 774 0
 1068 007e 0E23     		movs	r3, #14
 1069 0080 FB18     		adds	r3, r7, r3
 1070 0082 1A80     		strh	r2, [r3]
 777:Generated_Source\PSoC4/ADC.c **** 
 778:Generated_Source\PSoC4/ADC.c ****         return( mVolts );
 1071              		.loc 1 778 0
 1072 0084 0E23     		movs	r3, #14
 1073 0086 FB18     		adds	r3, r7, r3
 1074 0088 0022     		movs	r2, #0
 1075 008a 9B5E     		ldrsh	r3, [r3, r2]
 779:Generated_Source\PSoC4/ADC.c ****     }
 1076              		.loc 1 779 0
 1077 008c 1800     		movs	r0, r3
 1078 008e BD46     		mov	sp, r7
 1079 0090 04B0     		add	sp, sp, #16
 1080              		@ sp needed
 1081 0092 80BD     		pop	{r7, pc}
 1082              	.L78:
 1083              		.align	2
 1084              	.L77:
 1085 0094 00000000 		.word	ADC_offset
 1086 0098 10270000 		.word	10000
 1087 009c 00000000 		.word	ADC_countsPer10Volt
 1088              		.cfi_endproc
 1089              	.LFE15:
 1090              		.size	ADC_CountsTo_mVolts, .-ADC_CountsTo_mVolts
 1091              		.global	__aeabi_lmul
 1092              		.global	__aeabi_ldivmod
 1093              		.section	.text.ADC_CountsTo_uVolts,"ax",%progbits
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccVMELUE.s 			page 34


 1094              		.align	2
 1095              		.global	ADC_CountsTo_uVolts
 1096              		.code	16
 1097              		.thumb_func
 1098              		.type	ADC_CountsTo_uVolts, %function
 1099              	ADC_CountsTo_uVolts:
 1100              	.LFB16:
 780:Generated_Source\PSoC4/ADC.c **** 
 781:Generated_Source\PSoC4/ADC.c **** 
 782:Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
 783:Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_CountsTo_uVolts
 784:Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 785:Generated_Source\PSoC4/ADC.c ****     *
 786:Generated_Source\PSoC4/ADC.c ****     * Summary:
 787:Generated_Source\PSoC4/ADC.c ****     *  This function converts ADC counts to micro Volts
 788:Generated_Source\PSoC4/ADC.c ****     *  This function is not available when left data format justification selected.
 789:Generated_Source\PSoC4/ADC.c ****     *
 790:Generated_Source\PSoC4/ADC.c ****     * Parameters:
 791:Generated_Source\PSoC4/ADC.c ****     *  chan: The ADC channel number.
 792:Generated_Source\PSoC4/ADC.c ****     *  adcCounts: Result from the ADC conversion
 793:Generated_Source\PSoC4/ADC.c ****     *
 794:Generated_Source\PSoC4/ADC.c ****     * Return:
 795:Generated_Source\PSoC4/ADC.c ****     *  Results in uVolts
 796:Generated_Source\PSoC4/ADC.c ****     *
 797:Generated_Source\PSoC4/ADC.c ****     * Global variables:
 798:Generated_Source\PSoC4/ADC.c ****     *  ADC_countsPer10Volt:  used to convert ADC counts to uVolts.
 799:Generated_Source\PSoC4/ADC.c ****     *  ADC_Offset:  Used as the offset while converting ADC counts
 800:Generated_Source\PSoC4/ADC.c ****     *   to mVolts.
 801:Generated_Source\PSoC4/ADC.c ****     *
 802:Generated_Source\PSoC4/ADC.c ****     * Theory:
 803:Generated_Source\PSoC4/ADC.c ****     *  Care must be taken to not exceed the maximum value for a 31 bit signed
 804:Generated_Source\PSoC4/ADC.c ****     *  number in the conversion to uVolts and at the same time not loose
 805:Generated_Source\PSoC4/ADC.c ****     *  resolution.
 806:Generated_Source\PSoC4/ADC.c ****     *  To convert adcCounts to microVolts it is required to be multiplied
 807:Generated_Source\PSoC4/ADC.c ****     *  on 10 million and later divide on gain in counts per 10V.
 808:Generated_Source\PSoC4/ADC.c ****     *
 809:Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
 810:Generated_Source\PSoC4/ADC.c ****     int32 ADC_CountsTo_uVolts(uint32 chan, int16 adcCounts)
 811:Generated_Source\PSoC4/ADC.c ****     {
 1101              		.loc 1 811 0
 1102              		.cfi_startproc
 1103              		@ args = 0, pretend = 0, frame = 24
 1104              		@ frame_needed = 1, uses_anonymous_args = 0
 1105 0000 B0B5     		push	{r4, r5, r7, lr}
 1106              		.cfi_def_cfa_offset 16
 1107              		.cfi_offset 4, -16
 1108              		.cfi_offset 5, -12
 1109              		.cfi_offset 7, -8
 1110              		.cfi_offset 14, -4
 1111 0002 86B0     		sub	sp, sp, #24
 1112              		.cfi_def_cfa_offset 40
 1113 0004 00AF     		add	r7, sp, #0
 1114              		.cfi_def_cfa_register 7
 1115 0006 F860     		str	r0, [r7, #12]
 1116 0008 0A00     		movs	r2, r1
 1117 000a 0A23     		movs	r3, #10
 1118 000c FB18     		adds	r3, r7, r3
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccVMELUE.s 			page 35


 1119 000e 1A80     		strh	r2, [r3]
 812:Generated_Source\PSoC4/ADC.c ****         int64 uVolts;
 813:Generated_Source\PSoC4/ADC.c **** 
 814:Generated_Source\PSoC4/ADC.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 815:Generated_Source\PSoC4/ADC.c ****         CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 1120              		.loc 1 815 0
 1121 0010 FB68     		ldr	r3, [r7, #12]
 1122 0012 002B     		cmp	r3, #0
 1123 0014 02D0     		beq	.L80
 1124              		.loc 1 815 0 is_stmt 0 discriminator 1
 1125 0016 0020     		movs	r0, #0
 1126 0018 FFF7FEFF 		bl	CyHalt
 1127              	.L80:
 816:Generated_Source\PSoC4/ADC.c **** 
 817:Generated_Source\PSoC4/ADC.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 818:Generated_Source\PSoC4/ADC.c ****         #if(ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE)
 819:Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chan] & ADC_AVERAGING_EN) != 0u)
 820:Generated_Source\PSoC4/ADC.c ****             {
 821:Generated_Source\PSoC4/ADC.c ****                 adcCounts /= ADC_DEFAULT_AVG_SAMPLES_DIV;
 822:Generated_Source\PSoC4/ADC.c ****             }
 823:Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE */
 824:Generated_Source\PSoC4/ADC.c **** 
 825:Generated_Source\PSoC4/ADC.c ****         /* Subtract ADC offset */
 826:Generated_Source\PSoC4/ADC.c ****         adcCounts -= ADC_offset[chan];
 1128              		.loc 1 826 0 is_stmt 1
 1129 001c 194B     		ldr	r3, .L82
 1130 001e FA68     		ldr	r2, [r7, #12]
 1131 0020 5200     		lsls	r2, r2, #1
 1132 0022 D35A     		ldrh	r3, [r2, r3]
 1133 0024 19B2     		sxth	r1, r3
 1134 0026 0A23     		movs	r3, #10
 1135 0028 FB18     		adds	r3, r7, r3
 1136 002a 1A88     		ldrh	r2, [r3]
 1137 002c 8BB2     		uxth	r3, r1
 1138 002e D31A     		subs	r3, r2, r3
 1139 0030 9AB2     		uxth	r2, r3
 1140 0032 0A23     		movs	r3, #10
 1141 0034 FB18     		adds	r3, r7, r3
 1142 0036 1A80     		strh	r2, [r3]
 827:Generated_Source\PSoC4/ADC.c **** 
 828:Generated_Source\PSoC4/ADC.c ****         uVolts = ((int64)adcCounts * ADC_10UV_COUNTS) / ADC_countsPer10Volt[chan];
 1143              		.loc 1 828 0
 1144 0038 0A23     		movs	r3, #10
 1145 003a FB18     		adds	r3, r7, r3
 1146 003c 1B88     		ldrh	r3, [r3]
 1147 003e 1BB2     		sxth	r3, r3
 1148 0040 3B60     		str	r3, [r7]
 1149 0042 DB17     		asrs	r3, r3, #31
 1150 0044 7B60     		str	r3, [r7, #4]
 1151 0046 104A     		ldr	r2, .L82+4
 1152 0048 0023     		movs	r3, #0
 1153 004a 3868     		ldr	r0, [r7]
 1154 004c 7968     		ldr	r1, [r7, #4]
 1155 004e FFF7FEFF 		bl	__aeabi_lmul
 1156 0052 0200     		movs	r2, r0
 1157 0054 0B00     		movs	r3, r1
 1158 0056 1000     		movs	r0, r2
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccVMELUE.s 			page 36


 1159 0058 1900     		movs	r1, r3
 1160 005a 0C4B     		ldr	r3, .L82+8
 1161 005c FA68     		ldr	r2, [r7, #12]
 1162 005e 9200     		lsls	r2, r2, #2
 1163 0060 D358     		ldr	r3, [r2, r3]
 1164 0062 1C00     		movs	r4, r3
 1165 0064 DB17     		asrs	r3, r3, #31
 1166 0066 1D00     		movs	r5, r3
 1167 0068 2200     		movs	r2, r4
 1168 006a 2B00     		movs	r3, r5
 1169 006c FFF7FEFF 		bl	__aeabi_ldivmod
 1170 0070 0300     		movs	r3, r0
 1171 0072 0C00     		movs	r4, r1
 1172 0074 3B61     		str	r3, [r7, #16]
 1173 0076 7C61     		str	r4, [r7, #20]
 829:Generated_Source\PSoC4/ADC.c **** 
 830:Generated_Source\PSoC4/ADC.c ****         return( (int32)uVolts );
 1174              		.loc 1 830 0
 1175 0078 3B69     		ldr	r3, [r7, #16]
 831:Generated_Source\PSoC4/ADC.c ****     }
 1176              		.loc 1 831 0
 1177 007a 1800     		movs	r0, r3
 1178 007c BD46     		mov	sp, r7
 1179 007e 06B0     		add	sp, sp, #24
 1180              		@ sp needed
 1181 0080 B0BD     		pop	{r4, r5, r7, pc}
 1182              	.L83:
 1183 0082 C046     		.align	2
 1184              	.L82:
 1185 0084 00000000 		.word	ADC_offset
 1186 0088 80969800 		.word	10000000
 1187 008c 00000000 		.word	ADC_countsPer10Volt
 1188              		.cfi_endproc
 1189              	.LFE16:
 1190              		.size	ADC_CountsTo_uVolts, .-ADC_CountsTo_uVolts
 1191              		.global	__aeabi_i2f
 1192              		.global	__aeabi_fmul
 1193              		.global	__aeabi_fdiv
 1194              		.section	.text.ADC_CountsTo_Volts,"ax",%progbits
 1195              		.align	2
 1196              		.global	ADC_CountsTo_Volts
 1197              		.code	16
 1198              		.thumb_func
 1199              		.type	ADC_CountsTo_Volts, %function
 1200              	ADC_CountsTo_Volts:
 1201              	.LFB17:
 832:Generated_Source\PSoC4/ADC.c **** 
 833:Generated_Source\PSoC4/ADC.c **** 
 834:Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
 835:Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_CountsTo_Volts
 836:Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 837:Generated_Source\PSoC4/ADC.c ****     *
 838:Generated_Source\PSoC4/ADC.c ****     * Summary:
 839:Generated_Source\PSoC4/ADC.c ****     *  Converts the ADC output to Volts as a floating point number.
 840:Generated_Source\PSoC4/ADC.c ****     *  This function is not available when left data format justification selected.
 841:Generated_Source\PSoC4/ADC.c ****     *
 842:Generated_Source\PSoC4/ADC.c ****     * Parameters:
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccVMELUE.s 			page 37


 843:Generated_Source\PSoC4/ADC.c ****     *  chan: The ADC channel number.
 844:Generated_Source\PSoC4/ADC.c ****     *  Result from the ADC conversion
 845:Generated_Source\PSoC4/ADC.c ****     *
 846:Generated_Source\PSoC4/ADC.c ****     * Return:
 847:Generated_Source\PSoC4/ADC.c ****     *  Results in Volts
 848:Generated_Source\PSoC4/ADC.c ****     *
 849:Generated_Source\PSoC4/ADC.c ****     * Global variables:
 850:Generated_Source\PSoC4/ADC.c ****     *  ADC_countsPer10Volt:  used to convert ADC counts to Volts.
 851:Generated_Source\PSoC4/ADC.c ****     *  ADC_Offset:  Used as the offset while converting ADC counts
 852:Generated_Source\PSoC4/ADC.c ****     *   to mVolts.
 853:Generated_Source\PSoC4/ADC.c ****     *
 854:Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
 855:Generated_Source\PSoC4/ADC.c ****     float32 ADC_CountsTo_Volts(uint32 chan, int16 adcCounts)
 856:Generated_Source\PSoC4/ADC.c ****     {
 1202              		.loc 1 856 0
 1203              		.cfi_startproc
 1204              		@ args = 0, pretend = 0, frame = 16
 1205              		@ frame_needed = 1, uses_anonymous_args = 0
 1206 0000 90B5     		push	{r4, r7, lr}
 1207              		.cfi_def_cfa_offset 12
 1208              		.cfi_offset 4, -12
 1209              		.cfi_offset 7, -8
 1210              		.cfi_offset 14, -4
 1211 0002 85B0     		sub	sp, sp, #20
 1212              		.cfi_def_cfa_offset 32
 1213 0004 00AF     		add	r7, sp, #0
 1214              		.cfi_def_cfa_register 7
 1215 0006 7860     		str	r0, [r7, #4]
 1216 0008 0A00     		movs	r2, r1
 1217 000a BB1C     		adds	r3, r7, #2
 1218 000c 1A80     		strh	r2, [r3]
 857:Generated_Source\PSoC4/ADC.c ****         float32 volts;
 858:Generated_Source\PSoC4/ADC.c **** 
 859:Generated_Source\PSoC4/ADC.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 860:Generated_Source\PSoC4/ADC.c ****         CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 1219              		.loc 1 860 0
 1220 000e 7B68     		ldr	r3, [r7, #4]
 1221 0010 002B     		cmp	r3, #0
 1222 0012 02D0     		beq	.L85
 1223              		.loc 1 860 0 is_stmt 0 discriminator 1
 1224 0014 0020     		movs	r0, #0
 1225 0016 FFF7FEFF 		bl	CyHalt
 1226              	.L85:
 861:Generated_Source\PSoC4/ADC.c **** 
 862:Generated_Source\PSoC4/ADC.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 863:Generated_Source\PSoC4/ADC.c ****         #if(ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE)
 864:Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chan] & ADC_AVERAGING_EN) != 0u)
 865:Generated_Source\PSoC4/ADC.c ****             {
 866:Generated_Source\PSoC4/ADC.c ****                 adcCounts /= ADC_DEFAULT_AVG_SAMPLES_DIV;
 867:Generated_Source\PSoC4/ADC.c ****             }
 868:Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE */
 869:Generated_Source\PSoC4/ADC.c **** 
 870:Generated_Source\PSoC4/ADC.c ****         /* Subtract ADC offset */
 871:Generated_Source\PSoC4/ADC.c ****         adcCounts -= ADC_offset[chan];
 1227              		.loc 1 871 0 is_stmt 1
 1228 001a 164B     		ldr	r3, .L87
 1229 001c 7A68     		ldr	r2, [r7, #4]
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccVMELUE.s 			page 38


 1230 001e 5200     		lsls	r2, r2, #1
 1231 0020 D35A     		ldrh	r3, [r2, r3]
 1232 0022 19B2     		sxth	r1, r3
 1233 0024 BB1C     		adds	r3, r7, #2
 1234 0026 1A88     		ldrh	r2, [r3]
 1235 0028 8BB2     		uxth	r3, r1
 1236 002a D31A     		subs	r3, r2, r3
 1237 002c 9AB2     		uxth	r2, r3
 1238 002e BB1C     		adds	r3, r7, #2
 1239 0030 1A80     		strh	r2, [r3]
 872:Generated_Source\PSoC4/ADC.c **** 
 873:Generated_Source\PSoC4/ADC.c ****         volts = ((float32)adcCounts * ADC_10V_COUNTS) / (float32)ADC_countsPer10Volt[chan];
 1240              		.loc 1 873 0
 1241 0032 BB1C     		adds	r3, r7, #2
 1242 0034 0022     		movs	r2, #0
 1243 0036 9B5E     		ldrsh	r3, [r3, r2]
 1244 0038 1800     		movs	r0, r3
 1245 003a FFF7FEFF 		bl	__aeabi_i2f
 1246 003e 031C     		adds	r3, r0, #0
 1247 0040 0D49     		ldr	r1, .L87+4
 1248 0042 181C     		adds	r0, r3, #0
 1249 0044 FFF7FEFF 		bl	__aeabi_fmul
 1250 0048 031C     		adds	r3, r0, #0
 1251 004a 1C1C     		adds	r4, r3, #0
 1252 004c 0B4B     		ldr	r3, .L87+8
 1253 004e 7A68     		ldr	r2, [r7, #4]
 1254 0050 9200     		lsls	r2, r2, #2
 1255 0052 D358     		ldr	r3, [r2, r3]
 1256 0054 1800     		movs	r0, r3
 1257 0056 FFF7FEFF 		bl	__aeabi_i2f
 1258 005a 031C     		adds	r3, r0, #0
 1259 005c 191C     		adds	r1, r3, #0
 1260 005e 201C     		adds	r0, r4, #0
 1261 0060 FFF7FEFF 		bl	__aeabi_fdiv
 1262 0064 031C     		adds	r3, r0, #0
 1263 0066 FB60     		str	r3, [r7, #12]
 874:Generated_Source\PSoC4/ADC.c **** 
 875:Generated_Source\PSoC4/ADC.c ****         return( volts );
 1264              		.loc 1 875 0
 1265 0068 FB68     		ldr	r3, [r7, #12]
 876:Generated_Source\PSoC4/ADC.c ****     }
 1266              		.loc 1 876 0
 1267 006a 181C     		adds	r0, r3, #0
 1268 006c BD46     		mov	sp, r7
 1269 006e 05B0     		add	sp, sp, #20
 1270              		@ sp needed
 1271 0070 90BD     		pop	{r4, r7, pc}
 1272              	.L88:
 1273 0072 C046     		.align	2
 1274              	.L87:
 1275 0074 00000000 		.word	ADC_offset
 1276 0078 00002041 		.word	1092616192
 1277 007c 00000000 		.word	ADC_countsPer10Volt
 1278              		.cfi_endproc
 1279              	.LFE17:
 1280              		.size	ADC_CountsTo_Volts, .-ADC_CountsTo_Volts
 1281              		.text
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccVMELUE.s 			page 39


 1282              	.Letext0:
 1283              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 1284              		.section	.debug_info,"",%progbits
 1285              	.Ldebug_info0:
 1286 0000 8D040000 		.4byte	0x48d
 1287 0004 0400     		.2byte	0x4
 1288 0006 00000000 		.4byte	.Ldebug_abbrev0
 1289 000a 04       		.byte	0x4
 1290 000b 01       		.uleb128 0x1
 1291 000c C1010000 		.4byte	.LASF60
 1292 0010 0C       		.byte	0xc
 1293 0011 BD020000 		.4byte	.LASF61
 1294 0015 29000000 		.4byte	.LASF62
 1295 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1296 001d 00000000 		.4byte	0
 1297 0021 00000000 		.4byte	.Ldebug_line0
 1298 0025 02       		.uleb128 0x2
 1299 0026 01       		.byte	0x1
 1300 0027 06       		.byte	0x6
 1301 0028 C7000000 		.4byte	.LASF0
 1302 002c 02       		.uleb128 0x2
 1303 002d 01       		.byte	0x1
 1304 002e 08       		.byte	0x8
 1305 002f 1A030000 		.4byte	.LASF1
 1306 0033 02       		.uleb128 0x2
 1307 0034 02       		.byte	0x2
 1308 0035 05       		.byte	0x5
 1309 0036 33030000 		.4byte	.LASF2
 1310 003a 02       		.uleb128 0x2
 1311 003b 02       		.byte	0x2
 1312 003c 07       		.byte	0x7
 1313 003d 9E010000 		.4byte	.LASF3
 1314 0041 02       		.uleb128 0x2
 1315 0042 04       		.byte	0x4
 1316 0043 05       		.byte	0x5
 1317 0044 EA000000 		.4byte	.LASF4
 1318 0048 02       		.uleb128 0x2
 1319 0049 04       		.byte	0x4
 1320 004a 07       		.byte	0x7
 1321 004b 6D010000 		.4byte	.LASF5
 1322 004f 02       		.uleb128 0x2
 1323 0050 08       		.byte	0x8
 1324 0051 05       		.byte	0x5
 1325 0052 B9000000 		.4byte	.LASF6
 1326 0056 02       		.uleb128 0x2
 1327 0057 08       		.byte	0x8
 1328 0058 07       		.byte	0x7
 1329 0059 91000000 		.4byte	.LASF7
 1330 005d 03       		.uleb128 0x3
 1331 005e 04       		.byte	0x4
 1332 005f 05       		.byte	0x5
 1333 0060 696E7400 		.ascii	"int\000"
 1334 0064 02       		.uleb128 0x2
 1335 0065 04       		.byte	0x4
 1336 0066 07       		.byte	0x7
 1337 0067 59010000 		.4byte	.LASF8
 1338 006b 04       		.uleb128 0x4
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccVMELUE.s 			page 40


 1339 006c 1B010000 		.4byte	.LASF9
 1340 0070 02       		.byte	0x2
 1341 0071 E401     		.2byte	0x1e4
 1342 0073 2C000000 		.4byte	0x2c
 1343 0077 04       		.uleb128 0x4
 1344 0078 00000000 		.4byte	.LASF10
 1345 007c 02       		.byte	0x2
 1346 007d E501     		.2byte	0x1e5
 1347 007f 3A000000 		.4byte	0x3a
 1348 0083 04       		.uleb128 0x4
 1349 0084 28010000 		.4byte	.LASF11
 1350 0088 02       		.byte	0x2
 1351 0089 E601     		.2byte	0x1e6
 1352 008b 48000000 		.4byte	0x48
 1353 008f 04       		.uleb128 0x4
 1354 0090 85030000 		.4byte	.LASF12
 1355 0094 02       		.byte	0x2
 1356 0095 E801     		.2byte	0x1e8
 1357 0097 33000000 		.4byte	0x33
 1358 009b 04       		.uleb128 0x4
 1359 009c DA000000 		.4byte	.LASF13
 1360 00a0 02       		.byte	0x2
 1361 00a1 E901     		.2byte	0x1e9
 1362 00a3 41000000 		.4byte	0x41
 1363 00a7 04       		.uleb128 0x4
 1364 00a8 5C020000 		.4byte	.LASF14
 1365 00ac 02       		.byte	0x2
 1366 00ad EA01     		.2byte	0x1ea
 1367 00af B3000000 		.4byte	0xb3
 1368 00b3 02       		.uleb128 0x2
 1369 00b4 04       		.byte	0x4
 1370 00b5 04       		.byte	0x4
 1371 00b6 E6020000 		.4byte	.LASF15
 1372 00ba 02       		.uleb128 0x2
 1373 00bb 08       		.byte	0x8
 1374 00bc 04       		.byte	0x4
 1375 00bd 21010000 		.4byte	.LASF16
 1376 00c1 04       		.uleb128 0x4
 1377 00c2 A7020000 		.4byte	.LASF17
 1378 00c6 02       		.byte	0x2
 1379 00c7 EF01     		.2byte	0x1ef
 1380 00c9 4F000000 		.4byte	0x4f
 1381 00cd 02       		.uleb128 0x2
 1382 00ce 01       		.byte	0x1
 1383 00cf 08       		.byte	0x8
 1384 00d0 51030000 		.4byte	.LASF18
 1385 00d4 04       		.uleb128 0x4
 1386 00d5 56020000 		.4byte	.LASF19
 1387 00d9 02       		.byte	0x2
 1388 00da 9002     		.2byte	0x290
 1389 00dc E0000000 		.4byte	0xe0
 1390 00e0 05       		.uleb128 0x5
 1391 00e1 83000000 		.4byte	0x83
 1392 00e5 02       		.uleb128 0x2
 1393 00e6 08       		.byte	0x8
 1394 00e7 04       		.byte	0x4
 1395 00e8 76020000 		.4byte	.LASF20
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccVMELUE.s 			page 41


 1396 00ec 02       		.uleb128 0x2
 1397 00ed 04       		.byte	0x4
 1398 00ee 07       		.byte	0x7
 1399 00ef 64020000 		.4byte	.LASF21
 1400 00f3 06       		.uleb128 0x6
 1401 00f4 E0000000 		.4byte	.LASF25
 1402 00f8 01       		.byte	0x1
 1403 00f9 3F       		.byte	0x3f
 1404 00fa 00000000 		.4byte	.LFB0
 1405 00fe 24000000 		.4byte	.LFE0-.LFB0
 1406 0102 01       		.uleb128 0x1
 1407 0103 9C       		.byte	0x9c
 1408 0104 07       		.uleb128 0x7
 1409 0105 88000000 		.4byte	.LASF36
 1410 0109 01       		.byte	0x1
 1411 010a 5E       		.byte	0x5e
 1412 010b 00000000 		.4byte	.LFB1
 1413 010f D8010000 		.4byte	.LFE1-.LFB1
 1414 0113 01       		.uleb128 0x1
 1415 0114 9C       		.byte	0x9c
 1416 0115 44010000 		.4byte	0x144
 1417 0119 08       		.uleb128 0x8
 1418 011a 46030000 		.4byte	.LASF22
 1419 011e 01       		.byte	0x1
 1420 011f 60       		.byte	0x60
 1421 0120 83000000 		.4byte	0x83
 1422 0124 02       		.uleb128 0x2
 1423 0125 91       		.byte	0x91
 1424 0126 74       		.sleb128 -12
 1425 0127 08       		.uleb128 0x8
 1426 0128 94010000 		.4byte	.LASF23
 1427 012c 01       		.byte	0x1
 1428 012d 61       		.byte	0x61
 1429 012e 83000000 		.4byte	0x83
 1430 0132 02       		.uleb128 0x2
 1431 0133 91       		.byte	0x91
 1432 0134 6C       		.sleb128 -20
 1433 0135 08       		.uleb128 0x8
 1434 0136 0F000000 		.4byte	.LASF24
 1435 013a 01       		.byte	0x1
 1436 013b 62       		.byte	0x62
 1437 013c 9B000000 		.4byte	0x9b
 1438 0140 02       		.uleb128 0x2
 1439 0141 91       		.byte	0x91
 1440 0142 70       		.sleb128 -16
 1441 0143 00       		.byte	0
 1442 0144 09       		.uleb128 0x9
 1443 0145 7A030000 		.4byte	.LASF26
 1444 0149 01       		.byte	0x1
 1445 014a 4A01     		.2byte	0x14a
 1446 014c 00000000 		.4byte	.LFB2
 1447 0150 2C000000 		.4byte	.LFE2-.LFB2
 1448 0154 01       		.uleb128 0x1
 1449 0155 9C       		.byte	0x9c
 1450 0156 0A       		.uleb128 0xa
 1451 0157 3D030000 		.4byte	.LASF27
 1452 015b 01       		.byte	0x1
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccVMELUE.s 			page 42


 1453 015c 6D01     		.2byte	0x16d
 1454 015e 00000000 		.4byte	.LFB3
 1455 0162 1C000000 		.4byte	.LFE3-.LFB3
 1456 0166 01       		.uleb128 0x1
 1457 0167 9C       		.byte	0x9c
 1458 0168 0A       		.uleb128 0xa
 1459 0169 A8000000 		.4byte	.LASF28
 1460 016d 01       		.byte	0x1
 1461 016e 8701     		.2byte	0x187
 1462 0170 00000000 		.4byte	.LFB4
 1463 0174 1C000000 		.4byte	.LFE4-.LFB4
 1464 0178 01       		.uleb128 0x1
 1465 0179 9C       		.byte	0x9c
 1466 017a 0A       		.uleb128 0xa
 1467 017b B1010000 		.4byte	.LASF29
 1468 017f 01       		.byte	0x1
 1469 0180 A001     		.2byte	0x1a0
 1470 0182 00000000 		.4byte	.LFB5
 1471 0186 20000000 		.4byte	.LFE5-.LFB5
 1472 018a 01       		.uleb128 0x1
 1473 018b 9C       		.byte	0x9c
 1474 018c 0B       		.uleb128 0xb
 1475 018d 93020000 		.4byte	.LASF31
 1476 0191 01       		.byte	0x1
 1477 0192 C201     		.2byte	0x1c2
 1478 0194 83000000 		.4byte	0x83
 1479 0198 00000000 		.4byte	.LFB6
 1480 019c 48000000 		.4byte	.LFE6-.LFB6
 1481 01a0 01       		.uleb128 0x1
 1482 01a1 9C       		.byte	0x9c
 1483 01a2 C5010000 		.4byte	0x1c5
 1484 01a6 0C       		.uleb128 0xc
 1485 01a7 40010000 		.4byte	.LASF33
 1486 01ab 01       		.byte	0x1
 1487 01ac C201     		.2byte	0x1c2
 1488 01ae 83000000 		.4byte	0x83
 1489 01b2 02       		.uleb128 0x2
 1490 01b3 91       		.byte	0x91
 1491 01b4 6C       		.sleb128 -20
 1492 01b5 0D       		.uleb128 0xd
 1493 01b6 D3000000 		.4byte	.LASF30
 1494 01ba 01       		.byte	0x1
 1495 01bb C401     		.2byte	0x1c4
 1496 01bd 83000000 		.4byte	0x83
 1497 01c1 02       		.uleb128 0x2
 1498 01c2 91       		.byte	0x91
 1499 01c3 74       		.sleb128 -12
 1500 01c4 00       		.byte	0
 1501 01c5 0E       		.uleb128 0xe
 1502 01c6 A0030000 		.4byte	.LASF32
 1503 01ca 01       		.byte	0x1
 1504 01cb F801     		.2byte	0x1f8
 1505 01cd 8F000000 		.4byte	0x8f
 1506 01d1 00000000 		.4byte	.LFB7
 1507 01d5 44000000 		.4byte	.LFE7-.LFB7
 1508 01d9 01       		.uleb128 0x1
 1509 01da 9C       		.byte	0x9c
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccVMELUE.s 			page 43


 1510 01db FE010000 		.4byte	0x1fe
 1511 01df 0C       		.uleb128 0xc
 1512 01e0 4C030000 		.4byte	.LASF34
 1513 01e4 01       		.byte	0x1
 1514 01e5 F801     		.2byte	0x1f8
 1515 01e7 83000000 		.4byte	0x83
 1516 01eb 02       		.uleb128 0x2
 1517 01ec 91       		.byte	0x91
 1518 01ed 6C       		.sleb128 -20
 1519 01ee 0D       		.uleb128 0xd
 1520 01ef 99030000 		.4byte	.LASF35
 1521 01f3 01       		.byte	0x1
 1522 01f4 FA01     		.2byte	0x1fa
 1523 01f6 83000000 		.4byte	0x83
 1524 01fa 02       		.uleb128 0x2
 1525 01fb 91       		.byte	0x91
 1526 01fc 74       		.sleb128 -12
 1527 01fd 00       		.byte	0
 1528 01fe 0F       		.uleb128 0xf
 1529 01ff AD020000 		.4byte	.LASF37
 1530 0203 01       		.byte	0x1
 1531 0204 2502     		.2byte	0x225
 1532 0206 00000000 		.4byte	.LFB8
 1533 020a 20000000 		.4byte	.LFE8-.LFB8
 1534 020e 01       		.uleb128 0x1
 1535 020f 9C       		.byte	0x9c
 1536 0210 24020000 		.4byte	0x224
 1537 0214 0C       		.uleb128 0xc
 1538 0215 2F010000 		.4byte	.LASF38
 1539 0219 01       		.byte	0x1
 1540 021a 2502     		.2byte	0x225
 1541 021c 83000000 		.4byte	0x83
 1542 0220 02       		.uleb128 0x2
 1543 0221 91       		.byte	0x91
 1544 0222 74       		.sleb128 -12
 1545 0223 00       		.byte	0
 1546 0224 0F       		.uleb128 0xf
 1547 0225 0A030000 		.4byte	.LASF39
 1548 0229 01       		.byte	0x1
 1549 022a 5102     		.2byte	0x251
 1550 022c 00000000 		.4byte	.LFB9
 1551 0230 30000000 		.4byte	.LFE9-.LFB9
 1552 0234 01       		.uleb128 0x1
 1553 0235 9C       		.byte	0x9c
 1554 0236 4A020000 		.4byte	0x24a
 1555 023a 0C       		.uleb128 0xc
 1556 023b 6D020000 		.4byte	.LASF40
 1557 023f 01       		.byte	0x1
 1558 0240 5102     		.2byte	0x251
 1559 0242 83000000 		.4byte	0x83
 1560 0246 02       		.uleb128 0x2
 1561 0247 91       		.byte	0x91
 1562 0248 74       		.sleb128 -12
 1563 0249 00       		.byte	0
 1564 024a 0F       		.uleb128 0xf
 1565 024b 82020000 		.4byte	.LASF41
 1566 024f 01       		.byte	0x1
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccVMELUE.s 			page 44


 1567 0250 6602     		.2byte	0x266
 1568 0252 00000000 		.4byte	.LFB10
 1569 0256 30000000 		.4byte	.LFE10-.LFB10
 1570 025a 01       		.uleb128 0x1
 1571 025b 9C       		.byte	0x9c
 1572 025c 70020000 		.4byte	0x270
 1573 0260 0C       		.uleb128 0xc
 1574 0261 EC020000 		.4byte	.LASF42
 1575 0265 01       		.byte	0x1
 1576 0266 6602     		.2byte	0x266
 1577 0268 83000000 		.4byte	0x83
 1578 026c 02       		.uleb128 0x2
 1579 026d 91       		.byte	0x91
 1580 026e 74       		.sleb128 -12
 1581 026f 00       		.byte	0
 1582 0270 0F       		.uleb128 0xf
 1583 0271 48010000 		.4byte	.LASF43
 1584 0275 01       		.byte	0x1
 1585 0276 7E02     		.2byte	0x27e
 1586 0278 00000000 		.4byte	.LFB11
 1587 027c 20000000 		.4byte	.LFE11-.LFB11
 1588 0280 01       		.uleb128 0x1
 1589 0281 9C       		.byte	0x9c
 1590 0282 96020000 		.4byte	0x296
 1591 0286 0C       		.uleb128 0xc
 1592 0287 2F010000 		.4byte	.LASF38
 1593 028b 01       		.byte	0x1
 1594 028c 7E02     		.2byte	0x27e
 1595 028e 83000000 		.4byte	0x83
 1596 0292 02       		.uleb128 0x2
 1597 0293 91       		.byte	0x91
 1598 0294 74       		.sleb128 -12
 1599 0295 00       		.byte	0
 1600 0296 0F       		.uleb128 0xf
 1601 0297 7F010000 		.4byte	.LASF44
 1602 029b 01       		.byte	0x1
 1603 029c 9502     		.2byte	0x295
 1604 029e 00000000 		.4byte	.LFB12
 1605 02a2 20000000 		.4byte	.LFE12-.LFB12
 1606 02a6 01       		.uleb128 0x1
 1607 02a7 9C       		.byte	0x9c
 1608 02a8 BC020000 		.4byte	0x2bc
 1609 02ac 0C       		.uleb128 0xc
 1610 02ad 2F010000 		.4byte	.LASF38
 1611 02b1 01       		.byte	0x1
 1612 02b2 9502     		.2byte	0x295
 1613 02b4 83000000 		.4byte	0x83
 1614 02b8 02       		.uleb128 0x2
 1615 02b9 91       		.byte	0x91
 1616 02ba 74       		.sleb128 -12
 1617 02bb 00       		.byte	0
 1618 02bc 10       		.uleb128 0x10
 1619 02bd 8B030000 		.4byte	.LASF45
 1620 02c1 01       		.byte	0x1
 1621 02c2 B102     		.2byte	0x2b1
 1622 02c4 00000000 		.4byte	.LFB13
 1623 02c8 34000000 		.4byte	.LFE13-.LFB13
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccVMELUE.s 			page 45


 1624 02cc 01       		.uleb128 0x1
 1625 02cd 9C       		.byte	0x9c
 1626 02ce F1020000 		.4byte	0x2f1
 1627 02d2 0C       		.uleb128 0xc
 1628 02d3 4C030000 		.4byte	.LASF34
 1629 02d7 01       		.byte	0x1
 1630 02d8 B102     		.2byte	0x2b1
 1631 02da 83000000 		.4byte	0x83
 1632 02de 02       		.uleb128 0x2
 1633 02df 91       		.byte	0x91
 1634 02e0 74       		.sleb128 -12
 1635 02e1 0C       		.uleb128 0xc
 1636 02e2 69030000 		.4byte	.LASF46
 1637 02e6 01       		.byte	0x1
 1638 02e7 B102     		.2byte	0x2b1
 1639 02e9 8F000000 		.4byte	0x8f
 1640 02ed 02       		.uleb128 0x2
 1641 02ee 91       		.byte	0x91
 1642 02ef 72       		.sleb128 -14
 1643 02f0 00       		.byte	0
 1644 02f1 10       		.uleb128 0x10
 1645 02f2 DA020000 		.4byte	.LASF47
 1646 02f6 01       		.byte	0x1
 1647 02f7 D302     		.2byte	0x2d3
 1648 02f9 00000000 		.4byte	.LFB14
 1649 02fd 2C000000 		.4byte	.LFE14-.LFB14
 1650 0301 01       		.uleb128 0x1
 1651 0302 9C       		.byte	0x9c
 1652 0303 26030000 		.4byte	0x326
 1653 0307 0C       		.uleb128 0xc
 1654 0308 4C030000 		.4byte	.LASF34
 1655 030c 01       		.byte	0x1
 1656 030d D302     		.2byte	0x2d3
 1657 030f 83000000 		.4byte	0x83
 1658 0313 02       		.uleb128 0x2
 1659 0314 91       		.byte	0x91
 1660 0315 74       		.sleb128 -12
 1661 0316 0C       		.uleb128 0xc
 1662 0317 07000000 		.4byte	.LASF48
 1663 031b 01       		.byte	0x1
 1664 031c D302     		.2byte	0x2d3
 1665 031e 9B000000 		.4byte	0x9b
 1666 0322 02       		.uleb128 0x2
 1667 0323 91       		.byte	0x91
 1668 0324 70       		.sleb128 -16
 1669 0325 00       		.byte	0
 1670 0326 0E       		.uleb128 0xe
 1671 0327 F6020000 		.4byte	.LASF49
 1672 032b 01       		.byte	0x1
 1673 032c F402     		.2byte	0x2f4
 1674 032e 8F000000 		.4byte	0x8f
 1675 0332 00000000 		.4byte	.LFB15
 1676 0336 A0000000 		.4byte	.LFE15-.LFB15
 1677 033a 01       		.uleb128 0x1
 1678 033b 9C       		.byte	0x9c
 1679 033c 6E030000 		.4byte	0x36e
 1680 0340 0C       		.uleb128 0xc
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccVMELUE.s 			page 46


 1681 0341 4C030000 		.4byte	.LASF34
 1682 0345 01       		.byte	0x1
 1683 0346 F402     		.2byte	0x2f4
 1684 0348 83000000 		.4byte	0x83
 1685 034c 02       		.uleb128 0x2
 1686 034d 91       		.byte	0x91
 1687 034e 6C       		.sleb128 -20
 1688 034f 0C       		.uleb128 0xc
 1689 0350 70030000 		.4byte	.LASF50
 1690 0354 01       		.byte	0x1
 1691 0355 F402     		.2byte	0x2f4
 1692 0357 8F000000 		.4byte	0x8f
 1693 035b 02       		.uleb128 0x2
 1694 035c 91       		.byte	0x91
 1695 035d 6A       		.sleb128 -22
 1696 035e 0D       		.uleb128 0xd
 1697 035f 4F020000 		.4byte	.LASF51
 1698 0363 01       		.byte	0x1
 1699 0364 F602     		.2byte	0x2f6
 1700 0366 8F000000 		.4byte	0x8f
 1701 036a 02       		.uleb128 0x2
 1702 036b 91       		.byte	0x91
 1703 036c 76       		.sleb128 -10
 1704 036d 00       		.byte	0
 1705 036e 0E       		.uleb128 0xe
 1706 036f F3000000 		.4byte	.LASF52
 1707 0373 01       		.byte	0x1
 1708 0374 2A03     		.2byte	0x32a
 1709 0376 9B000000 		.4byte	0x9b
 1710 037a 00000000 		.4byte	.LFB16
 1711 037e 90000000 		.4byte	.LFE16-.LFB16
 1712 0382 01       		.uleb128 0x1
 1713 0383 9C       		.byte	0x9c
 1714 0384 B6030000 		.4byte	0x3b6
 1715 0388 0C       		.uleb128 0xc
 1716 0389 4C030000 		.4byte	.LASF34
 1717 038d 01       		.byte	0x1
 1718 038e 2A03     		.2byte	0x32a
 1719 0390 83000000 		.4byte	0x83
 1720 0394 02       		.uleb128 0x2
 1721 0395 91       		.byte	0x91
 1722 0396 64       		.sleb128 -28
 1723 0397 0C       		.uleb128 0xc
 1724 0398 70030000 		.4byte	.LASF50
 1725 039c 01       		.byte	0x1
 1726 039d 2A03     		.2byte	0x32a
 1727 039f 8F000000 		.4byte	0x8f
 1728 03a3 02       		.uleb128 0x2
 1729 03a4 91       		.byte	0x91
 1730 03a5 62       		.sleb128 -30
 1731 03a6 0D       		.uleb128 0xd
 1732 03a7 66010000 		.4byte	.LASF53
 1733 03ab 01       		.byte	0x1
 1734 03ac 2C03     		.2byte	0x32c
 1735 03ae C1000000 		.4byte	0xc1
 1736 03b2 02       		.uleb128 0x2
 1737 03b3 91       		.byte	0x91
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccVMELUE.s 			page 47


 1738 03b4 68       		.sleb128 -24
 1739 03b5 00       		.byte	0
 1740 03b6 0E       		.uleb128 0xe
 1741 03b7 16000000 		.4byte	.LASF54
 1742 03bb 01       		.byte	0x1
 1743 03bc 5703     		.2byte	0x357
 1744 03be A7000000 		.4byte	0xa7
 1745 03c2 00000000 		.4byte	.LFB17
 1746 03c6 80000000 		.4byte	.LFE17-.LFB17
 1747 03ca 01       		.uleb128 0x1
 1748 03cb 9C       		.byte	0x9c
 1749 03cc FE030000 		.4byte	0x3fe
 1750 03d0 0C       		.uleb128 0xc
 1751 03d1 4C030000 		.4byte	.LASF34
 1752 03d5 01       		.byte	0x1
 1753 03d6 5703     		.2byte	0x357
 1754 03d8 83000000 		.4byte	0x83
 1755 03dc 02       		.uleb128 0x2
 1756 03dd 91       		.byte	0x91
 1757 03de 64       		.sleb128 -28
 1758 03df 0C       		.uleb128 0xc
 1759 03e0 70030000 		.4byte	.LASF50
 1760 03e4 01       		.byte	0x1
 1761 03e5 5703     		.2byte	0x357
 1762 03e7 8F000000 		.4byte	0x8f
 1763 03eb 02       		.uleb128 0x2
 1764 03ec 91       		.byte	0x91
 1765 03ed 62       		.sleb128 -30
 1766 03ee 0D       		.uleb128 0xd
 1767 03ef 8E010000 		.4byte	.LASF55
 1768 03f3 01       		.byte	0x1
 1769 03f4 5903     		.2byte	0x359
 1770 03f6 A7000000 		.4byte	0xa7
 1771 03fa 02       		.uleb128 0x2
 1772 03fb 91       		.byte	0x91
 1773 03fc 6C       		.sleb128 -20
 1774 03fd 00       		.byte	0
 1775 03fe 11       		.uleb128 0x11
 1776 03ff 0E040000 		.4byte	0x40e
 1777 0403 0E040000 		.4byte	0x40e
 1778 0407 12       		.uleb128 0x12
 1779 0408 EC000000 		.4byte	0xec
 1780 040c 00       		.byte	0
 1781 040d 00       		.byte	0
 1782 040e 13       		.uleb128 0x13
 1783 040f 83000000 		.4byte	0x83
 1784 0413 08       		.uleb128 0x8
 1785 0414 56030000 		.4byte	.LASF56
 1786 0418 01       		.byte	0x1
 1787 0419 21       		.byte	0x21
 1788 041a 24040000 		.4byte	0x424
 1789 041e 05       		.uleb128 0x5
 1790 041f 03       		.byte	0x3
 1791 0420 00000000 		.4byte	ADC_channelsConfig
 1792 0424 13       		.uleb128 0x13
 1793 0425 FE030000 		.4byte	0x3fe
 1794 0429 14       		.uleb128 0x14
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccVMELUE.s 			page 48


 1795 042a 34010000 		.4byte	.LASF57
 1796 042e 01       		.byte	0x1
 1797 042f 18       		.byte	0x18
 1798 0430 6B000000 		.4byte	0x6b
 1799 0434 05       		.uleb128 0x5
 1800 0435 03       		.byte	0x3
 1801 0436 00000000 		.4byte	ADC_initVar
 1802 043a 11       		.uleb128 0x11
 1803 043b 4A040000 		.4byte	0x44a
 1804 043f 4A040000 		.4byte	0x44a
 1805 0443 12       		.uleb128 0x12
 1806 0444 EC000000 		.4byte	0xec
 1807 0448 00       		.byte	0
 1808 0449 00       		.byte	0
 1809 044a 05       		.uleb128 0x5
 1810 044b 8F000000 		.4byte	0x8f
 1811 044f 14       		.uleb128 0x14
 1812 0450 28030000 		.4byte	.LASF58
 1813 0454 01       		.byte	0x1
 1814 0455 19       		.byte	0x19
 1815 0456 60040000 		.4byte	0x460
 1816 045a 05       		.uleb128 0x5
 1817 045b 03       		.byte	0x3
 1818 045c 00000000 		.4byte	ADC_offset
 1819 0460 05       		.uleb128 0x5
 1820 0461 3A040000 		.4byte	0x43a
 1821 0465 11       		.uleb128 0x11
 1822 0466 75040000 		.4byte	0x475
 1823 046a 75040000 		.4byte	0x475
 1824 046e 12       		.uleb128 0x12
 1825 046f EC000000 		.4byte	0xec
 1826 0473 00       		.byte	0
 1827 0474 00       		.byte	0
 1828 0475 05       		.uleb128 0x5
 1829 0476 9B000000 		.4byte	0x9b
 1830 047a 14       		.uleb128 0x14
 1831 047b 07010000 		.4byte	.LASF59
 1832 047f 01       		.byte	0x1
 1833 0480 1A       		.byte	0x1a
 1834 0481 8B040000 		.4byte	0x48b
 1835 0485 05       		.uleb128 0x5
 1836 0486 03       		.byte	0x3
 1837 0487 00000000 		.4byte	ADC_countsPer10Volt
 1838 048b 05       		.uleb128 0x5
 1839 048c 65040000 		.4byte	0x465
 1840 0490 00       		.byte	0
 1841              		.section	.debug_abbrev,"",%progbits
 1842              	.Ldebug_abbrev0:
 1843 0000 01       		.uleb128 0x1
 1844 0001 11       		.uleb128 0x11
 1845 0002 01       		.byte	0x1
 1846 0003 25       		.uleb128 0x25
 1847 0004 0E       		.uleb128 0xe
 1848 0005 13       		.uleb128 0x13
 1849 0006 0B       		.uleb128 0xb
 1850 0007 03       		.uleb128 0x3
 1851 0008 0E       		.uleb128 0xe
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccVMELUE.s 			page 49


 1852 0009 1B       		.uleb128 0x1b
 1853 000a 0E       		.uleb128 0xe
 1854 000b 55       		.uleb128 0x55
 1855 000c 17       		.uleb128 0x17
 1856 000d 11       		.uleb128 0x11
 1857 000e 01       		.uleb128 0x1
 1858 000f 10       		.uleb128 0x10
 1859 0010 17       		.uleb128 0x17
 1860 0011 00       		.byte	0
 1861 0012 00       		.byte	0
 1862 0013 02       		.uleb128 0x2
 1863 0014 24       		.uleb128 0x24
 1864 0015 00       		.byte	0
 1865 0016 0B       		.uleb128 0xb
 1866 0017 0B       		.uleb128 0xb
 1867 0018 3E       		.uleb128 0x3e
 1868 0019 0B       		.uleb128 0xb
 1869 001a 03       		.uleb128 0x3
 1870 001b 0E       		.uleb128 0xe
 1871 001c 00       		.byte	0
 1872 001d 00       		.byte	0
 1873 001e 03       		.uleb128 0x3
 1874 001f 24       		.uleb128 0x24
 1875 0020 00       		.byte	0
 1876 0021 0B       		.uleb128 0xb
 1877 0022 0B       		.uleb128 0xb
 1878 0023 3E       		.uleb128 0x3e
 1879 0024 0B       		.uleb128 0xb
 1880 0025 03       		.uleb128 0x3
 1881 0026 08       		.uleb128 0x8
 1882 0027 00       		.byte	0
 1883 0028 00       		.byte	0
 1884 0029 04       		.uleb128 0x4
 1885 002a 16       		.uleb128 0x16
 1886 002b 00       		.byte	0
 1887 002c 03       		.uleb128 0x3
 1888 002d 0E       		.uleb128 0xe
 1889 002e 3A       		.uleb128 0x3a
 1890 002f 0B       		.uleb128 0xb
 1891 0030 3B       		.uleb128 0x3b
 1892 0031 05       		.uleb128 0x5
 1893 0032 49       		.uleb128 0x49
 1894 0033 13       		.uleb128 0x13
 1895 0034 00       		.byte	0
 1896 0035 00       		.byte	0
 1897 0036 05       		.uleb128 0x5
 1898 0037 35       		.uleb128 0x35
 1899 0038 00       		.byte	0
 1900 0039 49       		.uleb128 0x49
 1901 003a 13       		.uleb128 0x13
 1902 003b 00       		.byte	0
 1903 003c 00       		.byte	0
 1904 003d 06       		.uleb128 0x6
 1905 003e 2E       		.uleb128 0x2e
 1906 003f 00       		.byte	0
 1907 0040 3F       		.uleb128 0x3f
 1908 0041 19       		.uleb128 0x19
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccVMELUE.s 			page 50


 1909 0042 03       		.uleb128 0x3
 1910 0043 0E       		.uleb128 0xe
 1911 0044 3A       		.uleb128 0x3a
 1912 0045 0B       		.uleb128 0xb
 1913 0046 3B       		.uleb128 0x3b
 1914 0047 0B       		.uleb128 0xb
 1915 0048 27       		.uleb128 0x27
 1916 0049 19       		.uleb128 0x19
 1917 004a 11       		.uleb128 0x11
 1918 004b 01       		.uleb128 0x1
 1919 004c 12       		.uleb128 0x12
 1920 004d 06       		.uleb128 0x6
 1921 004e 40       		.uleb128 0x40
 1922 004f 18       		.uleb128 0x18
 1923 0050 9642     		.uleb128 0x2116
 1924 0052 19       		.uleb128 0x19
 1925 0053 00       		.byte	0
 1926 0054 00       		.byte	0
 1927 0055 07       		.uleb128 0x7
 1928 0056 2E       		.uleb128 0x2e
 1929 0057 01       		.byte	0x1
 1930 0058 3F       		.uleb128 0x3f
 1931 0059 19       		.uleb128 0x19
 1932 005a 03       		.uleb128 0x3
 1933 005b 0E       		.uleb128 0xe
 1934 005c 3A       		.uleb128 0x3a
 1935 005d 0B       		.uleb128 0xb
 1936 005e 3B       		.uleb128 0x3b
 1937 005f 0B       		.uleb128 0xb
 1938 0060 27       		.uleb128 0x27
 1939 0061 19       		.uleb128 0x19
 1940 0062 11       		.uleb128 0x11
 1941 0063 01       		.uleb128 0x1
 1942 0064 12       		.uleb128 0x12
 1943 0065 06       		.uleb128 0x6
 1944 0066 40       		.uleb128 0x40
 1945 0067 18       		.uleb128 0x18
 1946 0068 9642     		.uleb128 0x2116
 1947 006a 19       		.uleb128 0x19
 1948 006b 01       		.uleb128 0x1
 1949 006c 13       		.uleb128 0x13
 1950 006d 00       		.byte	0
 1951 006e 00       		.byte	0
 1952 006f 08       		.uleb128 0x8
 1953 0070 34       		.uleb128 0x34
 1954 0071 00       		.byte	0
 1955 0072 03       		.uleb128 0x3
 1956 0073 0E       		.uleb128 0xe
 1957 0074 3A       		.uleb128 0x3a
 1958 0075 0B       		.uleb128 0xb
 1959 0076 3B       		.uleb128 0x3b
 1960 0077 0B       		.uleb128 0xb
 1961 0078 49       		.uleb128 0x49
 1962 0079 13       		.uleb128 0x13
 1963 007a 02       		.uleb128 0x2
 1964 007b 18       		.uleb128 0x18
 1965 007c 00       		.byte	0
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccVMELUE.s 			page 51


 1966 007d 00       		.byte	0
 1967 007e 09       		.uleb128 0x9
 1968 007f 2E       		.uleb128 0x2e
 1969 0080 00       		.byte	0
 1970 0081 3F       		.uleb128 0x3f
 1971 0082 19       		.uleb128 0x19
 1972 0083 03       		.uleb128 0x3
 1973 0084 0E       		.uleb128 0xe
 1974 0085 3A       		.uleb128 0x3a
 1975 0086 0B       		.uleb128 0xb
 1976 0087 3B       		.uleb128 0x3b
 1977 0088 05       		.uleb128 0x5
 1978 0089 27       		.uleb128 0x27
 1979 008a 19       		.uleb128 0x19
 1980 008b 11       		.uleb128 0x11
 1981 008c 01       		.uleb128 0x1
 1982 008d 12       		.uleb128 0x12
 1983 008e 06       		.uleb128 0x6
 1984 008f 40       		.uleb128 0x40
 1985 0090 18       		.uleb128 0x18
 1986 0091 9642     		.uleb128 0x2116
 1987 0093 19       		.uleb128 0x19
 1988 0094 00       		.byte	0
 1989 0095 00       		.byte	0
 1990 0096 0A       		.uleb128 0xa
 1991 0097 2E       		.uleb128 0x2e
 1992 0098 00       		.byte	0
 1993 0099 3F       		.uleb128 0x3f
 1994 009a 19       		.uleb128 0x19
 1995 009b 03       		.uleb128 0x3
 1996 009c 0E       		.uleb128 0xe
 1997 009d 3A       		.uleb128 0x3a
 1998 009e 0B       		.uleb128 0xb
 1999 009f 3B       		.uleb128 0x3b
 2000 00a0 05       		.uleb128 0x5
 2001 00a1 27       		.uleb128 0x27
 2002 00a2 19       		.uleb128 0x19
 2003 00a3 11       		.uleb128 0x11
 2004 00a4 01       		.uleb128 0x1
 2005 00a5 12       		.uleb128 0x12
 2006 00a6 06       		.uleb128 0x6
 2007 00a7 40       		.uleb128 0x40
 2008 00a8 18       		.uleb128 0x18
 2009 00a9 9742     		.uleb128 0x2117
 2010 00ab 19       		.uleb128 0x19
 2011 00ac 00       		.byte	0
 2012 00ad 00       		.byte	0
 2013 00ae 0B       		.uleb128 0xb
 2014 00af 2E       		.uleb128 0x2e
 2015 00b0 01       		.byte	0x1
 2016 00b1 3F       		.uleb128 0x3f
 2017 00b2 19       		.uleb128 0x19
 2018 00b3 03       		.uleb128 0x3
 2019 00b4 0E       		.uleb128 0xe
 2020 00b5 3A       		.uleb128 0x3a
 2021 00b6 0B       		.uleb128 0xb
 2022 00b7 3B       		.uleb128 0x3b
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccVMELUE.s 			page 52


 2023 00b8 05       		.uleb128 0x5
 2024 00b9 27       		.uleb128 0x27
 2025 00ba 19       		.uleb128 0x19
 2026 00bb 49       		.uleb128 0x49
 2027 00bc 13       		.uleb128 0x13
 2028 00bd 11       		.uleb128 0x11
 2029 00be 01       		.uleb128 0x1
 2030 00bf 12       		.uleb128 0x12
 2031 00c0 06       		.uleb128 0x6
 2032 00c1 40       		.uleb128 0x40
 2033 00c2 18       		.uleb128 0x18
 2034 00c3 9742     		.uleb128 0x2117
 2035 00c5 19       		.uleb128 0x19
 2036 00c6 01       		.uleb128 0x1
 2037 00c7 13       		.uleb128 0x13
 2038 00c8 00       		.byte	0
 2039 00c9 00       		.byte	0
 2040 00ca 0C       		.uleb128 0xc
 2041 00cb 05       		.uleb128 0x5
 2042 00cc 00       		.byte	0
 2043 00cd 03       		.uleb128 0x3
 2044 00ce 0E       		.uleb128 0xe
 2045 00cf 3A       		.uleb128 0x3a
 2046 00d0 0B       		.uleb128 0xb
 2047 00d1 3B       		.uleb128 0x3b
 2048 00d2 05       		.uleb128 0x5
 2049 00d3 49       		.uleb128 0x49
 2050 00d4 13       		.uleb128 0x13
 2051 00d5 02       		.uleb128 0x2
 2052 00d6 18       		.uleb128 0x18
 2053 00d7 00       		.byte	0
 2054 00d8 00       		.byte	0
 2055 00d9 0D       		.uleb128 0xd
 2056 00da 34       		.uleb128 0x34
 2057 00db 00       		.byte	0
 2058 00dc 03       		.uleb128 0x3
 2059 00dd 0E       		.uleb128 0xe
 2060 00de 3A       		.uleb128 0x3a
 2061 00df 0B       		.uleb128 0xb
 2062 00e0 3B       		.uleb128 0x3b
 2063 00e1 05       		.uleb128 0x5
 2064 00e2 49       		.uleb128 0x49
 2065 00e3 13       		.uleb128 0x13
 2066 00e4 02       		.uleb128 0x2
 2067 00e5 18       		.uleb128 0x18
 2068 00e6 00       		.byte	0
 2069 00e7 00       		.byte	0
 2070 00e8 0E       		.uleb128 0xe
 2071 00e9 2E       		.uleb128 0x2e
 2072 00ea 01       		.byte	0x1
 2073 00eb 3F       		.uleb128 0x3f
 2074 00ec 19       		.uleb128 0x19
 2075 00ed 03       		.uleb128 0x3
 2076 00ee 0E       		.uleb128 0xe
 2077 00ef 3A       		.uleb128 0x3a
 2078 00f0 0B       		.uleb128 0xb
 2079 00f1 3B       		.uleb128 0x3b
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccVMELUE.s 			page 53


 2080 00f2 05       		.uleb128 0x5
 2081 00f3 27       		.uleb128 0x27
 2082 00f4 19       		.uleb128 0x19
 2083 00f5 49       		.uleb128 0x49
 2084 00f6 13       		.uleb128 0x13
 2085 00f7 11       		.uleb128 0x11
 2086 00f8 01       		.uleb128 0x1
 2087 00f9 12       		.uleb128 0x12
 2088 00fa 06       		.uleb128 0x6
 2089 00fb 40       		.uleb128 0x40
 2090 00fc 18       		.uleb128 0x18
 2091 00fd 9642     		.uleb128 0x2116
 2092 00ff 19       		.uleb128 0x19
 2093 0100 01       		.uleb128 0x1
 2094 0101 13       		.uleb128 0x13
 2095 0102 00       		.byte	0
 2096 0103 00       		.byte	0
 2097 0104 0F       		.uleb128 0xf
 2098 0105 2E       		.uleb128 0x2e
 2099 0106 01       		.byte	0x1
 2100 0107 3F       		.uleb128 0x3f
 2101 0108 19       		.uleb128 0x19
 2102 0109 03       		.uleb128 0x3
 2103 010a 0E       		.uleb128 0xe
 2104 010b 3A       		.uleb128 0x3a
 2105 010c 0B       		.uleb128 0xb
 2106 010d 3B       		.uleb128 0x3b
 2107 010e 05       		.uleb128 0x5
 2108 010f 27       		.uleb128 0x27
 2109 0110 19       		.uleb128 0x19
 2110 0111 11       		.uleb128 0x11
 2111 0112 01       		.uleb128 0x1
 2112 0113 12       		.uleb128 0x12
 2113 0114 06       		.uleb128 0x6
 2114 0115 40       		.uleb128 0x40
 2115 0116 18       		.uleb128 0x18
 2116 0117 9742     		.uleb128 0x2117
 2117 0119 19       		.uleb128 0x19
 2118 011a 01       		.uleb128 0x1
 2119 011b 13       		.uleb128 0x13
 2120 011c 00       		.byte	0
 2121 011d 00       		.byte	0
 2122 011e 10       		.uleb128 0x10
 2123 011f 2E       		.uleb128 0x2e
 2124 0120 01       		.byte	0x1
 2125 0121 3F       		.uleb128 0x3f
 2126 0122 19       		.uleb128 0x19
 2127 0123 03       		.uleb128 0x3
 2128 0124 0E       		.uleb128 0xe
 2129 0125 3A       		.uleb128 0x3a
 2130 0126 0B       		.uleb128 0xb
 2131 0127 3B       		.uleb128 0x3b
 2132 0128 05       		.uleb128 0x5
 2133 0129 27       		.uleb128 0x27
 2134 012a 19       		.uleb128 0x19
 2135 012b 11       		.uleb128 0x11
 2136 012c 01       		.uleb128 0x1
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccVMELUE.s 			page 54


 2137 012d 12       		.uleb128 0x12
 2138 012e 06       		.uleb128 0x6
 2139 012f 40       		.uleb128 0x40
 2140 0130 18       		.uleb128 0x18
 2141 0131 9642     		.uleb128 0x2116
 2142 0133 19       		.uleb128 0x19
 2143 0134 01       		.uleb128 0x1
 2144 0135 13       		.uleb128 0x13
 2145 0136 00       		.byte	0
 2146 0137 00       		.byte	0
 2147 0138 11       		.uleb128 0x11
 2148 0139 01       		.uleb128 0x1
 2149 013a 01       		.byte	0x1
 2150 013b 49       		.uleb128 0x49
 2151 013c 13       		.uleb128 0x13
 2152 013d 01       		.uleb128 0x1
 2153 013e 13       		.uleb128 0x13
 2154 013f 00       		.byte	0
 2155 0140 00       		.byte	0
 2156 0141 12       		.uleb128 0x12
 2157 0142 21       		.uleb128 0x21
 2158 0143 00       		.byte	0
 2159 0144 49       		.uleb128 0x49
 2160 0145 13       		.uleb128 0x13
 2161 0146 2F       		.uleb128 0x2f
 2162 0147 0B       		.uleb128 0xb
 2163 0148 00       		.byte	0
 2164 0149 00       		.byte	0
 2165 014a 13       		.uleb128 0x13
 2166 014b 26       		.uleb128 0x26
 2167 014c 00       		.byte	0
 2168 014d 49       		.uleb128 0x49
 2169 014e 13       		.uleb128 0x13
 2170 014f 00       		.byte	0
 2171 0150 00       		.byte	0
 2172 0151 14       		.uleb128 0x14
 2173 0152 34       		.uleb128 0x34
 2174 0153 00       		.byte	0
 2175 0154 03       		.uleb128 0x3
 2176 0155 0E       		.uleb128 0xe
 2177 0156 3A       		.uleb128 0x3a
 2178 0157 0B       		.uleb128 0xb
 2179 0158 3B       		.uleb128 0x3b
 2180 0159 0B       		.uleb128 0xb
 2181 015a 49       		.uleb128 0x49
 2182 015b 13       		.uleb128 0x13
 2183 015c 3F       		.uleb128 0x3f
 2184 015d 19       		.uleb128 0x19
 2185 015e 02       		.uleb128 0x2
 2186 015f 18       		.uleb128 0x18
 2187 0160 00       		.byte	0
 2188 0161 00       		.byte	0
 2189 0162 00       		.byte	0
 2190              		.section	.debug_aranges,"",%progbits
 2191 0000 A4000000 		.4byte	0xa4
 2192 0004 0200     		.2byte	0x2
 2193 0006 00000000 		.4byte	.Ldebug_info0
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccVMELUE.s 			page 55


 2194 000a 04       		.byte	0x4
 2195 000b 00       		.byte	0
 2196 000c 0000     		.2byte	0
 2197 000e 0000     		.2byte	0
 2198 0010 00000000 		.4byte	.LFB0
 2199 0014 24000000 		.4byte	.LFE0-.LFB0
 2200 0018 00000000 		.4byte	.LFB1
 2201 001c D8010000 		.4byte	.LFE1-.LFB1
 2202 0020 00000000 		.4byte	.LFB2
 2203 0024 2C000000 		.4byte	.LFE2-.LFB2
 2204 0028 00000000 		.4byte	.LFB3
 2205 002c 1C000000 		.4byte	.LFE3-.LFB3
 2206 0030 00000000 		.4byte	.LFB4
 2207 0034 1C000000 		.4byte	.LFE4-.LFB4
 2208 0038 00000000 		.4byte	.LFB5
 2209 003c 20000000 		.4byte	.LFE5-.LFB5
 2210 0040 00000000 		.4byte	.LFB6
 2211 0044 48000000 		.4byte	.LFE6-.LFB6
 2212 0048 00000000 		.4byte	.LFB7
 2213 004c 44000000 		.4byte	.LFE7-.LFB7
 2214 0050 00000000 		.4byte	.LFB8
 2215 0054 20000000 		.4byte	.LFE8-.LFB8
 2216 0058 00000000 		.4byte	.LFB9
 2217 005c 30000000 		.4byte	.LFE9-.LFB9
 2218 0060 00000000 		.4byte	.LFB10
 2219 0064 30000000 		.4byte	.LFE10-.LFB10
 2220 0068 00000000 		.4byte	.LFB11
 2221 006c 20000000 		.4byte	.LFE11-.LFB11
 2222 0070 00000000 		.4byte	.LFB12
 2223 0074 20000000 		.4byte	.LFE12-.LFB12
 2224 0078 00000000 		.4byte	.LFB13
 2225 007c 34000000 		.4byte	.LFE13-.LFB13
 2226 0080 00000000 		.4byte	.LFB14
 2227 0084 2C000000 		.4byte	.LFE14-.LFB14
 2228 0088 00000000 		.4byte	.LFB15
 2229 008c A0000000 		.4byte	.LFE15-.LFB15
 2230 0090 00000000 		.4byte	.LFB16
 2231 0094 90000000 		.4byte	.LFE16-.LFB16
 2232 0098 00000000 		.4byte	.LFB17
 2233 009c 80000000 		.4byte	.LFE17-.LFB17
 2234 00a0 00000000 		.4byte	0
 2235 00a4 00000000 		.4byte	0
 2236              		.section	.debug_ranges,"",%progbits
 2237              	.Ldebug_ranges0:
 2238 0000 00000000 		.4byte	.LFB0
 2239 0004 24000000 		.4byte	.LFE0
 2240 0008 00000000 		.4byte	.LFB1
 2241 000c D8010000 		.4byte	.LFE1
 2242 0010 00000000 		.4byte	.LFB2
 2243 0014 2C000000 		.4byte	.LFE2
 2244 0018 00000000 		.4byte	.LFB3
 2245 001c 1C000000 		.4byte	.LFE3
 2246 0020 00000000 		.4byte	.LFB4
 2247 0024 1C000000 		.4byte	.LFE4
 2248 0028 00000000 		.4byte	.LFB5
 2249 002c 20000000 		.4byte	.LFE5
 2250 0030 00000000 		.4byte	.LFB6
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccVMELUE.s 			page 56


 2251 0034 48000000 		.4byte	.LFE6
 2252 0038 00000000 		.4byte	.LFB7
 2253 003c 44000000 		.4byte	.LFE7
 2254 0040 00000000 		.4byte	.LFB8
 2255 0044 20000000 		.4byte	.LFE8
 2256 0048 00000000 		.4byte	.LFB9
 2257 004c 30000000 		.4byte	.LFE9
 2258 0050 00000000 		.4byte	.LFB10
 2259 0054 30000000 		.4byte	.LFE10
 2260 0058 00000000 		.4byte	.LFB11
 2261 005c 20000000 		.4byte	.LFE11
 2262 0060 00000000 		.4byte	.LFB12
 2263 0064 20000000 		.4byte	.LFE12
 2264 0068 00000000 		.4byte	.LFB13
 2265 006c 34000000 		.4byte	.LFE13
 2266 0070 00000000 		.4byte	.LFB14
 2267 0074 2C000000 		.4byte	.LFE14
 2268 0078 00000000 		.4byte	.LFB15
 2269 007c A0000000 		.4byte	.LFE15
 2270 0080 00000000 		.4byte	.LFB16
 2271 0084 90000000 		.4byte	.LFE16
 2272 0088 00000000 		.4byte	.LFB17
 2273 008c 80000000 		.4byte	.LFE17
 2274 0090 00000000 		.4byte	0
 2275 0094 00000000 		.4byte	0
 2276              		.section	.debug_line,"",%progbits
 2277              	.Ldebug_line0:
 2278 0000 90020000 		.section	.debug_str,"MS",%progbits,1
 2278      02004000 
 2278      00000201 
 2278      FB0E0D00 
 2278      01010101 
 2279              	.LASF10:
 2280 0000 75696E74 		.ascii	"uint16\000"
 2280      313600
 2281              	.LASF48:
 2282 0007 61646347 		.ascii	"adcGain\000"
 2282      61696E00 
 2283              	.LASF24:
 2284 000f 636F756E 		.ascii	"counts\000"
 2284      747300
 2285              	.LASF54:
 2286 0016 4144435F 		.ascii	"ADC_CountsTo_Volts\000"
 2286      436F756E 
 2286      7473546F 
 2286      5F566F6C 
 2286      747300
 2287              	.LASF62:
 2288 0029 443A5C55 		.ascii	"D:\\Users\\jagumiel\\Documents\\PSoC Creator\\PSoC-"
 2288      73657273 
 2288      5C6A6167 
 2288      756D6965 
 2288      6C5C446F 
 2289 0057 3130315C 		.ascii	"101\\PSoC-101\\TrainingProjects\\ADC-PWM-UART.cydsn"
 2289      50536F43 
 2289      2D313031 
 2289      5C547261 
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccVMELUE.s 			page 57


 2289      696E696E 
 2290 0087 00       		.ascii	"\000"
 2291              	.LASF36:
 2292 0088 4144435F 		.ascii	"ADC_Init\000"
 2292      496E6974 
 2292      00
 2293              	.LASF7:
 2294 0091 6C6F6E67 		.ascii	"long long unsigned int\000"
 2294      206C6F6E 
 2294      6720756E 
 2294      7369676E 
 2294      65642069 
 2295              	.LASF28:
 2296 00a8 4144435F 		.ascii	"ADC_StartConvert\000"
 2296      53746172 
 2296      74436F6E 
 2296      76657274 
 2296      00
 2297              	.LASF6:
 2298 00b9 6C6F6E67 		.ascii	"long long int\000"
 2298      206C6F6E 
 2298      6720696E 
 2298      7400
 2299              	.LASF0:
 2300 00c7 7369676E 		.ascii	"signed char\000"
 2300      65642063 
 2300      68617200 
 2301              	.LASF30:
 2302 00d3 73746174 		.ascii	"status\000"
 2302      757300
 2303              	.LASF13:
 2304 00da 696E7433 		.ascii	"int32\000"
 2304      3200
 2305              	.LASF25:
 2306 00e0 4144435F 		.ascii	"ADC_Start\000"
 2306      53746172 
 2306      7400
 2307              	.LASF4:
 2308 00ea 6C6F6E67 		.ascii	"long int\000"
 2308      20696E74 
 2308      00
 2309              	.LASF52:
 2310 00f3 4144435F 		.ascii	"ADC_CountsTo_uVolts\000"
 2310      436F756E 
 2310      7473546F 
 2310      5F75566F 
 2310      6C747300 
 2311              	.LASF59:
 2312 0107 4144435F 		.ascii	"ADC_countsPer10Volt\000"
 2312      636F756E 
 2312      74735065 
 2312      72313056 
 2312      6F6C7400 
 2313              	.LASF9:
 2314 011b 75696E74 		.ascii	"uint8\000"
 2314      3800
 2315              	.LASF16:
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccVMELUE.s 			page 58


 2316 0121 646F7562 		.ascii	"double\000"
 2316      6C6500
 2317              	.LASF11:
 2318 0128 75696E74 		.ascii	"uint32\000"
 2318      333200
 2319              	.LASF38:
 2320 012f 6D61736B 		.ascii	"mask\000"
 2320      00
 2321              	.LASF57:
 2322 0134 4144435F 		.ascii	"ADC_initVar\000"
 2322      696E6974 
 2322      56617200 
 2323              	.LASF33:
 2324 0140 7265744D 		.ascii	"retMode\000"
 2324      6F646500 
 2325              	.LASF43:
 2326 0148 4144435F 		.ascii	"ADC_SetLimitMask\000"
 2326      5365744C 
 2326      696D6974 
 2326      4D61736B 
 2326      00
 2327              	.LASF8:
 2328 0159 756E7369 		.ascii	"unsigned int\000"
 2328      676E6564 
 2328      20696E74 
 2328      00
 2329              	.LASF53:
 2330 0166 75566F6C 		.ascii	"uVolts\000"
 2330      747300
 2331              	.LASF5:
 2332 016d 6C6F6E67 		.ascii	"long unsigned int\000"
 2332      20756E73 
 2332      69676E65 
 2332      6420696E 
 2332      7400
 2333              	.LASF44:
 2334 017f 4144435F 		.ascii	"ADC_SetSatMask\000"
 2334      53657453 
 2334      61744D61 
 2334      736B00
 2335              	.LASF55:
 2336 018e 766F6C74 		.ascii	"volts\000"
 2336      7300
 2337              	.LASF23:
 2338 0194 746D7052 		.ascii	"tmpRegVal\000"
 2338      65675661 
 2338      6C00
 2339              	.LASF3:
 2340 019e 73686F72 		.ascii	"short unsigned int\000"
 2340      7420756E 
 2340      7369676E 
 2340      65642069 
 2340      6E7400
 2341              	.LASF29:
 2342 01b1 4144435F 		.ascii	"ADC_StopConvert\000"
 2342      53746F70 
 2342      436F6E76 
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccVMELUE.s 			page 59


 2342      65727400 
 2343              	.LASF60:
 2344 01c1 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2344      43313120 
 2344      352E342E 
 2344      31203230 
 2344      31363036 
 2345 01f4 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 2345      20726576 
 2345      6973696F 
 2345      6E203233 
 2345      37373135 
 2346 0227 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2346      66756E63 
 2346      74696F6E 
 2346      2D736563 
 2346      74696F6E 
 2347              	.LASF51:
 2348 024f 6D566F6C 		.ascii	"mVolts\000"
 2348      747300
 2349              	.LASF19:
 2350 0256 72656733 		.ascii	"reg32\000"
 2350      3200
 2351              	.LASF14:
 2352 025c 666C6F61 		.ascii	"float32\000"
 2352      74333200 
 2353              	.LASF21:
 2354 0264 73697A65 		.ascii	"sizetype\000"
 2354      74797065 
 2354      00
 2355              	.LASF40:
 2356 026d 6C6F774C 		.ascii	"lowLimit\000"
 2356      696D6974 
 2356      00
 2357              	.LASF20:
 2358 0276 6C6F6E67 		.ascii	"long double\000"
 2358      20646F75 
 2358      626C6500 
 2359              	.LASF41:
 2360 0282 4144435F 		.ascii	"ADC_SetHighLimit\000"
 2360      53657448 
 2360      6967684C 
 2360      696D6974 
 2360      00
 2361              	.LASF31:
 2362 0293 4144435F 		.ascii	"ADC_IsEndConversion\000"
 2362      4973456E 
 2362      64436F6E 
 2362      76657273 
 2362      696F6E00 
 2363              	.LASF17:
 2364 02a7 696E7436 		.ascii	"int64\000"
 2364      3400
 2365              	.LASF37:
 2366 02ad 4144435F 		.ascii	"ADC_SetChanMask\000"
 2366      53657443 
 2366      68616E4D 
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccVMELUE.s 			page 60


 2366      61736B00 
 2367              	.LASF61:
 2368 02bd 47656E65 		.ascii	"Generated_Source\\PSoC4\\ADC.c\000"
 2368      72617465 
 2368      645F536F 
 2368      75726365 
 2368      5C50536F 
 2369              	.LASF47:
 2370 02da 4144435F 		.ascii	"ADC_SetGain\000"
 2370      53657447 
 2370      61696E00 
 2371              	.LASF15:
 2372 02e6 666C6F61 		.ascii	"float\000"
 2372      7400
 2373              	.LASF42:
 2374 02ec 68696768 		.ascii	"highLimit\000"
 2374      4C696D69 
 2374      7400
 2375              	.LASF49:
 2376 02f6 4144435F 		.ascii	"ADC_CountsTo_mVolts\000"
 2376      436F756E 
 2376      7473546F 
 2376      5F6D566F 
 2376      6C747300 
 2377              	.LASF39:
 2378 030a 4144435F 		.ascii	"ADC_SetLowLimit\000"
 2378      5365744C 
 2378      6F774C69 
 2378      6D697400 
 2379              	.LASF1:
 2380 031a 756E7369 		.ascii	"unsigned char\000"
 2380      676E6564 
 2380      20636861 
 2380      7200
 2381              	.LASF58:
 2382 0328 4144435F 		.ascii	"ADC_offset\000"
 2382      6F666673 
 2382      657400
 2383              	.LASF2:
 2384 0333 73686F72 		.ascii	"short int\000"
 2384      7420696E 
 2384      7400
 2385              	.LASF27:
 2386 033d 4144435F 		.ascii	"ADC_Stop\000"
 2386      53746F70 
 2386      00
 2387              	.LASF22:
 2388 0346 63684E75 		.ascii	"chNum\000"
 2388      6D00
 2389              	.LASF34:
 2390 034c 6368616E 		.ascii	"chan\000"
 2390      00
 2391              	.LASF18:
 2392 0351 63686172 		.ascii	"char\000"
 2392      00
 2393              	.LASF56:
 2394 0356 4144435F 		.ascii	"ADC_channelsConfig\000"
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccVMELUE.s 			page 61


 2394      6368616E 
 2394      6E656C73 
 2394      436F6E66 
 2394      696700
 2395              	.LASF46:
 2396 0369 6F666673 		.ascii	"offset\000"
 2396      657400
 2397              	.LASF50:
 2398 0370 61646343 		.ascii	"adcCounts\000"
 2398      6F756E74 
 2398      7300
 2399              	.LASF26:
 2400 037a 4144435F 		.ascii	"ADC_Enable\000"
 2400      456E6162 
 2400      6C6500
 2401              	.LASF12:
 2402 0385 696E7431 		.ascii	"int16\000"
 2402      3600
 2403              	.LASF45:
 2404 038b 4144435F 		.ascii	"ADC_SetOffset\000"
 2404      5365744F 
 2404      66667365 
 2404      7400
 2405              	.LASF35:
 2406 0399 72657375 		.ascii	"result\000"
 2406      6C7400
 2407              	.LASF32:
 2408 03a0 4144435F 		.ascii	"ADC_GetResult16\000"
 2408      47657452 
 2408      6573756C 
 2408      74313600 
 2409              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
