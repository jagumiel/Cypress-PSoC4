ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccEfiZI9.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"PWM_0.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	PWM_0_initVar
  20              		.bss
  21              		.type	PWM_0_initVar, %object
  22              		.size	PWM_0_initVar, 1
  23              	PWM_0_initVar:
  24 0000 00       		.space	1
  25              		.section	.text.PWM_0_Start,"ax",%progbits
  26              		.align	2
  27              		.global	PWM_0_Start
  28              		.code	16
  29              		.thumb_func
  30              		.type	PWM_0_Start, %function
  31              	PWM_0_Start:
  32              	.LFB0:
  33              		.file 1 "Generated_Source\\PSoC4\\PWM_0.c"
   1:Generated_Source\PSoC4/PWM_0.c **** /*******************************************************************************
   2:Generated_Source\PSoC4/PWM_0.c **** * File Name: PWM_0.c
   3:Generated_Source\PSoC4/PWM_0.c **** * Version 3.30
   4:Generated_Source\PSoC4/PWM_0.c **** *
   5:Generated_Source\PSoC4/PWM_0.c **** * Description:
   6:Generated_Source\PSoC4/PWM_0.c **** *  The PWM User Module consist of an 8 or 16-bit counter with two 8 or 16-bit
   7:Generated_Source\PSoC4/PWM_0.c **** *  comparitors. Each instance of this user module is capable of generating
   8:Generated_Source\PSoC4/PWM_0.c **** *  two PWM outputs with the same period. The pulse width is selectable between
   9:Generated_Source\PSoC4/PWM_0.c **** *  1 and 255/65535. The period is selectable between 2 and 255/65536 clocks.
  10:Generated_Source\PSoC4/PWM_0.c **** *  The compare value output may be configured to be active when the present
  11:Generated_Source\PSoC4/PWM_0.c **** *  counter is less than or less than/equal to the compare value.
  12:Generated_Source\PSoC4/PWM_0.c **** *  A terminal count output is also provided. It generates a pulse one clock
  13:Generated_Source\PSoC4/PWM_0.c **** *  width wide when the counter is equal to zero.
  14:Generated_Source\PSoC4/PWM_0.c **** *
  15:Generated_Source\PSoC4/PWM_0.c **** * Note:
  16:Generated_Source\PSoC4/PWM_0.c **** *
  17:Generated_Source\PSoC4/PWM_0.c **** *******************************************************************************
  18:Generated_Source\PSoC4/PWM_0.c **** * Copyright 2008-2014, Cypress Semiconductor Corporation.  All rights reserved.
  19:Generated_Source\PSoC4/PWM_0.c **** * You may use this file only in accordance with the license, terms, conditions,
  20:Generated_Source\PSoC4/PWM_0.c **** * disclaimers, and limitations in the end user license agreement accompanying
  21:Generated_Source\PSoC4/PWM_0.c **** * the software package with which this file was provided.
  22:Generated_Source\PSoC4/PWM_0.c **** ********************************************************************************/
  23:Generated_Source\PSoC4/PWM_0.c **** 
  24:Generated_Source\PSoC4/PWM_0.c **** #include "PWM_0.h"
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccEfiZI9.s 			page 2


  25:Generated_Source\PSoC4/PWM_0.c **** 
  26:Generated_Source\PSoC4/PWM_0.c **** /* Error message for removed <resource> through optimization */
  27:Generated_Source\PSoC4/PWM_0.c **** #ifdef PWM_0_PWMUDB_genblk1_ctrlreg__REMOVED
  28:Generated_Source\PSoC4/PWM_0.c ****     #error PWM_v3_30 detected with a constant 0 for the enable or \
  29:Generated_Source\PSoC4/PWM_0.c ****          constant 1 for reset. This will prevent the component from operating.
  30:Generated_Source\PSoC4/PWM_0.c **** #endif /* PWM_0_PWMUDB_genblk1_ctrlreg__REMOVED */
  31:Generated_Source\PSoC4/PWM_0.c **** 
  32:Generated_Source\PSoC4/PWM_0.c **** uint8 PWM_0_initVar = 0u;
  33:Generated_Source\PSoC4/PWM_0.c **** 
  34:Generated_Source\PSoC4/PWM_0.c **** 
  35:Generated_Source\PSoC4/PWM_0.c **** /*******************************************************************************
  36:Generated_Source\PSoC4/PWM_0.c **** * Function Name: PWM_0_Start
  37:Generated_Source\PSoC4/PWM_0.c **** ********************************************************************************
  38:Generated_Source\PSoC4/PWM_0.c **** *
  39:Generated_Source\PSoC4/PWM_0.c **** * Summary:
  40:Generated_Source\PSoC4/PWM_0.c **** *  The start function initializes the pwm with the default values, the
  41:Generated_Source\PSoC4/PWM_0.c **** *  enables the counter to begin counting.  It does not enable interrupts,
  42:Generated_Source\PSoC4/PWM_0.c **** *  the EnableInt command should be called if interrupt generation is required.
  43:Generated_Source\PSoC4/PWM_0.c **** *
  44:Generated_Source\PSoC4/PWM_0.c **** * Parameters:
  45:Generated_Source\PSoC4/PWM_0.c **** *  None
  46:Generated_Source\PSoC4/PWM_0.c **** *
  47:Generated_Source\PSoC4/PWM_0.c **** * Return:
  48:Generated_Source\PSoC4/PWM_0.c **** *  None
  49:Generated_Source\PSoC4/PWM_0.c **** *
  50:Generated_Source\PSoC4/PWM_0.c **** * Global variables:
  51:Generated_Source\PSoC4/PWM_0.c **** *  PWM_0_initVar: Is modified when this function is called for the
  52:Generated_Source\PSoC4/PWM_0.c **** *   first time. Is used to ensure that initialization happens only once.
  53:Generated_Source\PSoC4/PWM_0.c **** *
  54:Generated_Source\PSoC4/PWM_0.c **** *******************************************************************************/
  55:Generated_Source\PSoC4/PWM_0.c **** void PWM_0_Start(void) 
  56:Generated_Source\PSoC4/PWM_0.c **** {
  34              		.loc 1 56 0
  35              		.cfi_startproc
  36              		@ args = 0, pretend = 0, frame = 0
  37              		@ frame_needed = 1, uses_anonymous_args = 0
  38 0000 80B5     		push	{r7, lr}
  39              		.cfi_def_cfa_offset 8
  40              		.cfi_offset 7, -8
  41              		.cfi_offset 14, -4
  42 0002 00AF     		add	r7, sp, #0
  43              		.cfi_def_cfa_register 7
  57:Generated_Source\PSoC4/PWM_0.c ****     /* If not Initialized then initialize all required hardware and software */
  58:Generated_Source\PSoC4/PWM_0.c ****     if(PWM_0_initVar == 0u)
  44              		.loc 1 58 0
  45 0004 064B     		ldr	r3, .L3
  46 0006 1B78     		ldrb	r3, [r3]
  47 0008 002B     		cmp	r3, #0
  48 000a 04D1     		bne	.L2
  59:Generated_Source\PSoC4/PWM_0.c ****     {
  60:Generated_Source\PSoC4/PWM_0.c ****         PWM_0_Init();
  49              		.loc 1 60 0
  50 000c FFF7FEFF 		bl	PWM_0_Init
  61:Generated_Source\PSoC4/PWM_0.c ****         PWM_0_initVar = 1u;
  51              		.loc 1 61 0
  52 0010 034B     		ldr	r3, .L3
  53 0012 0122     		movs	r2, #1
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccEfiZI9.s 			page 3


  54 0014 1A70     		strb	r2, [r3]
  55              	.L2:
  62:Generated_Source\PSoC4/PWM_0.c ****     }
  63:Generated_Source\PSoC4/PWM_0.c ****     PWM_0_Enable();
  56              		.loc 1 63 0
  57 0016 FFF7FEFF 		bl	PWM_0_Enable
  64:Generated_Source\PSoC4/PWM_0.c **** 
  65:Generated_Source\PSoC4/PWM_0.c **** }
  58              		.loc 1 65 0
  59 001a C046     		nop
  60 001c BD46     		mov	sp, r7
  61              		@ sp needed
  62 001e 80BD     		pop	{r7, pc}
  63              	.L4:
  64              		.align	2
  65              	.L3:
  66 0020 00000000 		.word	PWM_0_initVar
  67              		.cfi_endproc
  68              	.LFE0:
  69              		.size	PWM_0_Start, .-PWM_0_Start
  70              		.section	.text.PWM_0_Init,"ax",%progbits
  71              		.align	2
  72              		.global	PWM_0_Init
  73              		.code	16
  74              		.thumb_func
  75              		.type	PWM_0_Init, %function
  76              	PWM_0_Init:
  77              	.LFB1:
  66:Generated_Source\PSoC4/PWM_0.c **** 
  67:Generated_Source\PSoC4/PWM_0.c **** 
  68:Generated_Source\PSoC4/PWM_0.c **** /*******************************************************************************
  69:Generated_Source\PSoC4/PWM_0.c **** * Function Name: PWM_0_Init
  70:Generated_Source\PSoC4/PWM_0.c **** ********************************************************************************
  71:Generated_Source\PSoC4/PWM_0.c **** *
  72:Generated_Source\PSoC4/PWM_0.c **** * Summary:
  73:Generated_Source\PSoC4/PWM_0.c **** *  Initialize component's parameters to the parameters set by user in the
  74:Generated_Source\PSoC4/PWM_0.c **** *  customizer of the component placed onto schematic. Usually called in
  75:Generated_Source\PSoC4/PWM_0.c **** *  PWM_0_Start().
  76:Generated_Source\PSoC4/PWM_0.c **** *
  77:Generated_Source\PSoC4/PWM_0.c **** * Parameters:
  78:Generated_Source\PSoC4/PWM_0.c **** *  None
  79:Generated_Source\PSoC4/PWM_0.c **** *
  80:Generated_Source\PSoC4/PWM_0.c **** * Return:
  81:Generated_Source\PSoC4/PWM_0.c **** *  None
  82:Generated_Source\PSoC4/PWM_0.c **** *
  83:Generated_Source\PSoC4/PWM_0.c **** *******************************************************************************/
  84:Generated_Source\PSoC4/PWM_0.c **** void PWM_0_Init(void) 
  85:Generated_Source\PSoC4/PWM_0.c **** {
  78              		.loc 1 85 0
  79              		.cfi_startproc
  80              		@ args = 0, pretend = 0, frame = 8
  81              		@ frame_needed = 1, uses_anonymous_args = 0
  82 0000 90B5     		push	{r4, r7, lr}
  83              		.cfi_def_cfa_offset 12
  84              		.cfi_offset 4, -12
  85              		.cfi_offset 7, -8
  86              		.cfi_offset 14, -4
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccEfiZI9.s 			page 4


  87 0002 83B0     		sub	sp, sp, #12
  88              		.cfi_def_cfa_offset 24
  89 0004 00AF     		add	r7, sp, #0
  90              		.cfi_def_cfa_register 7
  86:Generated_Source\PSoC4/PWM_0.c ****     #if (PWM_0_UsingFixedFunction || PWM_0_UseControl)
  87:Generated_Source\PSoC4/PWM_0.c ****         uint8 ctrl;
  88:Generated_Source\PSoC4/PWM_0.c ****     #endif /* (PWM_0_UsingFixedFunction || PWM_0_UseControl) */
  89:Generated_Source\PSoC4/PWM_0.c **** 
  90:Generated_Source\PSoC4/PWM_0.c ****     #if(!PWM_0_UsingFixedFunction)
  91:Generated_Source\PSoC4/PWM_0.c ****         #if(PWM_0_UseStatus)
  92:Generated_Source\PSoC4/PWM_0.c ****             /* Interrupt State Backup for Critical Region*/
  93:Generated_Source\PSoC4/PWM_0.c ****             uint8 PWM_0_interruptState;
  94:Generated_Source\PSoC4/PWM_0.c ****         #endif /* (PWM_0_UseStatus) */
  95:Generated_Source\PSoC4/PWM_0.c ****     #endif /* (!PWM_0_UsingFixedFunction) */
  96:Generated_Source\PSoC4/PWM_0.c **** 
  97:Generated_Source\PSoC4/PWM_0.c ****     #if (PWM_0_UsingFixedFunction)
  98:Generated_Source\PSoC4/PWM_0.c ****         /* You are allowed to write the compare value (FF only) */
  99:Generated_Source\PSoC4/PWM_0.c ****         PWM_0_CONTROL |= PWM_0_CFG0_MODE;
 100:Generated_Source\PSoC4/PWM_0.c ****         #if (PWM_0_DeadBand2_4)
 101:Generated_Source\PSoC4/PWM_0.c ****             PWM_0_CONTROL |= PWM_0_CFG0_DB;
 102:Generated_Source\PSoC4/PWM_0.c ****         #endif /* (PWM_0_DeadBand2_4) */
 103:Generated_Source\PSoC4/PWM_0.c **** 
 104:Generated_Source\PSoC4/PWM_0.c ****         ctrl = PWM_0_CONTROL3 & ((uint8 )(~PWM_0_CTRL_CMPMODE1_MASK));
 105:Generated_Source\PSoC4/PWM_0.c ****         PWM_0_CONTROL3 = ctrl | PWM_0_DEFAULT_COMPARE1_MODE;
 106:Generated_Source\PSoC4/PWM_0.c **** 
 107:Generated_Source\PSoC4/PWM_0.c ****          /* Clear and Set SYNCTC and SYNCCMP bits of RT1 register */
 108:Generated_Source\PSoC4/PWM_0.c ****         PWM_0_RT1 &= ((uint8)(~PWM_0_RT1_MASK));
 109:Generated_Source\PSoC4/PWM_0.c ****         PWM_0_RT1 |= PWM_0_SYNC;
 110:Generated_Source\PSoC4/PWM_0.c **** 
 111:Generated_Source\PSoC4/PWM_0.c ****         /*Enable DSI Sync all all inputs of the PWM*/
 112:Generated_Source\PSoC4/PWM_0.c ****         PWM_0_RT1 &= ((uint8)(~PWM_0_SYNCDSI_MASK));
 113:Generated_Source\PSoC4/PWM_0.c ****         PWM_0_RT1 |= PWM_0_SYNCDSI_EN;
 114:Generated_Source\PSoC4/PWM_0.c **** 
 115:Generated_Source\PSoC4/PWM_0.c ****     #elif (PWM_0_UseControl)
 116:Generated_Source\PSoC4/PWM_0.c ****         /* Set the default compare mode defined in the parameter */
 117:Generated_Source\PSoC4/PWM_0.c ****         ctrl = PWM_0_CONTROL & ((uint8)(~PWM_0_CTRL_CMPMODE2_MASK)) &
  91              		.loc 1 117 0
  92 0006 1D4B     		ldr	r3, .L6
  93 0008 1B78     		ldrb	r3, [r3]
  94 000a DAB2     		uxtb	r2, r3
  95 000c FB1D     		adds	r3, r7, #7
  96 000e 3F21     		movs	r1, #63
  97 0010 8A43     		bics	r2, r1
  98 0012 1A70     		strb	r2, [r3]
 118:Generated_Source\PSoC4/PWM_0.c ****                 ((uint8)(~PWM_0_CTRL_CMPMODE1_MASK));
 119:Generated_Source\PSoC4/PWM_0.c ****         PWM_0_CONTROL = ctrl | PWM_0_DEFAULT_COMPARE2_MODE |
  99              		.loc 1 119 0
 100 0014 194A     		ldr	r2, .L6
 101 0016 FB1D     		adds	r3, r7, #7
 102 0018 1B78     		ldrb	r3, [r3]
 103 001a 0C21     		movs	r1, #12
 104 001c 0B43     		orrs	r3, r1
 105 001e DBB2     		uxtb	r3, r3
 106 0020 1370     		strb	r3, [r2]
 120:Generated_Source\PSoC4/PWM_0.c ****                                    PWM_0_DEFAULT_COMPARE1_MODE;
 121:Generated_Source\PSoC4/PWM_0.c ****     #endif /* (PWM_0_UsingFixedFunction) */
 122:Generated_Source\PSoC4/PWM_0.c **** 
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccEfiZI9.s 			page 5


 123:Generated_Source\PSoC4/PWM_0.c ****     #if (!PWM_0_UsingFixedFunction)
 124:Generated_Source\PSoC4/PWM_0.c ****         #if (PWM_0_Resolution == 8)
 125:Generated_Source\PSoC4/PWM_0.c ****             /* Set FIFO 0 to 1 byte register for period*/
 126:Generated_Source\PSoC4/PWM_0.c ****             PWM_0_AUX_CONTROLDP0 |= (PWM_0_AUX_CTRL_FIFO0_CLR);
 107              		.loc 1 126 0
 108 0022 174A     		ldr	r2, .L6+4
 109 0024 164B     		ldr	r3, .L6+4
 110 0026 1B78     		ldrb	r3, [r3]
 111 0028 DBB2     		uxtb	r3, r3
 112 002a 0121     		movs	r1, #1
 113 002c 0B43     		orrs	r3, r1
 114 002e DBB2     		uxtb	r3, r3
 115 0030 1370     		strb	r3, [r2]
 127:Generated_Source\PSoC4/PWM_0.c ****         #else /* (PWM_0_Resolution == 16)*/
 128:Generated_Source\PSoC4/PWM_0.c ****             /* Set FIFO 0 to 1 byte register for period */
 129:Generated_Source\PSoC4/PWM_0.c ****             PWM_0_AUX_CONTROLDP0 |= (PWM_0_AUX_CTRL_FIFO0_CLR);
 130:Generated_Source\PSoC4/PWM_0.c ****             PWM_0_AUX_CONTROLDP1 |= (PWM_0_AUX_CTRL_FIFO0_CLR);
 131:Generated_Source\PSoC4/PWM_0.c ****         #endif /* (PWM_0_Resolution == 8) */
 132:Generated_Source\PSoC4/PWM_0.c **** 
 133:Generated_Source\PSoC4/PWM_0.c ****         PWM_0_WriteCounter(PWM_0_INIT_PERIOD_VALUE);
 116              		.loc 1 133 0
 117 0032 FF20     		movs	r0, #255
 118 0034 FFF7FEFF 		bl	PWM_0_WriteCounter
 134:Generated_Source\PSoC4/PWM_0.c ****     #endif /* (!PWM_0_UsingFixedFunction) */
 135:Generated_Source\PSoC4/PWM_0.c **** 
 136:Generated_Source\PSoC4/PWM_0.c ****     PWM_0_WritePeriod(PWM_0_INIT_PERIOD_VALUE);
 119              		.loc 1 136 0
 120 0038 FF20     		movs	r0, #255
 121 003a FFF7FEFF 		bl	PWM_0_WritePeriod
 137:Generated_Source\PSoC4/PWM_0.c **** 
 138:Generated_Source\PSoC4/PWM_0.c ****         #if (PWM_0_UseOneCompareMode)
 139:Generated_Source\PSoC4/PWM_0.c ****             PWM_0_WriteCompare(PWM_0_INIT_COMPARE_VALUE1);
 122              		.loc 1 139 0
 123 003e 7F20     		movs	r0, #127
 124 0040 FFF7FEFF 		bl	PWM_0_WriteCompare
 140:Generated_Source\PSoC4/PWM_0.c ****         #else
 141:Generated_Source\PSoC4/PWM_0.c ****             PWM_0_WriteCompare1(PWM_0_INIT_COMPARE_VALUE1);
 142:Generated_Source\PSoC4/PWM_0.c ****             PWM_0_WriteCompare2(PWM_0_INIT_COMPARE_VALUE2);
 143:Generated_Source\PSoC4/PWM_0.c ****         #endif /* (PWM_0_UseOneCompareMode) */
 144:Generated_Source\PSoC4/PWM_0.c **** 
 145:Generated_Source\PSoC4/PWM_0.c ****         #if (PWM_0_KillModeMinTime)
 146:Generated_Source\PSoC4/PWM_0.c ****             PWM_0_WriteKillTime(PWM_0_MinimumKillTime);
 147:Generated_Source\PSoC4/PWM_0.c ****         #endif /* (PWM_0_KillModeMinTime) */
 148:Generated_Source\PSoC4/PWM_0.c **** 
 149:Generated_Source\PSoC4/PWM_0.c ****         #if (PWM_0_DeadBandUsed)
 150:Generated_Source\PSoC4/PWM_0.c ****             PWM_0_WriteDeadTime(PWM_0_INIT_DEAD_TIME);
 151:Generated_Source\PSoC4/PWM_0.c ****         #endif /* (PWM_0_DeadBandUsed) */
 152:Generated_Source\PSoC4/PWM_0.c **** 
 153:Generated_Source\PSoC4/PWM_0.c ****     #if (PWM_0_UseStatus || PWM_0_UsingFixedFunction)
 154:Generated_Source\PSoC4/PWM_0.c ****         PWM_0_SetInterruptMode(PWM_0_INIT_INTERRUPTS_MODE);
 125              		.loc 1 154 0
 126 0044 0020     		movs	r0, #0
 127 0046 FFF7FEFF 		bl	PWM_0_SetInterruptMode
 155:Generated_Source\PSoC4/PWM_0.c ****     #endif /* (PWM_0_UseStatus || PWM_0_UsingFixedFunction) */
 156:Generated_Source\PSoC4/PWM_0.c **** 
 157:Generated_Source\PSoC4/PWM_0.c ****     #if (PWM_0_UsingFixedFunction)
 158:Generated_Source\PSoC4/PWM_0.c ****         /* Globally Enable the Fixed Function Block chosen */
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccEfiZI9.s 			page 6


 159:Generated_Source\PSoC4/PWM_0.c ****         PWM_0_GLOBAL_ENABLE |= PWM_0_BLOCK_EN_MASK;
 160:Generated_Source\PSoC4/PWM_0.c ****         /* Set the Interrupt source to come from the status register */
 161:Generated_Source\PSoC4/PWM_0.c ****         PWM_0_CONTROL2 |= PWM_0_CTRL2_IRQ_SEL;
 162:Generated_Source\PSoC4/PWM_0.c ****     #else
 163:Generated_Source\PSoC4/PWM_0.c ****         #if(PWM_0_UseStatus)
 164:Generated_Source\PSoC4/PWM_0.c **** 
 165:Generated_Source\PSoC4/PWM_0.c ****             /* CyEnterCriticalRegion and CyExitCriticalRegion are used to mark following region cri
 166:Generated_Source\PSoC4/PWM_0.c ****             /* Enter Critical Region*/
 167:Generated_Source\PSoC4/PWM_0.c ****             PWM_0_interruptState = CyEnterCriticalSection();
 128              		.loc 1 167 0
 129 004a BC1D     		adds	r4, r7, #6
 130 004c FFF7FEFF 		bl	CyEnterCriticalSection
 131 0050 0300     		movs	r3, r0
 132 0052 2370     		strb	r3, [r4]
 168:Generated_Source\PSoC4/PWM_0.c ****             /* Use the interrupt output of the status register for IRQ output */
 169:Generated_Source\PSoC4/PWM_0.c ****             PWM_0_STATUS_AUX_CTRL |= PWM_0_STATUS_ACTL_INT_EN_MASK;
 133              		.loc 1 169 0
 134 0054 0A4A     		ldr	r2, .L6+4
 135 0056 0A4B     		ldr	r3, .L6+4
 136 0058 1B78     		ldrb	r3, [r3]
 137 005a DBB2     		uxtb	r3, r3
 138 005c 1021     		movs	r1, #16
 139 005e 0B43     		orrs	r3, r1
 140 0060 DBB2     		uxtb	r3, r3
 141 0062 1370     		strb	r3, [r2]
 170:Generated_Source\PSoC4/PWM_0.c **** 
 171:Generated_Source\PSoC4/PWM_0.c ****              /* Exit Critical Region*/
 172:Generated_Source\PSoC4/PWM_0.c ****             CyExitCriticalSection(PWM_0_interruptState);
 142              		.loc 1 172 0
 143 0064 BB1D     		adds	r3, r7, #6
 144 0066 1B78     		ldrb	r3, [r3]
 145 0068 1800     		movs	r0, r3
 146 006a FFF7FEFF 		bl	CyExitCriticalSection
 173:Generated_Source\PSoC4/PWM_0.c **** 
 174:Generated_Source\PSoC4/PWM_0.c ****             /* Clear the FIFO to enable the PWM_0_STATUS_FIFOFULL
 175:Generated_Source\PSoC4/PWM_0.c ****                    bit to be set on FIFO full. */
 176:Generated_Source\PSoC4/PWM_0.c ****             PWM_0_ClearFIFO();
 147              		.loc 1 176 0
 148 006e FFF7FEFF 		bl	PWM_0_ClearFIFO
 177:Generated_Source\PSoC4/PWM_0.c ****         #endif /* (PWM_0_UseStatus) */
 178:Generated_Source\PSoC4/PWM_0.c ****     #endif /* (PWM_0_UsingFixedFunction) */
 179:Generated_Source\PSoC4/PWM_0.c **** }
 149              		.loc 1 179 0
 150 0072 C046     		nop
 151 0074 BD46     		mov	sp, r7
 152 0076 03B0     		add	sp, sp, #12
 153              		@ sp needed
 154 0078 90BD     		pop	{r4, r7, pc}
 155              	.L7:
 156 007a C046     		.align	2
 157              	.L6:
 158 007c 72000F40 		.word	1074724978
 159 0080 92000F40 		.word	1074725010
 160              		.cfi_endproc
 161              	.LFE1:
 162              		.size	PWM_0_Init, .-PWM_0_Init
 163              		.section	.text.PWM_0_Enable,"ax",%progbits
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccEfiZI9.s 			page 7


 164              		.align	2
 165              		.global	PWM_0_Enable
 166              		.code	16
 167              		.thumb_func
 168              		.type	PWM_0_Enable, %function
 169              	PWM_0_Enable:
 170              	.LFB2:
 180:Generated_Source\PSoC4/PWM_0.c **** 
 181:Generated_Source\PSoC4/PWM_0.c **** 
 182:Generated_Source\PSoC4/PWM_0.c **** /*******************************************************************************
 183:Generated_Source\PSoC4/PWM_0.c **** * Function Name: PWM_0_Enable
 184:Generated_Source\PSoC4/PWM_0.c **** ********************************************************************************
 185:Generated_Source\PSoC4/PWM_0.c **** *
 186:Generated_Source\PSoC4/PWM_0.c **** * Summary:
 187:Generated_Source\PSoC4/PWM_0.c **** *  Enables the PWM block operation
 188:Generated_Source\PSoC4/PWM_0.c **** *
 189:Generated_Source\PSoC4/PWM_0.c **** * Parameters:
 190:Generated_Source\PSoC4/PWM_0.c **** *  None
 191:Generated_Source\PSoC4/PWM_0.c **** *
 192:Generated_Source\PSoC4/PWM_0.c **** * Return:
 193:Generated_Source\PSoC4/PWM_0.c **** *  None
 194:Generated_Source\PSoC4/PWM_0.c **** *
 195:Generated_Source\PSoC4/PWM_0.c **** * Side Effects:
 196:Generated_Source\PSoC4/PWM_0.c **** *  This works only if software enable mode is chosen
 197:Generated_Source\PSoC4/PWM_0.c **** *
 198:Generated_Source\PSoC4/PWM_0.c **** *******************************************************************************/
 199:Generated_Source\PSoC4/PWM_0.c **** void PWM_0_Enable(void) 
 200:Generated_Source\PSoC4/PWM_0.c **** {
 171              		.loc 1 200 0
 172              		.cfi_startproc
 173              		@ args = 0, pretend = 0, frame = 0
 174              		@ frame_needed = 1, uses_anonymous_args = 0
 175 0000 80B5     		push	{r7, lr}
 176              		.cfi_def_cfa_offset 8
 177              		.cfi_offset 7, -8
 178              		.cfi_offset 14, -4
 179 0002 00AF     		add	r7, sp, #0
 180              		.cfi_def_cfa_register 7
 201:Generated_Source\PSoC4/PWM_0.c ****     /* Globally Enable the Fixed Function Block chosen */
 202:Generated_Source\PSoC4/PWM_0.c ****     #if (PWM_0_UsingFixedFunction)
 203:Generated_Source\PSoC4/PWM_0.c ****         PWM_0_GLOBAL_ENABLE |= PWM_0_BLOCK_EN_MASK;
 204:Generated_Source\PSoC4/PWM_0.c ****         PWM_0_GLOBAL_STBY_ENABLE |= PWM_0_BLOCK_STBY_EN_MASK;
 205:Generated_Source\PSoC4/PWM_0.c ****     #endif /* (PWM_0_UsingFixedFunction) */
 206:Generated_Source\PSoC4/PWM_0.c **** 
 207:Generated_Source\PSoC4/PWM_0.c ****     /* Enable the PWM from the control register  */
 208:Generated_Source\PSoC4/PWM_0.c ****     #if (PWM_0_UseControl || PWM_0_UsingFixedFunction)
 209:Generated_Source\PSoC4/PWM_0.c ****         PWM_0_CONTROL |= PWM_0_CTRL_ENABLE;
 181              		.loc 1 209 0
 182 0004 0549     		ldr	r1, .L9
 183 0006 054B     		ldr	r3, .L9
 184 0008 1B78     		ldrb	r3, [r3]
 185 000a DBB2     		uxtb	r3, r3
 186 000c 8022     		movs	r2, #128
 187 000e 5242     		rsbs	r2, r2, #0
 188 0010 1343     		orrs	r3, r2
 189 0012 DBB2     		uxtb	r3, r3
 190 0014 0B70     		strb	r3, [r1]
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccEfiZI9.s 			page 8


 210:Generated_Source\PSoC4/PWM_0.c ****     #endif /* (PWM_0_UseControl || PWM_0_UsingFixedFunction) */
 211:Generated_Source\PSoC4/PWM_0.c **** }
 191              		.loc 1 211 0
 192 0016 C046     		nop
 193 0018 BD46     		mov	sp, r7
 194              		@ sp needed
 195 001a 80BD     		pop	{r7, pc}
 196              	.L10:
 197              		.align	2
 198              	.L9:
 199 001c 72000F40 		.word	1074724978
 200              		.cfi_endproc
 201              	.LFE2:
 202              		.size	PWM_0_Enable, .-PWM_0_Enable
 203              		.section	.text.PWM_0_Stop,"ax",%progbits
 204              		.align	2
 205              		.global	PWM_0_Stop
 206              		.code	16
 207              		.thumb_func
 208              		.type	PWM_0_Stop, %function
 209              	PWM_0_Stop:
 210              	.LFB3:
 212:Generated_Source\PSoC4/PWM_0.c **** 
 213:Generated_Source\PSoC4/PWM_0.c **** 
 214:Generated_Source\PSoC4/PWM_0.c **** /*******************************************************************************
 215:Generated_Source\PSoC4/PWM_0.c **** * Function Name: PWM_0_Stop
 216:Generated_Source\PSoC4/PWM_0.c **** ********************************************************************************
 217:Generated_Source\PSoC4/PWM_0.c **** *
 218:Generated_Source\PSoC4/PWM_0.c **** * Summary:
 219:Generated_Source\PSoC4/PWM_0.c **** *  The stop function halts the PWM, but does not change any modes or disable
 220:Generated_Source\PSoC4/PWM_0.c **** *  interrupts.
 221:Generated_Source\PSoC4/PWM_0.c **** *
 222:Generated_Source\PSoC4/PWM_0.c **** * Parameters:
 223:Generated_Source\PSoC4/PWM_0.c **** *  None
 224:Generated_Source\PSoC4/PWM_0.c **** *
 225:Generated_Source\PSoC4/PWM_0.c **** * Return:
 226:Generated_Source\PSoC4/PWM_0.c **** *  None
 227:Generated_Source\PSoC4/PWM_0.c **** *
 228:Generated_Source\PSoC4/PWM_0.c **** * Side Effects:
 229:Generated_Source\PSoC4/PWM_0.c **** *  If the Enable mode is set to Hardware only then this function
 230:Generated_Source\PSoC4/PWM_0.c **** *  has no effect on the operation of the PWM
 231:Generated_Source\PSoC4/PWM_0.c **** *
 232:Generated_Source\PSoC4/PWM_0.c **** *******************************************************************************/
 233:Generated_Source\PSoC4/PWM_0.c **** void PWM_0_Stop(void) 
 234:Generated_Source\PSoC4/PWM_0.c **** {
 211              		.loc 1 234 0
 212              		.cfi_startproc
 213              		@ args = 0, pretend = 0, frame = 0
 214              		@ frame_needed = 1, uses_anonymous_args = 0
 215 0000 80B5     		push	{r7, lr}
 216              		.cfi_def_cfa_offset 8
 217              		.cfi_offset 7, -8
 218              		.cfi_offset 14, -4
 219 0002 00AF     		add	r7, sp, #0
 220              		.cfi_def_cfa_register 7
 235:Generated_Source\PSoC4/PWM_0.c ****     #if (PWM_0_UseControl || PWM_0_UsingFixedFunction)
 236:Generated_Source\PSoC4/PWM_0.c ****         PWM_0_CONTROL &= ((uint8)(~PWM_0_CTRL_ENABLE));
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccEfiZI9.s 			page 9


 221              		.loc 1 236 0
 222 0004 054A     		ldr	r2, .L12
 223 0006 054B     		ldr	r3, .L12
 224 0008 1B78     		ldrb	r3, [r3]
 225 000a DBB2     		uxtb	r3, r3
 226 000c 7F21     		movs	r1, #127
 227 000e 0B40     		ands	r3, r1
 228 0010 DBB2     		uxtb	r3, r3
 229 0012 1370     		strb	r3, [r2]
 237:Generated_Source\PSoC4/PWM_0.c ****     #endif /* (PWM_0_UseControl || PWM_0_UsingFixedFunction) */
 238:Generated_Source\PSoC4/PWM_0.c **** 
 239:Generated_Source\PSoC4/PWM_0.c ****     /* Globally disable the Fixed Function Block chosen */
 240:Generated_Source\PSoC4/PWM_0.c ****     #if (PWM_0_UsingFixedFunction)
 241:Generated_Source\PSoC4/PWM_0.c ****         PWM_0_GLOBAL_ENABLE &= ((uint8)(~PWM_0_BLOCK_EN_MASK));
 242:Generated_Source\PSoC4/PWM_0.c ****         PWM_0_GLOBAL_STBY_ENABLE &= ((uint8)(~PWM_0_BLOCK_STBY_EN_MASK));
 243:Generated_Source\PSoC4/PWM_0.c ****     #endif /* (PWM_0_UsingFixedFunction) */
 244:Generated_Source\PSoC4/PWM_0.c **** }
 230              		.loc 1 244 0
 231 0014 C046     		nop
 232 0016 BD46     		mov	sp, r7
 233              		@ sp needed
 234 0018 80BD     		pop	{r7, pc}
 235              	.L13:
 236 001a C046     		.align	2
 237              	.L12:
 238 001c 72000F40 		.word	1074724978
 239              		.cfi_endproc
 240              	.LFE3:
 241              		.size	PWM_0_Stop, .-PWM_0_Stop
 242              		.section	.text.PWM_0_WriteCounter,"ax",%progbits
 243              		.align	2
 244              		.global	PWM_0_WriteCounter
 245              		.code	16
 246              		.thumb_func
 247              		.type	PWM_0_WriteCounter, %function
 248              	PWM_0_WriteCounter:
 249              	.LFB4:
 245:Generated_Source\PSoC4/PWM_0.c **** 
 246:Generated_Source\PSoC4/PWM_0.c **** #if (PWM_0_UseOneCompareMode)
 247:Generated_Source\PSoC4/PWM_0.c ****     #if (PWM_0_CompareMode1SW)
 248:Generated_Source\PSoC4/PWM_0.c **** 
 249:Generated_Source\PSoC4/PWM_0.c **** 
 250:Generated_Source\PSoC4/PWM_0.c ****         /*******************************************************************************
 251:Generated_Source\PSoC4/PWM_0.c ****         * Function Name: PWM_0_SetCompareMode
 252:Generated_Source\PSoC4/PWM_0.c ****         ********************************************************************************
 253:Generated_Source\PSoC4/PWM_0.c ****         *
 254:Generated_Source\PSoC4/PWM_0.c ****         * Summary:
 255:Generated_Source\PSoC4/PWM_0.c ****         *  This function writes the Compare Mode for the pwm output when in Dither mode,
 256:Generated_Source\PSoC4/PWM_0.c ****         *  Center Align Mode or One Output Mode.
 257:Generated_Source\PSoC4/PWM_0.c ****         *
 258:Generated_Source\PSoC4/PWM_0.c ****         * Parameters:
 259:Generated_Source\PSoC4/PWM_0.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
 260:Generated_Source\PSoC4/PWM_0.c ****         *                defined in the H file as input arguments.
 261:Generated_Source\PSoC4/PWM_0.c ****         *
 262:Generated_Source\PSoC4/PWM_0.c ****         * Return:
 263:Generated_Source\PSoC4/PWM_0.c ****         *  None
 264:Generated_Source\PSoC4/PWM_0.c ****         *
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccEfiZI9.s 			page 10


 265:Generated_Source\PSoC4/PWM_0.c ****         *******************************************************************************/
 266:Generated_Source\PSoC4/PWM_0.c ****         void PWM_0_SetCompareMode(uint8 comparemode) 
 267:Generated_Source\PSoC4/PWM_0.c ****         {
 268:Generated_Source\PSoC4/PWM_0.c ****             #if(PWM_0_UsingFixedFunction)
 269:Generated_Source\PSoC4/PWM_0.c **** 
 270:Generated_Source\PSoC4/PWM_0.c ****                 #if(0 != PWM_0_CTRL_CMPMODE1_SHIFT)
 271:Generated_Source\PSoC4/PWM_0.c ****                     uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_0_CTRL_CMPMODE1_SH
 272:Generated_Source\PSoC4/PWM_0.c ****                 #else
 273:Generated_Source\PSoC4/PWM_0.c ****                     uint8 comparemodemasked = comparemode;
 274:Generated_Source\PSoC4/PWM_0.c ****                 #endif /* (0 != PWM_0_CTRL_CMPMODE1_SHIFT) */
 275:Generated_Source\PSoC4/PWM_0.c **** 
 276:Generated_Source\PSoC4/PWM_0.c ****                 PWM_0_CONTROL3 &= ((uint8)(~PWM_0_CTRL_CMPMODE1_MASK)); /*Clear Existing Data */
 277:Generated_Source\PSoC4/PWM_0.c ****                 PWM_0_CONTROL3 |= comparemodemasked;
 278:Generated_Source\PSoC4/PWM_0.c **** 
 279:Generated_Source\PSoC4/PWM_0.c ****             #elif (PWM_0_UseControl)
 280:Generated_Source\PSoC4/PWM_0.c **** 
 281:Generated_Source\PSoC4/PWM_0.c ****                 #if(0 != PWM_0_CTRL_CMPMODE1_SHIFT)
 282:Generated_Source\PSoC4/PWM_0.c ****                     uint8 comparemode1masked = ((uint8)((uint8)comparemode << PWM_0_CTRL_CMPMODE1_S
 283:Generated_Source\PSoC4/PWM_0.c ****                                                 PWM_0_CTRL_CMPMODE1_MASK;
 284:Generated_Source\PSoC4/PWM_0.c ****                 #else
 285:Generated_Source\PSoC4/PWM_0.c ****                     uint8 comparemode1masked = comparemode & PWM_0_CTRL_CMPMODE1_MASK;
 286:Generated_Source\PSoC4/PWM_0.c ****                 #endif /* (0 != PWM_0_CTRL_CMPMODE1_SHIFT) */
 287:Generated_Source\PSoC4/PWM_0.c **** 
 288:Generated_Source\PSoC4/PWM_0.c ****                 #if(0 != PWM_0_CTRL_CMPMODE2_SHIFT)
 289:Generated_Source\PSoC4/PWM_0.c ****                     uint8 comparemode2masked = ((uint8)((uint8)comparemode << PWM_0_CTRL_CMPMODE2_S
 290:Generated_Source\PSoC4/PWM_0.c ****                                                PWM_0_CTRL_CMPMODE2_MASK;
 291:Generated_Source\PSoC4/PWM_0.c ****                 #else
 292:Generated_Source\PSoC4/PWM_0.c ****                     uint8 comparemode2masked = comparemode & PWM_0_CTRL_CMPMODE2_MASK;
 293:Generated_Source\PSoC4/PWM_0.c ****                 #endif /* (0 != PWM_0_CTRL_CMPMODE2_SHIFT) */
 294:Generated_Source\PSoC4/PWM_0.c **** 
 295:Generated_Source\PSoC4/PWM_0.c ****                 /*Clear existing mode */
 296:Generated_Source\PSoC4/PWM_0.c ****                 PWM_0_CONTROL &= ((uint8)(~(PWM_0_CTRL_CMPMODE1_MASK |
 297:Generated_Source\PSoC4/PWM_0.c ****                                             PWM_0_CTRL_CMPMODE2_MASK)));
 298:Generated_Source\PSoC4/PWM_0.c ****                 PWM_0_CONTROL |= (comparemode1masked | comparemode2masked);
 299:Generated_Source\PSoC4/PWM_0.c **** 
 300:Generated_Source\PSoC4/PWM_0.c ****             #else
 301:Generated_Source\PSoC4/PWM_0.c ****                 uint8 temp = comparemode;
 302:Generated_Source\PSoC4/PWM_0.c ****             #endif /* (PWM_0_UsingFixedFunction) */
 303:Generated_Source\PSoC4/PWM_0.c ****         }
 304:Generated_Source\PSoC4/PWM_0.c ****     #endif /* PWM_0_CompareMode1SW */
 305:Generated_Source\PSoC4/PWM_0.c **** 
 306:Generated_Source\PSoC4/PWM_0.c **** #else /* UseOneCompareMode */
 307:Generated_Source\PSoC4/PWM_0.c **** 
 308:Generated_Source\PSoC4/PWM_0.c ****     #if (PWM_0_CompareMode1SW)
 309:Generated_Source\PSoC4/PWM_0.c **** 
 310:Generated_Source\PSoC4/PWM_0.c **** 
 311:Generated_Source\PSoC4/PWM_0.c ****         /*******************************************************************************
 312:Generated_Source\PSoC4/PWM_0.c ****         * Function Name: PWM_0_SetCompareMode1
 313:Generated_Source\PSoC4/PWM_0.c ****         ********************************************************************************
 314:Generated_Source\PSoC4/PWM_0.c ****         *
 315:Generated_Source\PSoC4/PWM_0.c ****         * Summary:
 316:Generated_Source\PSoC4/PWM_0.c ****         *  This function writes the Compare Mode for the pwm or pwm1 output
 317:Generated_Source\PSoC4/PWM_0.c ****         *
 318:Generated_Source\PSoC4/PWM_0.c ****         * Parameters:
 319:Generated_Source\PSoC4/PWM_0.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
 320:Generated_Source\PSoC4/PWM_0.c ****         *                defined in the H file as input arguments.
 321:Generated_Source\PSoC4/PWM_0.c ****         *
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccEfiZI9.s 			page 11


 322:Generated_Source\PSoC4/PWM_0.c ****         * Return:
 323:Generated_Source\PSoC4/PWM_0.c ****         *  None
 324:Generated_Source\PSoC4/PWM_0.c ****         *
 325:Generated_Source\PSoC4/PWM_0.c ****         *******************************************************************************/
 326:Generated_Source\PSoC4/PWM_0.c ****         void PWM_0_SetCompareMode1(uint8 comparemode) 
 327:Generated_Source\PSoC4/PWM_0.c ****         {
 328:Generated_Source\PSoC4/PWM_0.c ****             #if(0 != PWM_0_CTRL_CMPMODE1_SHIFT)
 329:Generated_Source\PSoC4/PWM_0.c ****                 uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_0_CTRL_CMPMODE1_SHIFT)
 330:Generated_Source\PSoC4/PWM_0.c ****                                            PWM_0_CTRL_CMPMODE1_MASK;
 331:Generated_Source\PSoC4/PWM_0.c ****             #else
 332:Generated_Source\PSoC4/PWM_0.c ****                 uint8 comparemodemasked = comparemode & PWM_0_CTRL_CMPMODE1_MASK;
 333:Generated_Source\PSoC4/PWM_0.c ****             #endif /* (0 != PWM_0_CTRL_CMPMODE1_SHIFT) */
 334:Generated_Source\PSoC4/PWM_0.c **** 
 335:Generated_Source\PSoC4/PWM_0.c ****             #if (PWM_0_UseControl)
 336:Generated_Source\PSoC4/PWM_0.c ****                 PWM_0_CONTROL &= ((uint8)(~PWM_0_CTRL_CMPMODE1_MASK)); /*Clear existing mode */
 337:Generated_Source\PSoC4/PWM_0.c ****                 PWM_0_CONTROL |= comparemodemasked;
 338:Generated_Source\PSoC4/PWM_0.c ****             #endif /* (PWM_0_UseControl) */
 339:Generated_Source\PSoC4/PWM_0.c ****         }
 340:Generated_Source\PSoC4/PWM_0.c ****     #endif /* PWM_0_CompareMode1SW */
 341:Generated_Source\PSoC4/PWM_0.c **** 
 342:Generated_Source\PSoC4/PWM_0.c **** #if (PWM_0_CompareMode2SW)
 343:Generated_Source\PSoC4/PWM_0.c **** 
 344:Generated_Source\PSoC4/PWM_0.c **** 
 345:Generated_Source\PSoC4/PWM_0.c ****     /*******************************************************************************
 346:Generated_Source\PSoC4/PWM_0.c ****     * Function Name: PWM_0_SetCompareMode2
 347:Generated_Source\PSoC4/PWM_0.c ****     ********************************************************************************
 348:Generated_Source\PSoC4/PWM_0.c ****     *
 349:Generated_Source\PSoC4/PWM_0.c ****     * Summary:
 350:Generated_Source\PSoC4/PWM_0.c ****     *  This function writes the Compare Mode for the pwm or pwm2 output
 351:Generated_Source\PSoC4/PWM_0.c ****     *
 352:Generated_Source\PSoC4/PWM_0.c ****     * Parameters:
 353:Generated_Source\PSoC4/PWM_0.c ****     *  comparemode:  The new compare mode for the PWM output. Use the compare types
 354:Generated_Source\PSoC4/PWM_0.c ****     *                defined in the H file as input arguments.
 355:Generated_Source\PSoC4/PWM_0.c ****     *
 356:Generated_Source\PSoC4/PWM_0.c ****     * Return:
 357:Generated_Source\PSoC4/PWM_0.c ****     *  None
 358:Generated_Source\PSoC4/PWM_0.c ****     *
 359:Generated_Source\PSoC4/PWM_0.c ****     *******************************************************************************/
 360:Generated_Source\PSoC4/PWM_0.c ****     void PWM_0_SetCompareMode2(uint8 comparemode) 
 361:Generated_Source\PSoC4/PWM_0.c ****     {
 362:Generated_Source\PSoC4/PWM_0.c **** 
 363:Generated_Source\PSoC4/PWM_0.c ****         #if(0 != PWM_0_CTRL_CMPMODE2_SHIFT)
 364:Generated_Source\PSoC4/PWM_0.c ****             uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_0_CTRL_CMPMODE2_SHIFT)) &
 365:Generated_Source\PSoC4/PWM_0.c ****                                                  PWM_0_CTRL_CMPMODE2_MASK;
 366:Generated_Source\PSoC4/PWM_0.c ****         #else
 367:Generated_Source\PSoC4/PWM_0.c ****             uint8 comparemodemasked = comparemode & PWM_0_CTRL_CMPMODE2_MASK;
 368:Generated_Source\PSoC4/PWM_0.c ****         #endif /* (0 != PWM_0_CTRL_CMPMODE2_SHIFT) */
 369:Generated_Source\PSoC4/PWM_0.c **** 
 370:Generated_Source\PSoC4/PWM_0.c ****         #if (PWM_0_UseControl)
 371:Generated_Source\PSoC4/PWM_0.c ****             PWM_0_CONTROL &= ((uint8)(~PWM_0_CTRL_CMPMODE2_MASK)); /*Clear existing mode */
 372:Generated_Source\PSoC4/PWM_0.c ****             PWM_0_CONTROL |= comparemodemasked;
 373:Generated_Source\PSoC4/PWM_0.c ****         #endif /* (PWM_0_UseControl) */
 374:Generated_Source\PSoC4/PWM_0.c ****     }
 375:Generated_Source\PSoC4/PWM_0.c ****     #endif /*PWM_0_CompareMode2SW */
 376:Generated_Source\PSoC4/PWM_0.c **** 
 377:Generated_Source\PSoC4/PWM_0.c **** #endif /* UseOneCompareMode */
 378:Generated_Source\PSoC4/PWM_0.c **** 
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccEfiZI9.s 			page 12


 379:Generated_Source\PSoC4/PWM_0.c **** 
 380:Generated_Source\PSoC4/PWM_0.c **** #if (!PWM_0_UsingFixedFunction)
 381:Generated_Source\PSoC4/PWM_0.c **** 
 382:Generated_Source\PSoC4/PWM_0.c **** 
 383:Generated_Source\PSoC4/PWM_0.c ****     /*******************************************************************************
 384:Generated_Source\PSoC4/PWM_0.c ****     * Function Name: PWM_0_WriteCounter
 385:Generated_Source\PSoC4/PWM_0.c ****     ********************************************************************************
 386:Generated_Source\PSoC4/PWM_0.c ****     *
 387:Generated_Source\PSoC4/PWM_0.c ****     * Summary:
 388:Generated_Source\PSoC4/PWM_0.c ****     *  Writes a new counter value directly to the counter register. This will be
 389:Generated_Source\PSoC4/PWM_0.c ****     *  implemented for that currently running period and only that period. This API
 390:Generated_Source\PSoC4/PWM_0.c ****     *  is valid only for UDB implementation and not available for fixed function
 391:Generated_Source\PSoC4/PWM_0.c ****     *  PWM implementation.
 392:Generated_Source\PSoC4/PWM_0.c ****     *
 393:Generated_Source\PSoC4/PWM_0.c ****     * Parameters:
 394:Generated_Source\PSoC4/PWM_0.c ****     *  counter:  The period new period counter value.
 395:Generated_Source\PSoC4/PWM_0.c ****     *
 396:Generated_Source\PSoC4/PWM_0.c ****     * Return:
 397:Generated_Source\PSoC4/PWM_0.c ****     *  None
 398:Generated_Source\PSoC4/PWM_0.c ****     *
 399:Generated_Source\PSoC4/PWM_0.c ****     * Side Effects:
 400:Generated_Source\PSoC4/PWM_0.c ****     *  The PWM Period will be reloaded when a counter value will be a zero
 401:Generated_Source\PSoC4/PWM_0.c ****     *
 402:Generated_Source\PSoC4/PWM_0.c ****     *******************************************************************************/
 403:Generated_Source\PSoC4/PWM_0.c ****     void PWM_0_WriteCounter(uint8 counter) \
 404:Generated_Source\PSoC4/PWM_0.c ****                                        
 405:Generated_Source\PSoC4/PWM_0.c ****     {
 250              		.loc 1 405 0
 251              		.cfi_startproc
 252              		@ args = 0, pretend = 0, frame = 8
 253              		@ frame_needed = 1, uses_anonymous_args = 0
 254 0000 80B5     		push	{r7, lr}
 255              		.cfi_def_cfa_offset 8
 256              		.cfi_offset 7, -8
 257              		.cfi_offset 14, -4
 258 0002 82B0     		sub	sp, sp, #8
 259              		.cfi_def_cfa_offset 16
 260 0004 00AF     		add	r7, sp, #0
 261              		.cfi_def_cfa_register 7
 262 0006 0200     		movs	r2, r0
 263 0008 FB1D     		adds	r3, r7, #7
 264 000a 1A70     		strb	r2, [r3]
 406:Generated_Source\PSoC4/PWM_0.c ****         CY_SET_REG8(PWM_0_COUNTER_LSB_PTR, counter);
 265              		.loc 1 406 0
 266 000c 034A     		ldr	r2, .L15
 267 000e FB1D     		adds	r3, r7, #7
 268 0010 1B78     		ldrb	r3, [r3]
 269 0012 1370     		strb	r3, [r2]
 407:Generated_Source\PSoC4/PWM_0.c ****     }
 270              		.loc 1 407 0
 271 0014 C046     		nop
 272 0016 BD46     		mov	sp, r7
 273 0018 02B0     		add	sp, sp, #8
 274              		@ sp needed
 275 001a 80BD     		pop	{r7, pc}
 276              	.L16:
 277              		.align	2
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccEfiZI9.s 			page 13


 278              	.L15:
 279 001c 02000F40 		.word	1074724866
 280              		.cfi_endproc
 281              	.LFE4:
 282              		.size	PWM_0_WriteCounter, .-PWM_0_WriteCounter
 283              		.section	.text.PWM_0_ReadCounter,"ax",%progbits
 284              		.align	2
 285              		.global	PWM_0_ReadCounter
 286              		.code	16
 287              		.thumb_func
 288              		.type	PWM_0_ReadCounter, %function
 289              	PWM_0_ReadCounter:
 290              	.LFB5:
 408:Generated_Source\PSoC4/PWM_0.c **** 
 409:Generated_Source\PSoC4/PWM_0.c **** 
 410:Generated_Source\PSoC4/PWM_0.c ****     /*******************************************************************************
 411:Generated_Source\PSoC4/PWM_0.c ****     * Function Name: PWM_0_ReadCounter
 412:Generated_Source\PSoC4/PWM_0.c ****     ********************************************************************************
 413:Generated_Source\PSoC4/PWM_0.c ****     *
 414:Generated_Source\PSoC4/PWM_0.c ****     * Summary:
 415:Generated_Source\PSoC4/PWM_0.c ****     *  This function returns the current value of the counter.  It doesn't matter
 416:Generated_Source\PSoC4/PWM_0.c ****     *  if the counter is enabled or running.
 417:Generated_Source\PSoC4/PWM_0.c ****     *
 418:Generated_Source\PSoC4/PWM_0.c ****     * Parameters:
 419:Generated_Source\PSoC4/PWM_0.c ****     *  None
 420:Generated_Source\PSoC4/PWM_0.c ****     *
 421:Generated_Source\PSoC4/PWM_0.c ****     * Return:
 422:Generated_Source\PSoC4/PWM_0.c ****     *  The current value of the counter.
 423:Generated_Source\PSoC4/PWM_0.c ****     *
 424:Generated_Source\PSoC4/PWM_0.c ****     *******************************************************************************/
 425:Generated_Source\PSoC4/PWM_0.c ****     uint8 PWM_0_ReadCounter(void) 
 426:Generated_Source\PSoC4/PWM_0.c ****     {
 291              		.loc 1 426 0
 292              		.cfi_startproc
 293              		@ args = 0, pretend = 0, frame = 0
 294              		@ frame_needed = 1, uses_anonymous_args = 0
 295 0000 80B5     		push	{r7, lr}
 296              		.cfi_def_cfa_offset 8
 297              		.cfi_offset 7, -8
 298              		.cfi_offset 14, -4
 299 0002 00AF     		add	r7, sp, #0
 300              		.cfi_def_cfa_register 7
 427:Generated_Source\PSoC4/PWM_0.c ****         /* Force capture by reading Accumulator */
 428:Generated_Source\PSoC4/PWM_0.c ****         /* Must first do a software capture to be able to read the counter */
 429:Generated_Source\PSoC4/PWM_0.c ****         /* It is up to the user code to make sure there isn't already captured data in the FIFO */
 430:Generated_Source\PSoC4/PWM_0.c ****           (void)CY_GET_REG8(PWM_0_COUNTERCAP_LSB_PTR_8BIT);
 301              		.loc 1 430 0
 302 0004 034B     		ldr	r3, .L19
 303 0006 1B78     		ldrb	r3, [r3]
 431:Generated_Source\PSoC4/PWM_0.c **** 
 432:Generated_Source\PSoC4/PWM_0.c ****         /* Read the data from the FIFO */
 433:Generated_Source\PSoC4/PWM_0.c ****         return (CY_GET_REG8(PWM_0_CAPTURE_LSB_PTR));
 304              		.loc 1 433 0
 305 0008 034B     		ldr	r3, .L19+4
 306 000a 1B78     		ldrb	r3, [r3]
 307 000c DBB2     		uxtb	r3, r3
 434:Generated_Source\PSoC4/PWM_0.c ****     }
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccEfiZI9.s 			page 14


 308              		.loc 1 434 0
 309 000e 1800     		movs	r0, r3
 310 0010 BD46     		mov	sp, r7
 311              		@ sp needed
 312 0012 80BD     		pop	{r7, pc}
 313              	.L20:
 314              		.align	2
 315              	.L19:
 316 0014 12000F40 		.word	1074724882
 317 0018 52000F40 		.word	1074724946
 318              		.cfi_endproc
 319              	.LFE5:
 320              		.size	PWM_0_ReadCounter, .-PWM_0_ReadCounter
 321              		.section	.text.PWM_0_ClearFIFO,"ax",%progbits
 322              		.align	2
 323              		.global	PWM_0_ClearFIFO
 324              		.code	16
 325              		.thumb_func
 326              		.type	PWM_0_ClearFIFO, %function
 327              	PWM_0_ClearFIFO:
 328              	.LFB6:
 435:Generated_Source\PSoC4/PWM_0.c **** 
 436:Generated_Source\PSoC4/PWM_0.c ****     #if (PWM_0_UseStatus)
 437:Generated_Source\PSoC4/PWM_0.c **** 
 438:Generated_Source\PSoC4/PWM_0.c **** 
 439:Generated_Source\PSoC4/PWM_0.c ****         /*******************************************************************************
 440:Generated_Source\PSoC4/PWM_0.c ****         * Function Name: PWM_0_ClearFIFO
 441:Generated_Source\PSoC4/PWM_0.c ****         ********************************************************************************
 442:Generated_Source\PSoC4/PWM_0.c ****         *
 443:Generated_Source\PSoC4/PWM_0.c ****         * Summary:
 444:Generated_Source\PSoC4/PWM_0.c ****         *  This function clears all capture data from the capture FIFO
 445:Generated_Source\PSoC4/PWM_0.c ****         *
 446:Generated_Source\PSoC4/PWM_0.c ****         * Parameters:
 447:Generated_Source\PSoC4/PWM_0.c ****         *  None
 448:Generated_Source\PSoC4/PWM_0.c ****         *
 449:Generated_Source\PSoC4/PWM_0.c ****         * Return:
 450:Generated_Source\PSoC4/PWM_0.c ****         *  None
 451:Generated_Source\PSoC4/PWM_0.c ****         *
 452:Generated_Source\PSoC4/PWM_0.c ****         *******************************************************************************/
 453:Generated_Source\PSoC4/PWM_0.c ****         void PWM_0_ClearFIFO(void) 
 454:Generated_Source\PSoC4/PWM_0.c ****         {
 329              		.loc 1 454 0
 330              		.cfi_startproc
 331              		@ args = 0, pretend = 0, frame = 0
 332              		@ frame_needed = 1, uses_anonymous_args = 0
 333 0000 80B5     		push	{r7, lr}
 334              		.cfi_def_cfa_offset 8
 335              		.cfi_offset 7, -8
 336              		.cfi_offset 14, -4
 337 0002 00AF     		add	r7, sp, #0
 338              		.cfi_def_cfa_register 7
 455:Generated_Source\PSoC4/PWM_0.c ****             while(0u != (PWM_0_ReadStatusRegister() & PWM_0_STATUS_FIFONEMPTY))
 339              		.loc 1 455 0
 340 0004 01E0     		b	.L22
 341              	.L23:
 456:Generated_Source\PSoC4/PWM_0.c ****             {
 457:Generated_Source\PSoC4/PWM_0.c ****                 (void)PWM_0_ReadCapture();
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccEfiZI9.s 			page 15


 342              		.loc 1 457 0
 343 0006 FFF7FEFF 		bl	PWM_0_ReadCapture
 344              	.L22:
 455:Generated_Source\PSoC4/PWM_0.c ****             while(0u != (PWM_0_ReadStatusRegister() & PWM_0_STATUS_FIFONEMPTY))
 345              		.loc 1 455 0
 346 000a FFF7FEFF 		bl	PWM_0_ReadStatusRegister
 347 000e 0300     		movs	r3, r0
 348 0010 1A00     		movs	r2, r3
 349 0012 1023     		movs	r3, #16
 350 0014 1340     		ands	r3, r2
 351 0016 F6D1     		bne	.L23
 458:Generated_Source\PSoC4/PWM_0.c ****             }
 459:Generated_Source\PSoC4/PWM_0.c ****         }
 352              		.loc 1 459 0
 353 0018 C046     		nop
 354 001a BD46     		mov	sp, r7
 355              		@ sp needed
 356 001c 80BD     		pop	{r7, pc}
 357              		.cfi_endproc
 358              	.LFE6:
 359              		.size	PWM_0_ClearFIFO, .-PWM_0_ClearFIFO
 360 001e C046     		.section	.text.PWM_0_WritePeriod,"ax",%progbits
 361              		.align	2
 362              		.global	PWM_0_WritePeriod
 363              		.code	16
 364              		.thumb_func
 365              		.type	PWM_0_WritePeriod, %function
 366              	PWM_0_WritePeriod:
 367              	.LFB7:
 460:Generated_Source\PSoC4/PWM_0.c **** 
 461:Generated_Source\PSoC4/PWM_0.c ****     #endif /* PWM_0_UseStatus */
 462:Generated_Source\PSoC4/PWM_0.c **** 
 463:Generated_Source\PSoC4/PWM_0.c **** #endif /* !PWM_0_UsingFixedFunction */
 464:Generated_Source\PSoC4/PWM_0.c **** 
 465:Generated_Source\PSoC4/PWM_0.c **** 
 466:Generated_Source\PSoC4/PWM_0.c **** /*******************************************************************************
 467:Generated_Source\PSoC4/PWM_0.c **** * Function Name: PWM_0_WritePeriod
 468:Generated_Source\PSoC4/PWM_0.c **** ********************************************************************************
 469:Generated_Source\PSoC4/PWM_0.c **** *
 470:Generated_Source\PSoC4/PWM_0.c **** * Summary:
 471:Generated_Source\PSoC4/PWM_0.c **** *  This function is used to change the period of the counter.  The new period
 472:Generated_Source\PSoC4/PWM_0.c **** *  will be loaded the next time terminal count is detected.
 473:Generated_Source\PSoC4/PWM_0.c **** *
 474:Generated_Source\PSoC4/PWM_0.c **** * Parameters:
 475:Generated_Source\PSoC4/PWM_0.c **** *  period:  Period value. May be between 1 and (2^Resolution)-1.  A value of 0
 476:Generated_Source\PSoC4/PWM_0.c **** *           will result in the counter remaining at zero.
 477:Generated_Source\PSoC4/PWM_0.c **** *
 478:Generated_Source\PSoC4/PWM_0.c **** * Return:
 479:Generated_Source\PSoC4/PWM_0.c **** *  None
 480:Generated_Source\PSoC4/PWM_0.c **** *
 481:Generated_Source\PSoC4/PWM_0.c **** *******************************************************************************/
 482:Generated_Source\PSoC4/PWM_0.c **** void PWM_0_WritePeriod(uint8 period) 
 483:Generated_Source\PSoC4/PWM_0.c **** {
 368              		.loc 1 483 0
 369              		.cfi_startproc
 370              		@ args = 0, pretend = 0, frame = 8
 371              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccEfiZI9.s 			page 16


 372 0000 80B5     		push	{r7, lr}
 373              		.cfi_def_cfa_offset 8
 374              		.cfi_offset 7, -8
 375              		.cfi_offset 14, -4
 376 0002 82B0     		sub	sp, sp, #8
 377              		.cfi_def_cfa_offset 16
 378 0004 00AF     		add	r7, sp, #0
 379              		.cfi_def_cfa_register 7
 380 0006 0200     		movs	r2, r0
 381 0008 FB1D     		adds	r3, r7, #7
 382 000a 1A70     		strb	r2, [r3]
 484:Generated_Source\PSoC4/PWM_0.c ****     #if(PWM_0_UsingFixedFunction)
 485:Generated_Source\PSoC4/PWM_0.c ****         CY_SET_REG16(PWM_0_PERIOD_LSB_PTR, (uint16)period);
 486:Generated_Source\PSoC4/PWM_0.c ****     #else
 487:Generated_Source\PSoC4/PWM_0.c ****         CY_SET_REG8(PWM_0_PERIOD_LSB_PTR, period);
 383              		.loc 1 487 0
 384 000c 034A     		ldr	r2, .L25
 385 000e FB1D     		adds	r3, r7, #7
 386 0010 1B78     		ldrb	r3, [r3]
 387 0012 1370     		strb	r3, [r2]
 488:Generated_Source\PSoC4/PWM_0.c ****     #endif /* (PWM_0_UsingFixedFunction) */
 489:Generated_Source\PSoC4/PWM_0.c **** }
 388              		.loc 1 489 0
 389 0014 C046     		nop
 390 0016 BD46     		mov	sp, r7
 391 0018 02B0     		add	sp, sp, #8
 392              		@ sp needed
 393 001a 80BD     		pop	{r7, pc}
 394              	.L26:
 395              		.align	2
 396              	.L25:
 397 001c 42000F40 		.word	1074724930
 398              		.cfi_endproc
 399              	.LFE7:
 400              		.size	PWM_0_WritePeriod, .-PWM_0_WritePeriod
 401              		.section	.text.PWM_0_WriteCompare,"ax",%progbits
 402              		.align	2
 403              		.global	PWM_0_WriteCompare
 404              		.code	16
 405              		.thumb_func
 406              		.type	PWM_0_WriteCompare, %function
 407              	PWM_0_WriteCompare:
 408              	.LFB8:
 490:Generated_Source\PSoC4/PWM_0.c **** 
 491:Generated_Source\PSoC4/PWM_0.c **** #if (PWM_0_UseOneCompareMode)
 492:Generated_Source\PSoC4/PWM_0.c **** 
 493:Generated_Source\PSoC4/PWM_0.c **** 
 494:Generated_Source\PSoC4/PWM_0.c ****     /*******************************************************************************
 495:Generated_Source\PSoC4/PWM_0.c ****     * Function Name: PWM_0_WriteCompare
 496:Generated_Source\PSoC4/PWM_0.c ****     ********************************************************************************
 497:Generated_Source\PSoC4/PWM_0.c ****     *
 498:Generated_Source\PSoC4/PWM_0.c ****     * Summary:
 499:Generated_Source\PSoC4/PWM_0.c ****     *  This funtion is used to change the compare1 value when the PWM is in Dither
 500:Generated_Source\PSoC4/PWM_0.c ****     *  mode. The compare output will reflect the new value on the next UDB clock.
 501:Generated_Source\PSoC4/PWM_0.c ****     *  The compare output will be driven high when the present counter value is
 502:Generated_Source\PSoC4/PWM_0.c ****     *  compared to the compare value based on the compare mode defined in
 503:Generated_Source\PSoC4/PWM_0.c ****     *  Dither Mode.
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccEfiZI9.s 			page 17


 504:Generated_Source\PSoC4/PWM_0.c ****     *
 505:Generated_Source\PSoC4/PWM_0.c ****     * Parameters:
 506:Generated_Source\PSoC4/PWM_0.c ****     *  compare:  New compare value.
 507:Generated_Source\PSoC4/PWM_0.c ****     *
 508:Generated_Source\PSoC4/PWM_0.c ****     * Return:
 509:Generated_Source\PSoC4/PWM_0.c ****     *  None
 510:Generated_Source\PSoC4/PWM_0.c ****     *
 511:Generated_Source\PSoC4/PWM_0.c ****     * Side Effects:
 512:Generated_Source\PSoC4/PWM_0.c ****     *  This function is only available if the PWM mode parameter is set to
 513:Generated_Source\PSoC4/PWM_0.c ****     *  Dither Mode, Center Aligned Mode or One Output Mode
 514:Generated_Source\PSoC4/PWM_0.c ****     *
 515:Generated_Source\PSoC4/PWM_0.c ****     *******************************************************************************/
 516:Generated_Source\PSoC4/PWM_0.c ****     void PWM_0_WriteCompare(uint8 compare) \
 517:Generated_Source\PSoC4/PWM_0.c ****                                        
 518:Generated_Source\PSoC4/PWM_0.c ****     {
 409              		.loc 1 518 0
 410              		.cfi_startproc
 411              		@ args = 0, pretend = 0, frame = 8
 412              		@ frame_needed = 1, uses_anonymous_args = 0
 413 0000 80B5     		push	{r7, lr}
 414              		.cfi_def_cfa_offset 8
 415              		.cfi_offset 7, -8
 416              		.cfi_offset 14, -4
 417 0002 82B0     		sub	sp, sp, #8
 418              		.cfi_def_cfa_offset 16
 419 0004 00AF     		add	r7, sp, #0
 420              		.cfi_def_cfa_register 7
 421 0006 0200     		movs	r2, r0
 422 0008 FB1D     		adds	r3, r7, #7
 423 000a 1A70     		strb	r2, [r3]
 519:Generated_Source\PSoC4/PWM_0.c ****         #if(PWM_0_UsingFixedFunction)
 520:Generated_Source\PSoC4/PWM_0.c ****             CY_SET_REG16(PWM_0_COMPARE1_LSB_PTR, (uint16)compare);
 521:Generated_Source\PSoC4/PWM_0.c ****         #else
 522:Generated_Source\PSoC4/PWM_0.c ****             CY_SET_REG8(PWM_0_COMPARE1_LSB_PTR, compare);
 424              		.loc 1 522 0
 425 000c 034A     		ldr	r2, .L28
 426 000e FB1D     		adds	r3, r7, #7
 427 0010 1B78     		ldrb	r3, [r3]
 428 0012 1370     		strb	r3, [r2]
 523:Generated_Source\PSoC4/PWM_0.c ****         #endif /* (PWM_0_UsingFixedFunction) */
 524:Generated_Source\PSoC4/PWM_0.c **** 
 525:Generated_Source\PSoC4/PWM_0.c ****         #if (PWM_0_PWMMode == PWM_0__B_PWM__DITHER)
 526:Generated_Source\PSoC4/PWM_0.c ****             #if(PWM_0_UsingFixedFunction)
 527:Generated_Source\PSoC4/PWM_0.c ****                 CY_SET_REG16(PWM_0_COMPARE2_LSB_PTR, (uint16)(compare + 1u));
 528:Generated_Source\PSoC4/PWM_0.c ****             #else
 529:Generated_Source\PSoC4/PWM_0.c ****                 CY_SET_REG8(PWM_0_COMPARE2_LSB_PTR, (compare + 1u));
 530:Generated_Source\PSoC4/PWM_0.c ****             #endif /* (PWM_0_UsingFixedFunction) */
 531:Generated_Source\PSoC4/PWM_0.c ****         #endif /* (PWM_0_PWMMode == PWM_0__B_PWM__DITHER) */
 532:Generated_Source\PSoC4/PWM_0.c ****     }
 429              		.loc 1 532 0
 430 0014 C046     		nop
 431 0016 BD46     		mov	sp, r7
 432 0018 02B0     		add	sp, sp, #8
 433              		@ sp needed
 434 001a 80BD     		pop	{r7, pc}
 435              	.L29:
 436              		.align	2
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccEfiZI9.s 			page 18


 437              	.L28:
 438 001c 22000F40 		.word	1074724898
 439              		.cfi_endproc
 440              	.LFE8:
 441              		.size	PWM_0_WriteCompare, .-PWM_0_WriteCompare
 442              		.section	.text.PWM_0_SetInterruptMode,"ax",%progbits
 443              		.align	2
 444              		.global	PWM_0_SetInterruptMode
 445              		.code	16
 446              		.thumb_func
 447              		.type	PWM_0_SetInterruptMode, %function
 448              	PWM_0_SetInterruptMode:
 449              	.LFB9:
 533:Generated_Source\PSoC4/PWM_0.c **** 
 534:Generated_Source\PSoC4/PWM_0.c **** 
 535:Generated_Source\PSoC4/PWM_0.c **** #else
 536:Generated_Source\PSoC4/PWM_0.c **** 
 537:Generated_Source\PSoC4/PWM_0.c **** 
 538:Generated_Source\PSoC4/PWM_0.c ****     /*******************************************************************************
 539:Generated_Source\PSoC4/PWM_0.c ****     * Function Name: PWM_0_WriteCompare1
 540:Generated_Source\PSoC4/PWM_0.c ****     ********************************************************************************
 541:Generated_Source\PSoC4/PWM_0.c ****     *
 542:Generated_Source\PSoC4/PWM_0.c ****     * Summary:
 543:Generated_Source\PSoC4/PWM_0.c ****     *  This funtion is used to change the compare1 value.  The compare output will
 544:Generated_Source\PSoC4/PWM_0.c ****     *  reflect the new value on the next UDB clock.  The compare output will be
 545:Generated_Source\PSoC4/PWM_0.c ****     *  driven high when the present counter value is less than or less than or
 546:Generated_Source\PSoC4/PWM_0.c ****     *  equal to the compare register, depending on the mode.
 547:Generated_Source\PSoC4/PWM_0.c ****     *
 548:Generated_Source\PSoC4/PWM_0.c ****     * Parameters:
 549:Generated_Source\PSoC4/PWM_0.c ****     *  compare:  New compare value.
 550:Generated_Source\PSoC4/PWM_0.c ****     *
 551:Generated_Source\PSoC4/PWM_0.c ****     * Return:
 552:Generated_Source\PSoC4/PWM_0.c ****     *  None
 553:Generated_Source\PSoC4/PWM_0.c ****     *
 554:Generated_Source\PSoC4/PWM_0.c ****     *******************************************************************************/
 555:Generated_Source\PSoC4/PWM_0.c ****     void PWM_0_WriteCompare1(uint8 compare) \
 556:Generated_Source\PSoC4/PWM_0.c ****                                         
 557:Generated_Source\PSoC4/PWM_0.c ****     {
 558:Generated_Source\PSoC4/PWM_0.c ****         #if(PWM_0_UsingFixedFunction)
 559:Generated_Source\PSoC4/PWM_0.c ****             CY_SET_REG16(PWM_0_COMPARE1_LSB_PTR, (uint16)compare);
 560:Generated_Source\PSoC4/PWM_0.c ****         #else
 561:Generated_Source\PSoC4/PWM_0.c ****             CY_SET_REG8(PWM_0_COMPARE1_LSB_PTR, compare);
 562:Generated_Source\PSoC4/PWM_0.c ****         #endif /* (PWM_0_UsingFixedFunction) */
 563:Generated_Source\PSoC4/PWM_0.c ****     }
 564:Generated_Source\PSoC4/PWM_0.c **** 
 565:Generated_Source\PSoC4/PWM_0.c **** 
 566:Generated_Source\PSoC4/PWM_0.c ****     /*******************************************************************************
 567:Generated_Source\PSoC4/PWM_0.c ****     * Function Name: PWM_0_WriteCompare2
 568:Generated_Source\PSoC4/PWM_0.c ****     ********************************************************************************
 569:Generated_Source\PSoC4/PWM_0.c ****     *
 570:Generated_Source\PSoC4/PWM_0.c ****     * Summary:
 571:Generated_Source\PSoC4/PWM_0.c ****     *  This funtion is used to change the compare value, for compare1 output.
 572:Generated_Source\PSoC4/PWM_0.c ****     *  The compare output will reflect the new value on the next UDB clock.
 573:Generated_Source\PSoC4/PWM_0.c ****     *  The compare output will be driven high when the present counter value is
 574:Generated_Source\PSoC4/PWM_0.c ****     *  less than or less than or equal to the compare register, depending on the
 575:Generated_Source\PSoC4/PWM_0.c ****     *  mode.
 576:Generated_Source\PSoC4/PWM_0.c ****     *
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccEfiZI9.s 			page 19


 577:Generated_Source\PSoC4/PWM_0.c ****     * Parameters:
 578:Generated_Source\PSoC4/PWM_0.c ****     *  compare:  New compare value.
 579:Generated_Source\PSoC4/PWM_0.c ****     *
 580:Generated_Source\PSoC4/PWM_0.c ****     * Return:
 581:Generated_Source\PSoC4/PWM_0.c ****     *  None
 582:Generated_Source\PSoC4/PWM_0.c ****     *
 583:Generated_Source\PSoC4/PWM_0.c ****     *******************************************************************************/
 584:Generated_Source\PSoC4/PWM_0.c ****     void PWM_0_WriteCompare2(uint8 compare) \
 585:Generated_Source\PSoC4/PWM_0.c ****                                         
 586:Generated_Source\PSoC4/PWM_0.c ****     {
 587:Generated_Source\PSoC4/PWM_0.c ****         #if(PWM_0_UsingFixedFunction)
 588:Generated_Source\PSoC4/PWM_0.c ****             CY_SET_REG16(PWM_0_COMPARE2_LSB_PTR, compare);
 589:Generated_Source\PSoC4/PWM_0.c ****         #else
 590:Generated_Source\PSoC4/PWM_0.c ****             CY_SET_REG8(PWM_0_COMPARE2_LSB_PTR, compare);
 591:Generated_Source\PSoC4/PWM_0.c ****         #endif /* (PWM_0_UsingFixedFunction) */
 592:Generated_Source\PSoC4/PWM_0.c ****     }
 593:Generated_Source\PSoC4/PWM_0.c **** #endif /* UseOneCompareMode */
 594:Generated_Source\PSoC4/PWM_0.c **** 
 595:Generated_Source\PSoC4/PWM_0.c **** #if (PWM_0_DeadBandUsed)
 596:Generated_Source\PSoC4/PWM_0.c **** 
 597:Generated_Source\PSoC4/PWM_0.c **** 
 598:Generated_Source\PSoC4/PWM_0.c ****     /*******************************************************************************
 599:Generated_Source\PSoC4/PWM_0.c ****     * Function Name: PWM_0_WriteDeadTime
 600:Generated_Source\PSoC4/PWM_0.c ****     ********************************************************************************
 601:Generated_Source\PSoC4/PWM_0.c ****     *
 602:Generated_Source\PSoC4/PWM_0.c ****     * Summary:
 603:Generated_Source\PSoC4/PWM_0.c ****     *  This function writes the dead-band counts to the corresponding register
 604:Generated_Source\PSoC4/PWM_0.c ****     *
 605:Generated_Source\PSoC4/PWM_0.c ****     * Parameters:
 606:Generated_Source\PSoC4/PWM_0.c ****     *  deadtime:  Number of counts for dead time
 607:Generated_Source\PSoC4/PWM_0.c ****     *
 608:Generated_Source\PSoC4/PWM_0.c ****     * Return:
 609:Generated_Source\PSoC4/PWM_0.c ****     *  None
 610:Generated_Source\PSoC4/PWM_0.c ****     *
 611:Generated_Source\PSoC4/PWM_0.c ****     *******************************************************************************/
 612:Generated_Source\PSoC4/PWM_0.c ****     void PWM_0_WriteDeadTime(uint8 deadtime) 
 613:Generated_Source\PSoC4/PWM_0.c ****     {
 614:Generated_Source\PSoC4/PWM_0.c ****         /* If using the Dead Band 1-255 mode then just write the register */
 615:Generated_Source\PSoC4/PWM_0.c ****         #if(!PWM_0_DeadBand2_4)
 616:Generated_Source\PSoC4/PWM_0.c ****             CY_SET_REG8(PWM_0_DEADBAND_COUNT_PTR, deadtime);
 617:Generated_Source\PSoC4/PWM_0.c ****         #else
 618:Generated_Source\PSoC4/PWM_0.c ****             /* Otherwise the data has to be masked and offset */
 619:Generated_Source\PSoC4/PWM_0.c ****             /* Clear existing data */
 620:Generated_Source\PSoC4/PWM_0.c ****             PWM_0_DEADBAND_COUNT &= ((uint8)(~PWM_0_DEADBAND_COUNT_MASK));
 621:Generated_Source\PSoC4/PWM_0.c **** 
 622:Generated_Source\PSoC4/PWM_0.c ****             /* Set new dead time */
 623:Generated_Source\PSoC4/PWM_0.c ****             #if(PWM_0_DEADBAND_COUNT_SHIFT)
 624:Generated_Source\PSoC4/PWM_0.c ****                 PWM_0_DEADBAND_COUNT |= ((uint8)((uint8)deadtime << PWM_0_DEADBAND_COUNT_SHIFT)) &
 625:Generated_Source\PSoC4/PWM_0.c ****                                                     PWM_0_DEADBAND_COUNT_MASK;
 626:Generated_Source\PSoC4/PWM_0.c ****             #else
 627:Generated_Source\PSoC4/PWM_0.c ****                 PWM_0_DEADBAND_COUNT |= deadtime & PWM_0_DEADBAND_COUNT_MASK;
 628:Generated_Source\PSoC4/PWM_0.c ****             #endif /* (PWM_0_DEADBAND_COUNT_SHIFT) */
 629:Generated_Source\PSoC4/PWM_0.c **** 
 630:Generated_Source\PSoC4/PWM_0.c ****         #endif /* (!PWM_0_DeadBand2_4) */
 631:Generated_Source\PSoC4/PWM_0.c ****     }
 632:Generated_Source\PSoC4/PWM_0.c **** 
 633:Generated_Source\PSoC4/PWM_0.c **** 
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccEfiZI9.s 			page 20


 634:Generated_Source\PSoC4/PWM_0.c ****     /*******************************************************************************
 635:Generated_Source\PSoC4/PWM_0.c ****     * Function Name: PWM_0_ReadDeadTime
 636:Generated_Source\PSoC4/PWM_0.c ****     ********************************************************************************
 637:Generated_Source\PSoC4/PWM_0.c ****     *
 638:Generated_Source\PSoC4/PWM_0.c ****     * Summary:
 639:Generated_Source\PSoC4/PWM_0.c ****     *  This function reads the dead-band counts from the corresponding register
 640:Generated_Source\PSoC4/PWM_0.c ****     *
 641:Generated_Source\PSoC4/PWM_0.c ****     * Parameters:
 642:Generated_Source\PSoC4/PWM_0.c ****     *  None
 643:Generated_Source\PSoC4/PWM_0.c ****     *
 644:Generated_Source\PSoC4/PWM_0.c ****     * Return:
 645:Generated_Source\PSoC4/PWM_0.c ****     *  Dead Band Counts
 646:Generated_Source\PSoC4/PWM_0.c ****     *
 647:Generated_Source\PSoC4/PWM_0.c ****     *******************************************************************************/
 648:Generated_Source\PSoC4/PWM_0.c ****     uint8 PWM_0_ReadDeadTime(void) 
 649:Generated_Source\PSoC4/PWM_0.c ****     {
 650:Generated_Source\PSoC4/PWM_0.c ****         /* If using the Dead Band 1-255 mode then just read the register */
 651:Generated_Source\PSoC4/PWM_0.c ****         #if(!PWM_0_DeadBand2_4)
 652:Generated_Source\PSoC4/PWM_0.c ****             return (CY_GET_REG8(PWM_0_DEADBAND_COUNT_PTR));
 653:Generated_Source\PSoC4/PWM_0.c ****         #else
 654:Generated_Source\PSoC4/PWM_0.c **** 
 655:Generated_Source\PSoC4/PWM_0.c ****             /* Otherwise the data has to be masked and offset */
 656:Generated_Source\PSoC4/PWM_0.c ****             #if(PWM_0_DEADBAND_COUNT_SHIFT)
 657:Generated_Source\PSoC4/PWM_0.c ****                 return ((uint8)(((uint8)(PWM_0_DEADBAND_COUNT & PWM_0_DEADBAND_COUNT_MASK)) >>
 658:Generated_Source\PSoC4/PWM_0.c ****                                                                            PWM_0_DEADBAND_COUNT_SHI
 659:Generated_Source\PSoC4/PWM_0.c ****             #else
 660:Generated_Source\PSoC4/PWM_0.c ****                 return (PWM_0_DEADBAND_COUNT & PWM_0_DEADBAND_COUNT_MASK);
 661:Generated_Source\PSoC4/PWM_0.c ****             #endif /* (PWM_0_DEADBAND_COUNT_SHIFT) */
 662:Generated_Source\PSoC4/PWM_0.c ****         #endif /* (!PWM_0_DeadBand2_4) */
 663:Generated_Source\PSoC4/PWM_0.c ****     }
 664:Generated_Source\PSoC4/PWM_0.c **** #endif /* DeadBandUsed */
 665:Generated_Source\PSoC4/PWM_0.c **** 
 666:Generated_Source\PSoC4/PWM_0.c **** #if (PWM_0_UseStatus || PWM_0_UsingFixedFunction)
 667:Generated_Source\PSoC4/PWM_0.c **** 
 668:Generated_Source\PSoC4/PWM_0.c **** 
 669:Generated_Source\PSoC4/PWM_0.c ****     /*******************************************************************************
 670:Generated_Source\PSoC4/PWM_0.c ****     * Function Name: PWM_0_SetInterruptMode
 671:Generated_Source\PSoC4/PWM_0.c ****     ********************************************************************************
 672:Generated_Source\PSoC4/PWM_0.c ****     *
 673:Generated_Source\PSoC4/PWM_0.c ****     * Summary:
 674:Generated_Source\PSoC4/PWM_0.c ****     *  This function configures the interrupts mask control of theinterrupt
 675:Generated_Source\PSoC4/PWM_0.c ****     *  source status register.
 676:Generated_Source\PSoC4/PWM_0.c ****     *
 677:Generated_Source\PSoC4/PWM_0.c ****     * Parameters:
 678:Generated_Source\PSoC4/PWM_0.c ****     *  uint8 interruptMode: Bit field containing the interrupt sources enabled
 679:Generated_Source\PSoC4/PWM_0.c ****     *
 680:Generated_Source\PSoC4/PWM_0.c ****     * Return:
 681:Generated_Source\PSoC4/PWM_0.c ****     *  None
 682:Generated_Source\PSoC4/PWM_0.c ****     *
 683:Generated_Source\PSoC4/PWM_0.c ****     *******************************************************************************/
 684:Generated_Source\PSoC4/PWM_0.c ****     void PWM_0_SetInterruptMode(uint8 interruptMode) 
 685:Generated_Source\PSoC4/PWM_0.c ****     {
 450              		.loc 1 685 0
 451              		.cfi_startproc
 452              		@ args = 0, pretend = 0, frame = 8
 453              		@ frame_needed = 1, uses_anonymous_args = 0
 454 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccEfiZI9.s 			page 21


 455              		.cfi_def_cfa_offset 8
 456              		.cfi_offset 7, -8
 457              		.cfi_offset 14, -4
 458 0002 82B0     		sub	sp, sp, #8
 459              		.cfi_def_cfa_offset 16
 460 0004 00AF     		add	r7, sp, #0
 461              		.cfi_def_cfa_register 7
 462 0006 0200     		movs	r2, r0
 463 0008 FB1D     		adds	r3, r7, #7
 464 000a 1A70     		strb	r2, [r3]
 686:Generated_Source\PSoC4/PWM_0.c ****         CY_SET_REG8(PWM_0_STATUS_MASK_PTR, interruptMode);
 465              		.loc 1 686 0
 466 000c 034A     		ldr	r2, .L31
 467 000e FB1D     		adds	r3, r7, #7
 468 0010 1B78     		ldrb	r3, [r3]
 469 0012 1370     		strb	r3, [r2]
 687:Generated_Source\PSoC4/PWM_0.c ****     }
 470              		.loc 1 687 0
 471 0014 C046     		nop
 472 0016 BD46     		mov	sp, r7
 473 0018 02B0     		add	sp, sp, #8
 474              		@ sp needed
 475 001a 80BD     		pop	{r7, pc}
 476              	.L32:
 477              		.align	2
 478              	.L31:
 479 001c 82000F40 		.word	1074724994
 480              		.cfi_endproc
 481              	.LFE9:
 482              		.size	PWM_0_SetInterruptMode, .-PWM_0_SetInterruptMode
 483              		.section	.text.PWM_0_ReadStatusRegister,"ax",%progbits
 484              		.align	2
 485              		.global	PWM_0_ReadStatusRegister
 486              		.code	16
 487              		.thumb_func
 488              		.type	PWM_0_ReadStatusRegister, %function
 489              	PWM_0_ReadStatusRegister:
 490              	.LFB10:
 688:Generated_Source\PSoC4/PWM_0.c **** 
 689:Generated_Source\PSoC4/PWM_0.c **** 
 690:Generated_Source\PSoC4/PWM_0.c ****     /*******************************************************************************
 691:Generated_Source\PSoC4/PWM_0.c ****     * Function Name: PWM_0_ReadStatusRegister
 692:Generated_Source\PSoC4/PWM_0.c ****     ********************************************************************************
 693:Generated_Source\PSoC4/PWM_0.c ****     *
 694:Generated_Source\PSoC4/PWM_0.c ****     * Summary:
 695:Generated_Source\PSoC4/PWM_0.c ****     *  This function returns the current state of the status register.
 696:Generated_Source\PSoC4/PWM_0.c ****     *
 697:Generated_Source\PSoC4/PWM_0.c ****     * Parameters:
 698:Generated_Source\PSoC4/PWM_0.c ****     *  None
 699:Generated_Source\PSoC4/PWM_0.c ****     *
 700:Generated_Source\PSoC4/PWM_0.c ****     * Return:
 701:Generated_Source\PSoC4/PWM_0.c ****     *  uint8 : Current status register value. The status register bits are:
 702:Generated_Source\PSoC4/PWM_0.c ****     *  [7:6] : Unused(0)
 703:Generated_Source\PSoC4/PWM_0.c ****     *  [5]   : Kill event output
 704:Generated_Source\PSoC4/PWM_0.c ****     *  [4]   : FIFO not empty
 705:Generated_Source\PSoC4/PWM_0.c ****     *  [3]   : FIFO full
 706:Generated_Source\PSoC4/PWM_0.c ****     *  [2]   : Terminal count
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccEfiZI9.s 			page 22


 707:Generated_Source\PSoC4/PWM_0.c ****     *  [1]   : Compare output 2
 708:Generated_Source\PSoC4/PWM_0.c ****     *  [0]   : Compare output 1
 709:Generated_Source\PSoC4/PWM_0.c ****     *
 710:Generated_Source\PSoC4/PWM_0.c ****     *******************************************************************************/
 711:Generated_Source\PSoC4/PWM_0.c ****     uint8 PWM_0_ReadStatusRegister(void) 
 712:Generated_Source\PSoC4/PWM_0.c ****     {
 491              		.loc 1 712 0
 492              		.cfi_startproc
 493              		@ args = 0, pretend = 0, frame = 0
 494              		@ frame_needed = 1, uses_anonymous_args = 0
 495 0000 80B5     		push	{r7, lr}
 496              		.cfi_def_cfa_offset 8
 497              		.cfi_offset 7, -8
 498              		.cfi_offset 14, -4
 499 0002 00AF     		add	r7, sp, #0
 500              		.cfi_def_cfa_register 7
 713:Generated_Source\PSoC4/PWM_0.c ****         return (CY_GET_REG8(PWM_0_STATUS_PTR));
 501              		.loc 1 713 0
 502 0004 024B     		ldr	r3, .L35
 503 0006 1B78     		ldrb	r3, [r3]
 504 0008 DBB2     		uxtb	r3, r3
 714:Generated_Source\PSoC4/PWM_0.c ****     }
 505              		.loc 1 714 0
 506 000a 1800     		movs	r0, r3
 507 000c BD46     		mov	sp, r7
 508              		@ sp needed
 509 000e 80BD     		pop	{r7, pc}
 510              	.L36:
 511              		.align	2
 512              	.L35:
 513 0010 62000F40 		.word	1074724962
 514              		.cfi_endproc
 515              	.LFE10:
 516              		.size	PWM_0_ReadStatusRegister, .-PWM_0_ReadStatusRegister
 517              		.section	.text.PWM_0_ReadControlRegister,"ax",%progbits
 518              		.align	2
 519              		.global	PWM_0_ReadControlRegister
 520              		.code	16
 521              		.thumb_func
 522              		.type	PWM_0_ReadControlRegister, %function
 523              	PWM_0_ReadControlRegister:
 524              	.LFB11:
 715:Generated_Source\PSoC4/PWM_0.c **** 
 716:Generated_Source\PSoC4/PWM_0.c **** #endif /* (PWM_0_UseStatus || PWM_0_UsingFixedFunction) */
 717:Generated_Source\PSoC4/PWM_0.c **** 
 718:Generated_Source\PSoC4/PWM_0.c **** 
 719:Generated_Source\PSoC4/PWM_0.c **** #if (PWM_0_UseControl)
 720:Generated_Source\PSoC4/PWM_0.c **** 
 721:Generated_Source\PSoC4/PWM_0.c **** 
 722:Generated_Source\PSoC4/PWM_0.c ****     /*******************************************************************************
 723:Generated_Source\PSoC4/PWM_0.c ****     * Function Name: PWM_0_ReadControlRegister
 724:Generated_Source\PSoC4/PWM_0.c ****     ********************************************************************************
 725:Generated_Source\PSoC4/PWM_0.c ****     *
 726:Generated_Source\PSoC4/PWM_0.c ****     * Summary:
 727:Generated_Source\PSoC4/PWM_0.c ****     *  Returns the current state of the control register. This API is available
 728:Generated_Source\PSoC4/PWM_0.c ****     *  only if the control register is not removed.
 729:Generated_Source\PSoC4/PWM_0.c ****     *
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccEfiZI9.s 			page 23


 730:Generated_Source\PSoC4/PWM_0.c ****     * Parameters:
 731:Generated_Source\PSoC4/PWM_0.c ****     *  None
 732:Generated_Source\PSoC4/PWM_0.c ****     *
 733:Generated_Source\PSoC4/PWM_0.c ****     * Return:
 734:Generated_Source\PSoC4/PWM_0.c ****     *  uint8 : Current control register value
 735:Generated_Source\PSoC4/PWM_0.c ****     *
 736:Generated_Source\PSoC4/PWM_0.c ****     *******************************************************************************/
 737:Generated_Source\PSoC4/PWM_0.c ****     uint8 PWM_0_ReadControlRegister(void) 
 738:Generated_Source\PSoC4/PWM_0.c ****     {
 525              		.loc 1 738 0
 526              		.cfi_startproc
 527              		@ args = 0, pretend = 0, frame = 8
 528              		@ frame_needed = 1, uses_anonymous_args = 0
 529 0000 80B5     		push	{r7, lr}
 530              		.cfi_def_cfa_offset 8
 531              		.cfi_offset 7, -8
 532              		.cfi_offset 14, -4
 533 0002 82B0     		sub	sp, sp, #8
 534              		.cfi_def_cfa_offset 16
 535 0004 00AF     		add	r7, sp, #0
 536              		.cfi_def_cfa_register 7
 739:Generated_Source\PSoC4/PWM_0.c ****         uint8 result;
 740:Generated_Source\PSoC4/PWM_0.c **** 
 741:Generated_Source\PSoC4/PWM_0.c ****         result = CY_GET_REG8(PWM_0_CONTROL_PTR);
 537              		.loc 1 741 0
 538 0006 054A     		ldr	r2, .L39
 539 0008 FB1D     		adds	r3, r7, #7
 540 000a 1278     		ldrb	r2, [r2]
 541 000c 1A70     		strb	r2, [r3]
 742:Generated_Source\PSoC4/PWM_0.c ****         return (result);
 542              		.loc 1 742 0
 543 000e FB1D     		adds	r3, r7, #7
 544 0010 1B78     		ldrb	r3, [r3]
 743:Generated_Source\PSoC4/PWM_0.c ****     }
 545              		.loc 1 743 0
 546 0012 1800     		movs	r0, r3
 547 0014 BD46     		mov	sp, r7
 548 0016 02B0     		add	sp, sp, #8
 549              		@ sp needed
 550 0018 80BD     		pop	{r7, pc}
 551              	.L40:
 552 001a C046     		.align	2
 553              	.L39:
 554 001c 72000F40 		.word	1074724978
 555              		.cfi_endproc
 556              	.LFE11:
 557              		.size	PWM_0_ReadControlRegister, .-PWM_0_ReadControlRegister
 558              		.section	.text.PWM_0_WriteControlRegister,"ax",%progbits
 559              		.align	2
 560              		.global	PWM_0_WriteControlRegister
 561              		.code	16
 562              		.thumb_func
 563              		.type	PWM_0_WriteControlRegister, %function
 564              	PWM_0_WriteControlRegister:
 565              	.LFB12:
 744:Generated_Source\PSoC4/PWM_0.c **** 
 745:Generated_Source\PSoC4/PWM_0.c **** 
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccEfiZI9.s 			page 24


 746:Generated_Source\PSoC4/PWM_0.c ****     /*******************************************************************************
 747:Generated_Source\PSoC4/PWM_0.c ****     * Function Name: PWM_0_WriteControlRegister
 748:Generated_Source\PSoC4/PWM_0.c ****     ********************************************************************************
 749:Generated_Source\PSoC4/PWM_0.c ****     *
 750:Generated_Source\PSoC4/PWM_0.c ****     * Summary:
 751:Generated_Source\PSoC4/PWM_0.c ****     *  Sets the bit field of the control register. This API is available only if
 752:Generated_Source\PSoC4/PWM_0.c ****     *  the control register is not removed.
 753:Generated_Source\PSoC4/PWM_0.c ****     *
 754:Generated_Source\PSoC4/PWM_0.c ****     * Parameters:
 755:Generated_Source\PSoC4/PWM_0.c ****     *  uint8 control: Control register bit field, The status register bits are:
 756:Generated_Source\PSoC4/PWM_0.c ****     *  [7]   : PWM Enable
 757:Generated_Source\PSoC4/PWM_0.c ****     *  [6]   : Reset
 758:Generated_Source\PSoC4/PWM_0.c ****     *  [5:3] : Compare Mode2
 759:Generated_Source\PSoC4/PWM_0.c ****     *  [2:0] : Compare Mode2
 760:Generated_Source\PSoC4/PWM_0.c ****     *
 761:Generated_Source\PSoC4/PWM_0.c ****     * Return:
 762:Generated_Source\PSoC4/PWM_0.c ****     *  None
 763:Generated_Source\PSoC4/PWM_0.c ****     *
 764:Generated_Source\PSoC4/PWM_0.c ****     *******************************************************************************/
 765:Generated_Source\PSoC4/PWM_0.c ****     void PWM_0_WriteControlRegister(uint8 control) 
 766:Generated_Source\PSoC4/PWM_0.c ****     {
 566              		.loc 1 766 0
 567              		.cfi_startproc
 568              		@ args = 0, pretend = 0, frame = 8
 569              		@ frame_needed = 1, uses_anonymous_args = 0
 570 0000 80B5     		push	{r7, lr}
 571              		.cfi_def_cfa_offset 8
 572              		.cfi_offset 7, -8
 573              		.cfi_offset 14, -4
 574 0002 82B0     		sub	sp, sp, #8
 575              		.cfi_def_cfa_offset 16
 576 0004 00AF     		add	r7, sp, #0
 577              		.cfi_def_cfa_register 7
 578 0006 0200     		movs	r2, r0
 579 0008 FB1D     		adds	r3, r7, #7
 580 000a 1A70     		strb	r2, [r3]
 767:Generated_Source\PSoC4/PWM_0.c ****         CY_SET_REG8(PWM_0_CONTROL_PTR, control);
 581              		.loc 1 767 0
 582 000c 034A     		ldr	r2, .L42
 583 000e FB1D     		adds	r3, r7, #7
 584 0010 1B78     		ldrb	r3, [r3]
 585 0012 1370     		strb	r3, [r2]
 768:Generated_Source\PSoC4/PWM_0.c ****     }
 586              		.loc 1 768 0
 587 0014 C046     		nop
 588 0016 BD46     		mov	sp, r7
 589 0018 02B0     		add	sp, sp, #8
 590              		@ sp needed
 591 001a 80BD     		pop	{r7, pc}
 592              	.L43:
 593              		.align	2
 594              	.L42:
 595 001c 72000F40 		.word	1074724978
 596              		.cfi_endproc
 597              	.LFE12:
 598              		.size	PWM_0_WriteControlRegister, .-PWM_0_WriteControlRegister
 599              		.section	.text.PWM_0_ReadCapture,"ax",%progbits
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccEfiZI9.s 			page 25


 600              		.align	2
 601              		.global	PWM_0_ReadCapture
 602              		.code	16
 603              		.thumb_func
 604              		.type	PWM_0_ReadCapture, %function
 605              	PWM_0_ReadCapture:
 606              	.LFB13:
 769:Generated_Source\PSoC4/PWM_0.c **** 
 770:Generated_Source\PSoC4/PWM_0.c **** #endif /* (PWM_0_UseControl) */
 771:Generated_Source\PSoC4/PWM_0.c **** 
 772:Generated_Source\PSoC4/PWM_0.c **** 
 773:Generated_Source\PSoC4/PWM_0.c **** #if (!PWM_0_UsingFixedFunction)
 774:Generated_Source\PSoC4/PWM_0.c **** 
 775:Generated_Source\PSoC4/PWM_0.c **** 
 776:Generated_Source\PSoC4/PWM_0.c ****     /*******************************************************************************
 777:Generated_Source\PSoC4/PWM_0.c ****     * Function Name: PWM_0_ReadCapture
 778:Generated_Source\PSoC4/PWM_0.c ****     ********************************************************************************
 779:Generated_Source\PSoC4/PWM_0.c ****     *
 780:Generated_Source\PSoC4/PWM_0.c ****     * Summary:
 781:Generated_Source\PSoC4/PWM_0.c ****     *  Reads the capture value from the capture FIFO.
 782:Generated_Source\PSoC4/PWM_0.c ****     *
 783:Generated_Source\PSoC4/PWM_0.c ****     * Parameters:
 784:Generated_Source\PSoC4/PWM_0.c ****     *  None
 785:Generated_Source\PSoC4/PWM_0.c ****     *
 786:Generated_Source\PSoC4/PWM_0.c ****     * Return:
 787:Generated_Source\PSoC4/PWM_0.c ****     *  uint8/uint16: The current capture value
 788:Generated_Source\PSoC4/PWM_0.c ****     *
 789:Generated_Source\PSoC4/PWM_0.c ****     *******************************************************************************/
 790:Generated_Source\PSoC4/PWM_0.c ****     uint8 PWM_0_ReadCapture(void) 
 791:Generated_Source\PSoC4/PWM_0.c ****     {
 607              		.loc 1 791 0
 608              		.cfi_startproc
 609              		@ args = 0, pretend = 0, frame = 0
 610              		@ frame_needed = 1, uses_anonymous_args = 0
 611 0000 80B5     		push	{r7, lr}
 612              		.cfi_def_cfa_offset 8
 613              		.cfi_offset 7, -8
 614              		.cfi_offset 14, -4
 615 0002 00AF     		add	r7, sp, #0
 616              		.cfi_def_cfa_register 7
 792:Generated_Source\PSoC4/PWM_0.c ****         return (CY_GET_REG8(PWM_0_CAPTURE_LSB_PTR));
 617              		.loc 1 792 0
 618 0004 024B     		ldr	r3, .L46
 619 0006 1B78     		ldrb	r3, [r3]
 620 0008 DBB2     		uxtb	r3, r3
 793:Generated_Source\PSoC4/PWM_0.c ****     }
 621              		.loc 1 793 0
 622 000a 1800     		movs	r0, r3
 623 000c BD46     		mov	sp, r7
 624              		@ sp needed
 625 000e 80BD     		pop	{r7, pc}
 626              	.L47:
 627              		.align	2
 628              	.L46:
 629 0010 52000F40 		.word	1074724946
 630              		.cfi_endproc
 631              	.LFE13:
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccEfiZI9.s 			page 26


 632              		.size	PWM_0_ReadCapture, .-PWM_0_ReadCapture
 633              		.section	.text.PWM_0_ReadCompare,"ax",%progbits
 634              		.align	2
 635              		.global	PWM_0_ReadCompare
 636              		.code	16
 637              		.thumb_func
 638              		.type	PWM_0_ReadCompare, %function
 639              	PWM_0_ReadCompare:
 640              	.LFB14:
 794:Generated_Source\PSoC4/PWM_0.c **** 
 795:Generated_Source\PSoC4/PWM_0.c **** #endif /* (!PWM_0_UsingFixedFunction) */
 796:Generated_Source\PSoC4/PWM_0.c **** 
 797:Generated_Source\PSoC4/PWM_0.c **** 
 798:Generated_Source\PSoC4/PWM_0.c **** #if (PWM_0_UseOneCompareMode)
 799:Generated_Source\PSoC4/PWM_0.c **** 
 800:Generated_Source\PSoC4/PWM_0.c **** 
 801:Generated_Source\PSoC4/PWM_0.c ****     /*******************************************************************************
 802:Generated_Source\PSoC4/PWM_0.c ****     * Function Name: PWM_0_ReadCompare
 803:Generated_Source\PSoC4/PWM_0.c ****     ********************************************************************************
 804:Generated_Source\PSoC4/PWM_0.c ****     *
 805:Generated_Source\PSoC4/PWM_0.c ****     * Summary:
 806:Generated_Source\PSoC4/PWM_0.c ****     *  Reads the compare value for the compare output when the PWM Mode parameter is
 807:Generated_Source\PSoC4/PWM_0.c ****     *  set to Dither mode, Center Aligned mode, or One Output mode.
 808:Generated_Source\PSoC4/PWM_0.c ****     *
 809:Generated_Source\PSoC4/PWM_0.c ****     * Parameters:
 810:Generated_Source\PSoC4/PWM_0.c ****     *  None
 811:Generated_Source\PSoC4/PWM_0.c ****     *
 812:Generated_Source\PSoC4/PWM_0.c ****     * Return:
 813:Generated_Source\PSoC4/PWM_0.c ****     *  uint8/uint16: Current compare value
 814:Generated_Source\PSoC4/PWM_0.c ****     *
 815:Generated_Source\PSoC4/PWM_0.c ****     *******************************************************************************/
 816:Generated_Source\PSoC4/PWM_0.c ****     uint8 PWM_0_ReadCompare(void) 
 817:Generated_Source\PSoC4/PWM_0.c ****     {
 641              		.loc 1 817 0
 642              		.cfi_startproc
 643              		@ args = 0, pretend = 0, frame = 0
 644              		@ frame_needed = 1, uses_anonymous_args = 0
 645 0000 80B5     		push	{r7, lr}
 646              		.cfi_def_cfa_offset 8
 647              		.cfi_offset 7, -8
 648              		.cfi_offset 14, -4
 649 0002 00AF     		add	r7, sp, #0
 650              		.cfi_def_cfa_register 7
 818:Generated_Source\PSoC4/PWM_0.c ****         #if(PWM_0_UsingFixedFunction)
 819:Generated_Source\PSoC4/PWM_0.c ****             return ((uint8)CY_GET_REG16(PWM_0_COMPARE1_LSB_PTR));
 820:Generated_Source\PSoC4/PWM_0.c ****         #else
 821:Generated_Source\PSoC4/PWM_0.c ****             return (CY_GET_REG8(PWM_0_COMPARE1_LSB_PTR));
 651              		.loc 1 821 0
 652 0004 024B     		ldr	r3, .L50
 653 0006 1B78     		ldrb	r3, [r3]
 654 0008 DBB2     		uxtb	r3, r3
 822:Generated_Source\PSoC4/PWM_0.c ****         #endif /* (PWM_0_UsingFixedFunction) */
 823:Generated_Source\PSoC4/PWM_0.c ****     }
 655              		.loc 1 823 0
 656 000a 1800     		movs	r0, r3
 657 000c BD46     		mov	sp, r7
 658              		@ sp needed
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccEfiZI9.s 			page 27


 659 000e 80BD     		pop	{r7, pc}
 660              	.L51:
 661              		.align	2
 662              	.L50:
 663 0010 22000F40 		.word	1074724898
 664              		.cfi_endproc
 665              	.LFE14:
 666              		.size	PWM_0_ReadCompare, .-PWM_0_ReadCompare
 667              		.section	.text.PWM_0_ReadPeriod,"ax",%progbits
 668              		.align	2
 669              		.global	PWM_0_ReadPeriod
 670              		.code	16
 671              		.thumb_func
 672              		.type	PWM_0_ReadPeriod, %function
 673              	PWM_0_ReadPeriod:
 674              	.LFB15:
 824:Generated_Source\PSoC4/PWM_0.c **** 
 825:Generated_Source\PSoC4/PWM_0.c **** #else
 826:Generated_Source\PSoC4/PWM_0.c **** 
 827:Generated_Source\PSoC4/PWM_0.c **** 
 828:Generated_Source\PSoC4/PWM_0.c ****     /*******************************************************************************
 829:Generated_Source\PSoC4/PWM_0.c ****     * Function Name: PWM_0_ReadCompare1
 830:Generated_Source\PSoC4/PWM_0.c ****     ********************************************************************************
 831:Generated_Source\PSoC4/PWM_0.c ****     *
 832:Generated_Source\PSoC4/PWM_0.c ****     * Summary:
 833:Generated_Source\PSoC4/PWM_0.c ****     *  Reads the compare value for the compare1 output.
 834:Generated_Source\PSoC4/PWM_0.c ****     *
 835:Generated_Source\PSoC4/PWM_0.c ****     * Parameters:
 836:Generated_Source\PSoC4/PWM_0.c ****     *  None
 837:Generated_Source\PSoC4/PWM_0.c ****     *
 838:Generated_Source\PSoC4/PWM_0.c ****     * Return:
 839:Generated_Source\PSoC4/PWM_0.c ****     *  uint8/uint16: Current compare value.
 840:Generated_Source\PSoC4/PWM_0.c ****     *
 841:Generated_Source\PSoC4/PWM_0.c ****     *******************************************************************************/
 842:Generated_Source\PSoC4/PWM_0.c ****     uint8 PWM_0_ReadCompare1(void) 
 843:Generated_Source\PSoC4/PWM_0.c ****     {
 844:Generated_Source\PSoC4/PWM_0.c ****         return (CY_GET_REG8(PWM_0_COMPARE1_LSB_PTR));
 845:Generated_Source\PSoC4/PWM_0.c ****     }
 846:Generated_Source\PSoC4/PWM_0.c **** 
 847:Generated_Source\PSoC4/PWM_0.c **** 
 848:Generated_Source\PSoC4/PWM_0.c ****     /*******************************************************************************
 849:Generated_Source\PSoC4/PWM_0.c ****     * Function Name: PWM_0_ReadCompare2
 850:Generated_Source\PSoC4/PWM_0.c ****     ********************************************************************************
 851:Generated_Source\PSoC4/PWM_0.c ****     *
 852:Generated_Source\PSoC4/PWM_0.c ****     * Summary:
 853:Generated_Source\PSoC4/PWM_0.c ****     *  Reads the compare value for the compare2 output.
 854:Generated_Source\PSoC4/PWM_0.c ****     *
 855:Generated_Source\PSoC4/PWM_0.c ****     * Parameters:
 856:Generated_Source\PSoC4/PWM_0.c ****     *  None
 857:Generated_Source\PSoC4/PWM_0.c ****     *
 858:Generated_Source\PSoC4/PWM_0.c ****     * Return:
 859:Generated_Source\PSoC4/PWM_0.c ****     *  uint8/uint16: Current compare value.
 860:Generated_Source\PSoC4/PWM_0.c ****     *
 861:Generated_Source\PSoC4/PWM_0.c ****     *******************************************************************************/
 862:Generated_Source\PSoC4/PWM_0.c ****     uint8 PWM_0_ReadCompare2(void) 
 863:Generated_Source\PSoC4/PWM_0.c ****     {
 864:Generated_Source\PSoC4/PWM_0.c ****         return (CY_GET_REG8(PWM_0_COMPARE2_LSB_PTR));
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccEfiZI9.s 			page 28


 865:Generated_Source\PSoC4/PWM_0.c ****     }
 866:Generated_Source\PSoC4/PWM_0.c **** 
 867:Generated_Source\PSoC4/PWM_0.c **** #endif /* (PWM_0_UseOneCompareMode) */
 868:Generated_Source\PSoC4/PWM_0.c **** 
 869:Generated_Source\PSoC4/PWM_0.c **** 
 870:Generated_Source\PSoC4/PWM_0.c **** /*******************************************************************************
 871:Generated_Source\PSoC4/PWM_0.c **** * Function Name: PWM_0_ReadPeriod
 872:Generated_Source\PSoC4/PWM_0.c **** ********************************************************************************
 873:Generated_Source\PSoC4/PWM_0.c **** *
 874:Generated_Source\PSoC4/PWM_0.c **** * Summary:
 875:Generated_Source\PSoC4/PWM_0.c **** *  Reads the period value used by the PWM hardware.
 876:Generated_Source\PSoC4/PWM_0.c **** *
 877:Generated_Source\PSoC4/PWM_0.c **** * Parameters:
 878:Generated_Source\PSoC4/PWM_0.c **** *  None
 879:Generated_Source\PSoC4/PWM_0.c **** *
 880:Generated_Source\PSoC4/PWM_0.c **** * Return:
 881:Generated_Source\PSoC4/PWM_0.c **** *  uint8/16: Period value
 882:Generated_Source\PSoC4/PWM_0.c **** *
 883:Generated_Source\PSoC4/PWM_0.c **** *******************************************************************************/
 884:Generated_Source\PSoC4/PWM_0.c **** uint8 PWM_0_ReadPeriod(void) 
 885:Generated_Source\PSoC4/PWM_0.c **** {
 675              		.loc 1 885 0
 676              		.cfi_startproc
 677              		@ args = 0, pretend = 0, frame = 0
 678              		@ frame_needed = 1, uses_anonymous_args = 0
 679 0000 80B5     		push	{r7, lr}
 680              		.cfi_def_cfa_offset 8
 681              		.cfi_offset 7, -8
 682              		.cfi_offset 14, -4
 683 0002 00AF     		add	r7, sp, #0
 684              		.cfi_def_cfa_register 7
 886:Generated_Source\PSoC4/PWM_0.c ****     #if(PWM_0_UsingFixedFunction)
 887:Generated_Source\PSoC4/PWM_0.c ****         return ((uint8)CY_GET_REG16(PWM_0_PERIOD_LSB_PTR));
 888:Generated_Source\PSoC4/PWM_0.c ****     #else
 889:Generated_Source\PSoC4/PWM_0.c ****         return (CY_GET_REG8(PWM_0_PERIOD_LSB_PTR));
 685              		.loc 1 889 0
 686 0004 024B     		ldr	r3, .L54
 687 0006 1B78     		ldrb	r3, [r3]
 688 0008 DBB2     		uxtb	r3, r3
 890:Generated_Source\PSoC4/PWM_0.c ****     #endif /* (PWM_0_UsingFixedFunction) */
 891:Generated_Source\PSoC4/PWM_0.c **** }
 689              		.loc 1 891 0
 690 000a 1800     		movs	r0, r3
 691 000c BD46     		mov	sp, r7
 692              		@ sp needed
 693 000e 80BD     		pop	{r7, pc}
 694              	.L55:
 695              		.align	2
 696              	.L54:
 697 0010 42000F40 		.word	1074724930
 698              		.cfi_endproc
 699              	.LFE15:
 700              		.size	PWM_0_ReadPeriod, .-PWM_0_ReadPeriod
 701              		.text
 702              	.Letext0:
 703              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 704              		.section	.debug_info,"",%progbits
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccEfiZI9.s 			page 29


 705              	.Ldebug_info0:
 706 0000 86020000 		.4byte	0x286
 707 0004 0400     		.2byte	0x4
 708 0006 00000000 		.4byte	.Ldebug_abbrev0
 709 000a 04       		.byte	0x4
 710 000b 01       		.uleb128 0x1
 711 000c C8010000 		.4byte	.LASF39
 712 0010 0C       		.byte	0xc
 713 0011 F0020000 		.4byte	.LASF40
 714 0015 57010000 		.4byte	.LASF41
 715 0019 00000000 		.4byte	.Ldebug_ranges0+0
 716 001d 00000000 		.4byte	0
 717 0021 00000000 		.4byte	.Ldebug_line0
 718 0025 02       		.uleb128 0x2
 719 0026 01       		.byte	0x1
 720 0027 06       		.byte	0x6
 721 0028 29030000 		.4byte	.LASF0
 722 002c 02       		.uleb128 0x2
 723 002d 01       		.byte	0x1
 724 002e 08       		.byte	0x8
 725 002f 3A010000 		.4byte	.LASF1
 726 0033 02       		.uleb128 0x2
 727 0034 02       		.byte	0x2
 728 0035 05       		.byte	0x5
 729 0036 CD020000 		.4byte	.LASF2
 730 003a 02       		.uleb128 0x2
 731 003b 02       		.byte	0x2
 732 003c 07       		.byte	0x7
 733 003d 73000000 		.4byte	.LASF3
 734 0041 02       		.uleb128 0x2
 735 0042 04       		.byte	0x4
 736 0043 05       		.byte	0x5
 737 0044 0F030000 		.4byte	.LASF4
 738 0048 02       		.uleb128 0x2
 739 0049 04       		.byte	0x4
 740 004a 07       		.byte	0x7
 741 004b F7000000 		.4byte	.LASF5
 742 004f 02       		.uleb128 0x2
 743 0050 08       		.byte	0x8
 744 0051 05       		.byte	0x5
 745 0052 8D020000 		.4byte	.LASF6
 746 0056 02       		.uleb128 0x2
 747 0057 08       		.byte	0x8
 748 0058 07       		.byte	0x7
 749 0059 56020000 		.4byte	.LASF7
 750 005d 03       		.uleb128 0x3
 751 005e 04       		.byte	0x4
 752 005f 05       		.byte	0x5
 753 0060 696E7400 		.ascii	"int\000"
 754 0064 02       		.uleb128 0x2
 755 0065 04       		.byte	0x4
 756 0066 07       		.byte	0x7
 757 0067 BB010000 		.4byte	.LASF8
 758 006b 04       		.uleb128 0x4
 759 006c 09010000 		.4byte	.LASF12
 760 0070 02       		.byte	0x2
 761 0071 E401     		.2byte	0x1e4
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccEfiZI9.s 			page 30


 762 0073 2C000000 		.4byte	0x2c
 763 0077 02       		.uleb128 0x2
 764 0078 04       		.byte	0x4
 765 0079 04       		.byte	0x4
 766 007a A9000000 		.4byte	.LASF9
 767 007e 02       		.uleb128 0x2
 768 007f 08       		.byte	0x8
 769 0080 04       		.byte	0x4
 770 0081 50010000 		.4byte	.LASF10
 771 0085 02       		.uleb128 0x2
 772 0086 01       		.byte	0x1
 773 0087 08       		.byte	0x8
 774 0088 18030000 		.4byte	.LASF11
 775 008c 04       		.uleb128 0x4
 776 008d E0000000 		.4byte	.LASF13
 777 0091 02       		.byte	0x2
 778 0092 8E02     		.2byte	0x28e
 779 0094 98000000 		.4byte	0x98
 780 0098 05       		.uleb128 0x5
 781 0099 6B000000 		.4byte	0x6b
 782 009d 02       		.uleb128 0x2
 783 009e 08       		.byte	0x8
 784 009f 04       		.byte	0x4
 785 00a0 1D030000 		.4byte	.LASF14
 786 00a4 02       		.uleb128 0x2
 787 00a5 04       		.byte	0x4
 788 00a6 07       		.byte	0x7
 789 00a7 84020000 		.4byte	.LASF15
 790 00ab 06       		.uleb128 0x6
 791 00ac AF000000 		.4byte	.LASF18
 792 00b0 01       		.byte	0x1
 793 00b1 37       		.byte	0x37
 794 00b2 00000000 		.4byte	.LFB0
 795 00b6 24000000 		.4byte	.LFE0-.LFB0
 796 00ba 01       		.uleb128 0x1
 797 00bb 9C       		.byte	0x9c
 798 00bc 07       		.uleb128 0x7
 799 00bd BB000000 		.4byte	.LASF21
 800 00c1 01       		.byte	0x1
 801 00c2 54       		.byte	0x54
 802 00c3 00000000 		.4byte	.LFB1
 803 00c7 84000000 		.4byte	.LFE1-.LFB1
 804 00cb 01       		.uleb128 0x1
 805 00cc 9C       		.byte	0x9c
 806 00cd EE000000 		.4byte	0xee
 807 00d1 08       		.uleb128 0x8
 808 00d2 7F020000 		.4byte	.LASF16
 809 00d6 01       		.byte	0x1
 810 00d7 57       		.byte	0x57
 811 00d8 6B000000 		.4byte	0x6b
 812 00dc 02       		.uleb128 0x2
 813 00dd 91       		.byte	0x91
 814 00de 6F       		.sleb128 -17
 815 00df 08       		.uleb128 0x8
 816 00e0 57000000 		.4byte	.LASF17
 817 00e4 01       		.byte	0x1
 818 00e5 5D       		.byte	0x5d
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccEfiZI9.s 			page 31


 819 00e6 6B000000 		.4byte	0x6b
 820 00ea 02       		.uleb128 0x2
 821 00eb 91       		.byte	0x91
 822 00ec 6E       		.sleb128 -18
 823 00ed 00       		.byte	0
 824 00ee 09       		.uleb128 0x9
 825 00ef 86000000 		.4byte	.LASF19
 826 00f3 01       		.byte	0x1
 827 00f4 C7       		.byte	0xc7
 828 00f5 00000000 		.4byte	.LFB2
 829 00f9 20000000 		.4byte	.LFE2-.LFB2
 830 00fd 01       		.uleb128 0x1
 831 00fe 9C       		.byte	0x9c
 832 00ff 09       		.uleb128 0x9
 833 0100 74020000 		.4byte	.LASF20
 834 0104 01       		.byte	0x1
 835 0105 E9       		.byte	0xe9
 836 0106 00000000 		.4byte	.LFB3
 837 010a 20000000 		.4byte	.LFE3-.LFB3
 838 010e 01       		.uleb128 0x1
 839 010f 9C       		.byte	0x9c
 840 0110 0A       		.uleb128 0xa
 841 0111 27010000 		.4byte	.LASF22
 842 0115 01       		.byte	0x1
 843 0116 9301     		.2byte	0x193
 844 0118 00000000 		.4byte	.LFB4
 845 011c 20000000 		.4byte	.LFE4-.LFB4
 846 0120 01       		.uleb128 0x1
 847 0121 9C       		.byte	0x9c
 848 0122 36010000 		.4byte	0x136
 849 0126 0B       		.uleb128 0xb
 850 0127 48010000 		.4byte	.LASF25
 851 012b 01       		.byte	0x1
 852 012c 9301     		.2byte	0x193
 853 012e 6B000000 		.4byte	0x6b
 854 0132 02       		.uleb128 0x2
 855 0133 91       		.byte	0x91
 856 0134 77       		.sleb128 -9
 857 0135 00       		.byte	0
 858 0136 0C       		.uleb128 0xc
 859 0137 2A000000 		.4byte	.LASF31
 860 013b 01       		.byte	0x1
 861 013c A901     		.2byte	0x1a9
 862 013e 6B000000 		.4byte	0x6b
 863 0142 00000000 		.4byte	.LFB5
 864 0146 1C000000 		.4byte	.LFE5-.LFB5
 865 014a 01       		.uleb128 0x1
 866 014b 9C       		.byte	0x9c
 867 014c 0D       		.uleb128 0xd
 868 014d 17010000 		.4byte	.LASF23
 869 0151 01       		.byte	0x1
 870 0152 C501     		.2byte	0x1c5
 871 0154 00000000 		.4byte	.LFB6
 872 0158 1E000000 		.4byte	.LFE6-.LFB6
 873 015c 01       		.uleb128 0x1
 874 015d 9C       		.byte	0x9c
 875 015e 0A       		.uleb128 0xa
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccEfiZI9.s 			page 32


 876 015f E5000000 		.4byte	.LASF24
 877 0163 01       		.byte	0x1
 878 0164 E201     		.2byte	0x1e2
 879 0166 00000000 		.4byte	.LFB7
 880 016a 20000000 		.4byte	.LFE7-.LFB7
 881 016e 01       		.uleb128 0x1
 882 016f 9C       		.byte	0x9c
 883 0170 84010000 		.4byte	0x184
 884 0174 0B       		.uleb128 0xb
 885 0175 6C000000 		.4byte	.LASF26
 886 0179 01       		.byte	0x1
 887 017a E201     		.2byte	0x1e2
 888 017c 6B000000 		.4byte	0x6b
 889 0180 02       		.uleb128 0x2
 890 0181 91       		.byte	0x91
 891 0182 77       		.sleb128 -9
 892 0183 00       		.byte	0
 893 0184 0A       		.uleb128 0xa
 894 0185 17000000 		.4byte	.LASF27
 895 0189 01       		.byte	0x1
 896 018a 0402     		.2byte	0x204
 897 018c 00000000 		.4byte	.LFB8
 898 0190 20000000 		.4byte	.LFE8-.LFB8
 899 0194 01       		.uleb128 0x1
 900 0195 9C       		.byte	0x9c
 901 0196 AA010000 		.4byte	0x1aa
 902 019a 0B       		.uleb128 0xb
 903 019b A1000000 		.4byte	.LASF28
 904 019f 01       		.byte	0x1
 905 01a0 0402     		.2byte	0x204
 906 01a2 6B000000 		.4byte	0x6b
 907 01a6 02       		.uleb128 0x2
 908 01a7 91       		.byte	0x91
 909 01a8 77       		.sleb128 -9
 910 01a9 00       		.byte	0
 911 01aa 0A       		.uleb128 0xa
 912 01ab 00000000 		.4byte	.LASF29
 913 01af 01       		.byte	0x1
 914 01b0 AC02     		.2byte	0x2ac
 915 01b2 00000000 		.4byte	.LFB9
 916 01b6 20000000 		.4byte	.LFE9-.LFB9
 917 01ba 01       		.uleb128 0x1
 918 01bb 9C       		.byte	0x9c
 919 01bc D0010000 		.4byte	0x1d0
 920 01c0 0B       		.uleb128 0xb
 921 01c1 AD020000 		.4byte	.LASF30
 922 01c5 01       		.byte	0x1
 923 01c6 AC02     		.2byte	0x2ac
 924 01c8 6B000000 		.4byte	0x6b
 925 01cc 02       		.uleb128 0x2
 926 01cd 91       		.byte	0x91
 927 01ce 77       		.sleb128 -9
 928 01cf 00       		.byte	0
 929 01d0 0C       		.uleb128 0xc
 930 01d1 D7020000 		.4byte	.LASF32
 931 01d5 01       		.byte	0x1
 932 01d6 C702     		.2byte	0x2c7
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccEfiZI9.s 			page 33


 933 01d8 6B000000 		.4byte	0x6b
 934 01dc 00000000 		.4byte	.LFB10
 935 01e0 14000000 		.4byte	.LFE10-.LFB10
 936 01e4 01       		.uleb128 0x1
 937 01e5 9C       		.byte	0x9c
 938 01e6 0E       		.uleb128 0xe
 939 01e7 C6000000 		.4byte	.LASF42
 940 01eb 01       		.byte	0x1
 941 01ec E102     		.2byte	0x2e1
 942 01ee 6B000000 		.4byte	0x6b
 943 01f2 00000000 		.4byte	.LFB11
 944 01f6 20000000 		.4byte	.LFE11-.LFB11
 945 01fa 01       		.uleb128 0x1
 946 01fb 9C       		.byte	0x9c
 947 01fc 10020000 		.4byte	0x210
 948 0200 0F       		.uleb128 0xf
 949 0201 6D020000 		.4byte	.LASF33
 950 0205 01       		.byte	0x1
 951 0206 E302     		.2byte	0x2e3
 952 0208 6B000000 		.4byte	0x6b
 953 020c 02       		.uleb128 0x2
 954 020d 91       		.byte	0x91
 955 020e 77       		.sleb128 -9
 956 020f 00       		.byte	0
 957 0210 0A       		.uleb128 0xa
 958 0211 3C000000 		.4byte	.LASF34
 959 0215 01       		.byte	0x1
 960 0216 FD02     		.2byte	0x2fd
 961 0218 00000000 		.4byte	.LFB12
 962 021c 20000000 		.4byte	.LFE12-.LFB12
 963 0220 01       		.uleb128 0x1
 964 0221 9C       		.byte	0x9c
 965 0222 36020000 		.4byte	0x236
 966 0226 0B       		.uleb128 0xb
 967 0227 0F010000 		.4byte	.LASF35
 968 022b 01       		.byte	0x1
 969 022c FD02     		.2byte	0x2fd
 970 022e 6B000000 		.4byte	0x6b
 971 0232 02       		.uleb128 0x2
 972 0233 91       		.byte	0x91
 973 0234 77       		.sleb128 -9
 974 0235 00       		.byte	0
 975 0236 0C       		.uleb128 0xc
 976 0237 BB020000 		.4byte	.LASF36
 977 023b 01       		.byte	0x1
 978 023c 1603     		.2byte	0x316
 979 023e 6B000000 		.4byte	0x6b
 980 0242 00000000 		.4byte	.LFB13
 981 0246 14000000 		.4byte	.LFE13-.LFB13
 982 024a 01       		.uleb128 0x1
 983 024b 9C       		.byte	0x9c
 984 024c 0C       		.uleb128 0xc
 985 024d 9B020000 		.4byte	.LASF37
 986 0251 01       		.byte	0x1
 987 0252 3003     		.2byte	0x330
 988 0254 6B000000 		.4byte	0x6b
 989 0258 00000000 		.4byte	.LFB14
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccEfiZI9.s 			page 34


 990 025c 14000000 		.4byte	.LFE14-.LFB14
 991 0260 01       		.uleb128 0x1
 992 0261 9C       		.byte	0x9c
 993 0262 0C       		.uleb128 0xc
 994 0263 35030000 		.4byte	.LASF38
 995 0267 01       		.byte	0x1
 996 0268 7403     		.2byte	0x374
 997 026a 6B000000 		.4byte	0x6b
 998 026e 00000000 		.4byte	.LFB15
 999 0272 14000000 		.4byte	.LFE15-.LFB15
 1000 0276 01       		.uleb128 0x1
 1001 0277 9C       		.byte	0x9c
 1002 0278 10       		.uleb128 0x10
 1003 0279 93000000 		.4byte	.LASF43
 1004 027d 01       		.byte	0x1
 1005 027e 20       		.byte	0x20
 1006 027f 6B000000 		.4byte	0x6b
 1007 0283 05       		.uleb128 0x5
 1008 0284 03       		.byte	0x3
 1009 0285 00000000 		.4byte	PWM_0_initVar
 1010 0289 00       		.byte	0
 1011              		.section	.debug_abbrev,"",%progbits
 1012              	.Ldebug_abbrev0:
 1013 0000 01       		.uleb128 0x1
 1014 0001 11       		.uleb128 0x11
 1015 0002 01       		.byte	0x1
 1016 0003 25       		.uleb128 0x25
 1017 0004 0E       		.uleb128 0xe
 1018 0005 13       		.uleb128 0x13
 1019 0006 0B       		.uleb128 0xb
 1020 0007 03       		.uleb128 0x3
 1021 0008 0E       		.uleb128 0xe
 1022 0009 1B       		.uleb128 0x1b
 1023 000a 0E       		.uleb128 0xe
 1024 000b 55       		.uleb128 0x55
 1025 000c 17       		.uleb128 0x17
 1026 000d 11       		.uleb128 0x11
 1027 000e 01       		.uleb128 0x1
 1028 000f 10       		.uleb128 0x10
 1029 0010 17       		.uleb128 0x17
 1030 0011 00       		.byte	0
 1031 0012 00       		.byte	0
 1032 0013 02       		.uleb128 0x2
 1033 0014 24       		.uleb128 0x24
 1034 0015 00       		.byte	0
 1035 0016 0B       		.uleb128 0xb
 1036 0017 0B       		.uleb128 0xb
 1037 0018 3E       		.uleb128 0x3e
 1038 0019 0B       		.uleb128 0xb
 1039 001a 03       		.uleb128 0x3
 1040 001b 0E       		.uleb128 0xe
 1041 001c 00       		.byte	0
 1042 001d 00       		.byte	0
 1043 001e 03       		.uleb128 0x3
 1044 001f 24       		.uleb128 0x24
 1045 0020 00       		.byte	0
 1046 0021 0B       		.uleb128 0xb
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccEfiZI9.s 			page 35


 1047 0022 0B       		.uleb128 0xb
 1048 0023 3E       		.uleb128 0x3e
 1049 0024 0B       		.uleb128 0xb
 1050 0025 03       		.uleb128 0x3
 1051 0026 08       		.uleb128 0x8
 1052 0027 00       		.byte	0
 1053 0028 00       		.byte	0
 1054 0029 04       		.uleb128 0x4
 1055 002a 16       		.uleb128 0x16
 1056 002b 00       		.byte	0
 1057 002c 03       		.uleb128 0x3
 1058 002d 0E       		.uleb128 0xe
 1059 002e 3A       		.uleb128 0x3a
 1060 002f 0B       		.uleb128 0xb
 1061 0030 3B       		.uleb128 0x3b
 1062 0031 05       		.uleb128 0x5
 1063 0032 49       		.uleb128 0x49
 1064 0033 13       		.uleb128 0x13
 1065 0034 00       		.byte	0
 1066 0035 00       		.byte	0
 1067 0036 05       		.uleb128 0x5
 1068 0037 35       		.uleb128 0x35
 1069 0038 00       		.byte	0
 1070 0039 49       		.uleb128 0x49
 1071 003a 13       		.uleb128 0x13
 1072 003b 00       		.byte	0
 1073 003c 00       		.byte	0
 1074 003d 06       		.uleb128 0x6
 1075 003e 2E       		.uleb128 0x2e
 1076 003f 00       		.byte	0
 1077 0040 3F       		.uleb128 0x3f
 1078 0041 19       		.uleb128 0x19
 1079 0042 03       		.uleb128 0x3
 1080 0043 0E       		.uleb128 0xe
 1081 0044 3A       		.uleb128 0x3a
 1082 0045 0B       		.uleb128 0xb
 1083 0046 3B       		.uleb128 0x3b
 1084 0047 0B       		.uleb128 0xb
 1085 0048 27       		.uleb128 0x27
 1086 0049 19       		.uleb128 0x19
 1087 004a 11       		.uleb128 0x11
 1088 004b 01       		.uleb128 0x1
 1089 004c 12       		.uleb128 0x12
 1090 004d 06       		.uleb128 0x6
 1091 004e 40       		.uleb128 0x40
 1092 004f 18       		.uleb128 0x18
 1093 0050 9642     		.uleb128 0x2116
 1094 0052 19       		.uleb128 0x19
 1095 0053 00       		.byte	0
 1096 0054 00       		.byte	0
 1097 0055 07       		.uleb128 0x7
 1098 0056 2E       		.uleb128 0x2e
 1099 0057 01       		.byte	0x1
 1100 0058 3F       		.uleb128 0x3f
 1101 0059 19       		.uleb128 0x19
 1102 005a 03       		.uleb128 0x3
 1103 005b 0E       		.uleb128 0xe
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccEfiZI9.s 			page 36


 1104 005c 3A       		.uleb128 0x3a
 1105 005d 0B       		.uleb128 0xb
 1106 005e 3B       		.uleb128 0x3b
 1107 005f 0B       		.uleb128 0xb
 1108 0060 27       		.uleb128 0x27
 1109 0061 19       		.uleb128 0x19
 1110 0062 11       		.uleb128 0x11
 1111 0063 01       		.uleb128 0x1
 1112 0064 12       		.uleb128 0x12
 1113 0065 06       		.uleb128 0x6
 1114 0066 40       		.uleb128 0x40
 1115 0067 18       		.uleb128 0x18
 1116 0068 9642     		.uleb128 0x2116
 1117 006a 19       		.uleb128 0x19
 1118 006b 01       		.uleb128 0x1
 1119 006c 13       		.uleb128 0x13
 1120 006d 00       		.byte	0
 1121 006e 00       		.byte	0
 1122 006f 08       		.uleb128 0x8
 1123 0070 34       		.uleb128 0x34
 1124 0071 00       		.byte	0
 1125 0072 03       		.uleb128 0x3
 1126 0073 0E       		.uleb128 0xe
 1127 0074 3A       		.uleb128 0x3a
 1128 0075 0B       		.uleb128 0xb
 1129 0076 3B       		.uleb128 0x3b
 1130 0077 0B       		.uleb128 0xb
 1131 0078 49       		.uleb128 0x49
 1132 0079 13       		.uleb128 0x13
 1133 007a 02       		.uleb128 0x2
 1134 007b 18       		.uleb128 0x18
 1135 007c 00       		.byte	0
 1136 007d 00       		.byte	0
 1137 007e 09       		.uleb128 0x9
 1138 007f 2E       		.uleb128 0x2e
 1139 0080 00       		.byte	0
 1140 0081 3F       		.uleb128 0x3f
 1141 0082 19       		.uleb128 0x19
 1142 0083 03       		.uleb128 0x3
 1143 0084 0E       		.uleb128 0xe
 1144 0085 3A       		.uleb128 0x3a
 1145 0086 0B       		.uleb128 0xb
 1146 0087 3B       		.uleb128 0x3b
 1147 0088 0B       		.uleb128 0xb
 1148 0089 27       		.uleb128 0x27
 1149 008a 19       		.uleb128 0x19
 1150 008b 11       		.uleb128 0x11
 1151 008c 01       		.uleb128 0x1
 1152 008d 12       		.uleb128 0x12
 1153 008e 06       		.uleb128 0x6
 1154 008f 40       		.uleb128 0x40
 1155 0090 18       		.uleb128 0x18
 1156 0091 9742     		.uleb128 0x2117
 1157 0093 19       		.uleb128 0x19
 1158 0094 00       		.byte	0
 1159 0095 00       		.byte	0
 1160 0096 0A       		.uleb128 0xa
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccEfiZI9.s 			page 37


 1161 0097 2E       		.uleb128 0x2e
 1162 0098 01       		.byte	0x1
 1163 0099 3F       		.uleb128 0x3f
 1164 009a 19       		.uleb128 0x19
 1165 009b 03       		.uleb128 0x3
 1166 009c 0E       		.uleb128 0xe
 1167 009d 3A       		.uleb128 0x3a
 1168 009e 0B       		.uleb128 0xb
 1169 009f 3B       		.uleb128 0x3b
 1170 00a0 05       		.uleb128 0x5
 1171 00a1 27       		.uleb128 0x27
 1172 00a2 19       		.uleb128 0x19
 1173 00a3 11       		.uleb128 0x11
 1174 00a4 01       		.uleb128 0x1
 1175 00a5 12       		.uleb128 0x12
 1176 00a6 06       		.uleb128 0x6
 1177 00a7 40       		.uleb128 0x40
 1178 00a8 18       		.uleb128 0x18
 1179 00a9 9742     		.uleb128 0x2117
 1180 00ab 19       		.uleb128 0x19
 1181 00ac 01       		.uleb128 0x1
 1182 00ad 13       		.uleb128 0x13
 1183 00ae 00       		.byte	0
 1184 00af 00       		.byte	0
 1185 00b0 0B       		.uleb128 0xb
 1186 00b1 05       		.uleb128 0x5
 1187 00b2 00       		.byte	0
 1188 00b3 03       		.uleb128 0x3
 1189 00b4 0E       		.uleb128 0xe
 1190 00b5 3A       		.uleb128 0x3a
 1191 00b6 0B       		.uleb128 0xb
 1192 00b7 3B       		.uleb128 0x3b
 1193 00b8 05       		.uleb128 0x5
 1194 00b9 49       		.uleb128 0x49
 1195 00ba 13       		.uleb128 0x13
 1196 00bb 02       		.uleb128 0x2
 1197 00bc 18       		.uleb128 0x18
 1198 00bd 00       		.byte	0
 1199 00be 00       		.byte	0
 1200 00bf 0C       		.uleb128 0xc
 1201 00c0 2E       		.uleb128 0x2e
 1202 00c1 00       		.byte	0
 1203 00c2 3F       		.uleb128 0x3f
 1204 00c3 19       		.uleb128 0x19
 1205 00c4 03       		.uleb128 0x3
 1206 00c5 0E       		.uleb128 0xe
 1207 00c6 3A       		.uleb128 0x3a
 1208 00c7 0B       		.uleb128 0xb
 1209 00c8 3B       		.uleb128 0x3b
 1210 00c9 05       		.uleb128 0x5
 1211 00ca 27       		.uleb128 0x27
 1212 00cb 19       		.uleb128 0x19
 1213 00cc 49       		.uleb128 0x49
 1214 00cd 13       		.uleb128 0x13
 1215 00ce 11       		.uleb128 0x11
 1216 00cf 01       		.uleb128 0x1
 1217 00d0 12       		.uleb128 0x12
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccEfiZI9.s 			page 38


 1218 00d1 06       		.uleb128 0x6
 1219 00d2 40       		.uleb128 0x40
 1220 00d3 18       		.uleb128 0x18
 1221 00d4 9742     		.uleb128 0x2117
 1222 00d6 19       		.uleb128 0x19
 1223 00d7 00       		.byte	0
 1224 00d8 00       		.byte	0
 1225 00d9 0D       		.uleb128 0xd
 1226 00da 2E       		.uleb128 0x2e
 1227 00db 00       		.byte	0
 1228 00dc 3F       		.uleb128 0x3f
 1229 00dd 19       		.uleb128 0x19
 1230 00de 03       		.uleb128 0x3
 1231 00df 0E       		.uleb128 0xe
 1232 00e0 3A       		.uleb128 0x3a
 1233 00e1 0B       		.uleb128 0xb
 1234 00e2 3B       		.uleb128 0x3b
 1235 00e3 05       		.uleb128 0x5
 1236 00e4 27       		.uleb128 0x27
 1237 00e5 19       		.uleb128 0x19
 1238 00e6 11       		.uleb128 0x11
 1239 00e7 01       		.uleb128 0x1
 1240 00e8 12       		.uleb128 0x12
 1241 00e9 06       		.uleb128 0x6
 1242 00ea 40       		.uleb128 0x40
 1243 00eb 18       		.uleb128 0x18
 1244 00ec 9642     		.uleb128 0x2116
 1245 00ee 19       		.uleb128 0x19
 1246 00ef 00       		.byte	0
 1247 00f0 00       		.byte	0
 1248 00f1 0E       		.uleb128 0xe
 1249 00f2 2E       		.uleb128 0x2e
 1250 00f3 01       		.byte	0x1
 1251 00f4 3F       		.uleb128 0x3f
 1252 00f5 19       		.uleb128 0x19
 1253 00f6 03       		.uleb128 0x3
 1254 00f7 0E       		.uleb128 0xe
 1255 00f8 3A       		.uleb128 0x3a
 1256 00f9 0B       		.uleb128 0xb
 1257 00fa 3B       		.uleb128 0x3b
 1258 00fb 05       		.uleb128 0x5
 1259 00fc 27       		.uleb128 0x27
 1260 00fd 19       		.uleb128 0x19
 1261 00fe 49       		.uleb128 0x49
 1262 00ff 13       		.uleb128 0x13
 1263 0100 11       		.uleb128 0x11
 1264 0101 01       		.uleb128 0x1
 1265 0102 12       		.uleb128 0x12
 1266 0103 06       		.uleb128 0x6
 1267 0104 40       		.uleb128 0x40
 1268 0105 18       		.uleb128 0x18
 1269 0106 9742     		.uleb128 0x2117
 1270 0108 19       		.uleb128 0x19
 1271 0109 01       		.uleb128 0x1
 1272 010a 13       		.uleb128 0x13
 1273 010b 00       		.byte	0
 1274 010c 00       		.byte	0
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccEfiZI9.s 			page 39


 1275 010d 0F       		.uleb128 0xf
 1276 010e 34       		.uleb128 0x34
 1277 010f 00       		.byte	0
 1278 0110 03       		.uleb128 0x3
 1279 0111 0E       		.uleb128 0xe
 1280 0112 3A       		.uleb128 0x3a
 1281 0113 0B       		.uleb128 0xb
 1282 0114 3B       		.uleb128 0x3b
 1283 0115 05       		.uleb128 0x5
 1284 0116 49       		.uleb128 0x49
 1285 0117 13       		.uleb128 0x13
 1286 0118 02       		.uleb128 0x2
 1287 0119 18       		.uleb128 0x18
 1288 011a 00       		.byte	0
 1289 011b 00       		.byte	0
 1290 011c 10       		.uleb128 0x10
 1291 011d 34       		.uleb128 0x34
 1292 011e 00       		.byte	0
 1293 011f 03       		.uleb128 0x3
 1294 0120 0E       		.uleb128 0xe
 1295 0121 3A       		.uleb128 0x3a
 1296 0122 0B       		.uleb128 0xb
 1297 0123 3B       		.uleb128 0x3b
 1298 0124 0B       		.uleb128 0xb
 1299 0125 49       		.uleb128 0x49
 1300 0126 13       		.uleb128 0x13
 1301 0127 3F       		.uleb128 0x3f
 1302 0128 19       		.uleb128 0x19
 1303 0129 02       		.uleb128 0x2
 1304 012a 18       		.uleb128 0x18
 1305 012b 00       		.byte	0
 1306 012c 00       		.byte	0
 1307 012d 00       		.byte	0
 1308              		.section	.debug_aranges,"",%progbits
 1309 0000 94000000 		.4byte	0x94
 1310 0004 0200     		.2byte	0x2
 1311 0006 00000000 		.4byte	.Ldebug_info0
 1312 000a 04       		.byte	0x4
 1313 000b 00       		.byte	0
 1314 000c 0000     		.2byte	0
 1315 000e 0000     		.2byte	0
 1316 0010 00000000 		.4byte	.LFB0
 1317 0014 24000000 		.4byte	.LFE0-.LFB0
 1318 0018 00000000 		.4byte	.LFB1
 1319 001c 84000000 		.4byte	.LFE1-.LFB1
 1320 0020 00000000 		.4byte	.LFB2
 1321 0024 20000000 		.4byte	.LFE2-.LFB2
 1322 0028 00000000 		.4byte	.LFB3
 1323 002c 20000000 		.4byte	.LFE3-.LFB3
 1324 0030 00000000 		.4byte	.LFB4
 1325 0034 20000000 		.4byte	.LFE4-.LFB4
 1326 0038 00000000 		.4byte	.LFB5
 1327 003c 1C000000 		.4byte	.LFE5-.LFB5
 1328 0040 00000000 		.4byte	.LFB6
 1329 0044 1E000000 		.4byte	.LFE6-.LFB6
 1330 0048 00000000 		.4byte	.LFB7
 1331 004c 20000000 		.4byte	.LFE7-.LFB7
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccEfiZI9.s 			page 40


 1332 0050 00000000 		.4byte	.LFB8
 1333 0054 20000000 		.4byte	.LFE8-.LFB8
 1334 0058 00000000 		.4byte	.LFB9
 1335 005c 20000000 		.4byte	.LFE9-.LFB9
 1336 0060 00000000 		.4byte	.LFB10
 1337 0064 14000000 		.4byte	.LFE10-.LFB10
 1338 0068 00000000 		.4byte	.LFB11
 1339 006c 20000000 		.4byte	.LFE11-.LFB11
 1340 0070 00000000 		.4byte	.LFB12
 1341 0074 20000000 		.4byte	.LFE12-.LFB12
 1342 0078 00000000 		.4byte	.LFB13
 1343 007c 14000000 		.4byte	.LFE13-.LFB13
 1344 0080 00000000 		.4byte	.LFB14
 1345 0084 14000000 		.4byte	.LFE14-.LFB14
 1346 0088 00000000 		.4byte	.LFB15
 1347 008c 14000000 		.4byte	.LFE15-.LFB15
 1348 0090 00000000 		.4byte	0
 1349 0094 00000000 		.4byte	0
 1350              		.section	.debug_ranges,"",%progbits
 1351              	.Ldebug_ranges0:
 1352 0000 00000000 		.4byte	.LFB0
 1353 0004 24000000 		.4byte	.LFE0
 1354 0008 00000000 		.4byte	.LFB1
 1355 000c 84000000 		.4byte	.LFE1
 1356 0010 00000000 		.4byte	.LFB2
 1357 0014 20000000 		.4byte	.LFE2
 1358 0018 00000000 		.4byte	.LFB3
 1359 001c 20000000 		.4byte	.LFE3
 1360 0020 00000000 		.4byte	.LFB4
 1361 0024 20000000 		.4byte	.LFE4
 1362 0028 00000000 		.4byte	.LFB5
 1363 002c 1C000000 		.4byte	.LFE5
 1364 0030 00000000 		.4byte	.LFB6
 1365 0034 1E000000 		.4byte	.LFE6
 1366 0038 00000000 		.4byte	.LFB7
 1367 003c 20000000 		.4byte	.LFE7
 1368 0040 00000000 		.4byte	.LFB8
 1369 0044 20000000 		.4byte	.LFE8
 1370 0048 00000000 		.4byte	.LFB9
 1371 004c 20000000 		.4byte	.LFE9
 1372 0050 00000000 		.4byte	.LFB10
 1373 0054 14000000 		.4byte	.LFE10
 1374 0058 00000000 		.4byte	.LFB11
 1375 005c 20000000 		.4byte	.LFE11
 1376 0060 00000000 		.4byte	.LFB12
 1377 0064 20000000 		.4byte	.LFE12
 1378 0068 00000000 		.4byte	.LFB13
 1379 006c 14000000 		.4byte	.LFE13
 1380 0070 00000000 		.4byte	.LFB14
 1381 0074 14000000 		.4byte	.LFE14
 1382 0078 00000000 		.4byte	.LFB15
 1383 007c 14000000 		.4byte	.LFE15
 1384 0080 00000000 		.4byte	0
 1385 0084 00000000 		.4byte	0
 1386              		.section	.debug_line,"",%progbits
 1387              	.Ldebug_line0:
 1388 0000 82010000 		.section	.debug_str,"MS",%progbits,1
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccEfiZI9.s 			page 41


 1388      02004200 
 1388      00000201 
 1388      FB0E0D00 
 1388      01010101 
 1389              	.LASF29:
 1390 0000 50574D5F 		.ascii	"PWM_0_SetInterruptMode\000"
 1390      305F5365 
 1390      74496E74 
 1390      65727275 
 1390      70744D6F 
 1391              	.LASF27:
 1392 0017 50574D5F 		.ascii	"PWM_0_WriteCompare\000"
 1392      305F5772 
 1392      69746543 
 1392      6F6D7061 
 1392      726500
 1393              	.LASF31:
 1394 002a 50574D5F 		.ascii	"PWM_0_ReadCounter\000"
 1394      305F5265 
 1394      6164436F 
 1394      756E7465 
 1394      7200
 1395              	.LASF34:
 1396 003c 50574D5F 		.ascii	"PWM_0_WriteControlRegister\000"
 1396      305F5772 
 1396      69746543 
 1396      6F6E7472 
 1396      6F6C5265 
 1397              	.LASF17:
 1398 0057 50574D5F 		.ascii	"PWM_0_interruptState\000"
 1398      305F696E 
 1398      74657272 
 1398      75707453 
 1398      74617465 
 1399              	.LASF26:
 1400 006c 70657269 		.ascii	"period\000"
 1400      6F6400
 1401              	.LASF3:
 1402 0073 73686F72 		.ascii	"short unsigned int\000"
 1402      7420756E 
 1402      7369676E 
 1402      65642069 
 1402      6E7400
 1403              	.LASF19:
 1404 0086 50574D5F 		.ascii	"PWM_0_Enable\000"
 1404      305F456E 
 1404      61626C65 
 1404      00
 1405              	.LASF43:
 1406 0093 50574D5F 		.ascii	"PWM_0_initVar\000"
 1406      305F696E 
 1406      69745661 
 1406      7200
 1407              	.LASF28:
 1408 00a1 636F6D70 		.ascii	"compare\000"
 1408      61726500 
 1409              	.LASF9:
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccEfiZI9.s 			page 42


 1410 00a9 666C6F61 		.ascii	"float\000"
 1410      7400
 1411              	.LASF18:
 1412 00af 50574D5F 		.ascii	"PWM_0_Start\000"
 1412      305F5374 
 1412      61727400 
 1413              	.LASF21:
 1414 00bb 50574D5F 		.ascii	"PWM_0_Init\000"
 1414      305F496E 
 1414      697400
 1415              	.LASF42:
 1416 00c6 50574D5F 		.ascii	"PWM_0_ReadControlRegister\000"
 1416      305F5265 
 1416      6164436F 
 1416      6E74726F 
 1416      6C526567 
 1417              	.LASF13:
 1418 00e0 72656738 		.ascii	"reg8\000"
 1418      00
 1419              	.LASF24:
 1420 00e5 50574D5F 		.ascii	"PWM_0_WritePeriod\000"
 1420      305F5772 
 1420      69746550 
 1420      6572696F 
 1420      6400
 1421              	.LASF5:
 1422 00f7 6C6F6E67 		.ascii	"long unsigned int\000"
 1422      20756E73 
 1422      69676E65 
 1422      6420696E 
 1422      7400
 1423              	.LASF12:
 1424 0109 75696E74 		.ascii	"uint8\000"
 1424      3800
 1425              	.LASF35:
 1426 010f 636F6E74 		.ascii	"control\000"
 1426      726F6C00 
 1427              	.LASF23:
 1428 0117 50574D5F 		.ascii	"PWM_0_ClearFIFO\000"
 1428      305F436C 
 1428      65617246 
 1428      49464F00 
 1429              	.LASF22:
 1430 0127 50574D5F 		.ascii	"PWM_0_WriteCounter\000"
 1430      305F5772 
 1430      69746543 
 1430      6F756E74 
 1430      657200
 1431              	.LASF1:
 1432 013a 756E7369 		.ascii	"unsigned char\000"
 1432      676E6564 
 1432      20636861 
 1432      7200
 1433              	.LASF25:
 1434 0148 636F756E 		.ascii	"counter\000"
 1434      74657200 
 1435              	.LASF10:
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccEfiZI9.s 			page 43


 1436 0150 646F7562 		.ascii	"double\000"
 1436      6C6500
 1437              	.LASF41:
 1438 0157 443A5C55 		.ascii	"D:\\Users\\jagumiel\\Documents\\PSoC Creator\\PSoC-"
 1438      73657273 
 1438      5C6A6167 
 1438      756D6965 
 1438      6C5C446F 
 1439 0185 3130315C 		.ascii	"101\\PSoC-101\\TrainingProjects\\Buttons-Leds-UART."
 1439      50536F43 
 1439      2D313031 
 1439      5C547261 
 1439      696E696E 
 1440 01b5 63796473 		.ascii	"cydsn\000"
 1440      6E00
 1441              	.LASF8:
 1442 01bb 756E7369 		.ascii	"unsigned int\000"
 1442      676E6564 
 1442      20696E74 
 1442      00
 1443              	.LASF39:
 1444 01c8 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1444      43313120 
 1444      352E342E 
 1444      31203230 
 1444      31363036 
 1445 01fb 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 1445      20726576 
 1445      6973696F 
 1445      6E203233 
 1445      37373135 
 1446 022e 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 1446      66756E63 
 1446      74696F6E 
 1446      2D736563 
 1446      74696F6E 
 1447              	.LASF7:
 1448 0256 6C6F6E67 		.ascii	"long long unsigned int\000"
 1448      206C6F6E 
 1448      6720756E 
 1448      7369676E 
 1448      65642069 
 1449              	.LASF33:
 1450 026d 72657375 		.ascii	"result\000"
 1450      6C7400
 1451              	.LASF20:
 1452 0274 50574D5F 		.ascii	"PWM_0_Stop\000"
 1452      305F5374 
 1452      6F7000
 1453              	.LASF16:
 1454 027f 6374726C 		.ascii	"ctrl\000"
 1454      00
 1455              	.LASF15:
 1456 0284 73697A65 		.ascii	"sizetype\000"
 1456      74797065 
 1456      00
 1457              	.LASF6:
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccEfiZI9.s 			page 44


 1458 028d 6C6F6E67 		.ascii	"long long int\000"
 1458      206C6F6E 
 1458      6720696E 
 1458      7400
 1459              	.LASF37:
 1460 029b 50574D5F 		.ascii	"PWM_0_ReadCompare\000"
 1460      305F5265 
 1460      6164436F 
 1460      6D706172 
 1460      6500
 1461              	.LASF30:
 1462 02ad 696E7465 		.ascii	"interruptMode\000"
 1462      72727570 
 1462      744D6F64 
 1462      6500
 1463              	.LASF36:
 1464 02bb 50574D5F 		.ascii	"PWM_0_ReadCapture\000"
 1464      305F5265 
 1464      61644361 
 1464      70747572 
 1464      6500
 1465              	.LASF2:
 1466 02cd 73686F72 		.ascii	"short int\000"
 1466      7420696E 
 1466      7400
 1467              	.LASF32:
 1468 02d7 50574D5F 		.ascii	"PWM_0_ReadStatusRegister\000"
 1468      305F5265 
 1468      61645374 
 1468      61747573 
 1468      52656769 
 1469              	.LASF40:
 1470 02f0 47656E65 		.ascii	"Generated_Source\\PSoC4\\PWM_0.c\000"
 1470      72617465 
 1470      645F536F 
 1470      75726365 
 1470      5C50536F 
 1471              	.LASF4:
 1472 030f 6C6F6E67 		.ascii	"long int\000"
 1472      20696E74 
 1472      00
 1473              	.LASF11:
 1474 0318 63686172 		.ascii	"char\000"
 1474      00
 1475              	.LASF14:
 1476 031d 6C6F6E67 		.ascii	"long double\000"
 1476      20646F75 
 1476      626C6500 
 1477              	.LASF0:
 1478 0329 7369676E 		.ascii	"signed char\000"
 1478      65642063 
 1478      68617200 
 1479              	.LASF38:
 1480 0335 50574D5F 		.ascii	"PWM_0_ReadPeriod\000"
 1480      305F5265 
 1480      61645065 
 1480      72696F64 
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccEfiZI9.s 			page 45


 1480      00
 1481              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
