ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccv2rUUu.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"UART.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	UART_initVar
  20              		.bss
  21              		.type	UART_initVar, %object
  22              		.size	UART_initVar, 1
  23              	UART_initVar:
  24 0000 00       		.space	1
  25              		.global	UART_IntrTxMask
  26 0001 00       		.align	1
  27              		.type	UART_IntrTxMask, %object
  28              		.size	UART_IntrTxMask, 2
  29              	UART_IntrTxMask:
  30 0002 0000     		.space	2
  31              		.section	.text.UART_Init,"ax",%progbits
  32              		.align	2
  33              		.global	UART_Init
  34              		.code	16
  35              		.thumb_func
  36              		.type	UART_Init, %function
  37              	UART_Init:
  38              	.LFB0:
  39              		.file 1 "Generated_Source\\PSoC4\\UART.c"
   1:Generated_Source\PSoC4/UART.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/UART.c **** * \file UART.c
   3:Generated_Source\PSoC4/UART.c **** * \version 4.0
   4:Generated_Source\PSoC4/UART.c **** *
   5:Generated_Source\PSoC4/UART.c **** * \brief
   6:Generated_Source\PSoC4/UART.c **** *  This file provides the source code to the API for the SCB Component.
   7:Generated_Source\PSoC4/UART.c **** *
   8:Generated_Source\PSoC4/UART.c **** * Note:
   9:Generated_Source\PSoC4/UART.c **** *
  10:Generated_Source\PSoC4/UART.c **** *******************************************************************************
  11:Generated_Source\PSoC4/UART.c **** * \copyright
  12:Generated_Source\PSoC4/UART.c **** * Copyright 2013-2017, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC4/UART.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC4/UART.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC4/UART.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC4/UART.c **** *******************************************************************************/
  17:Generated_Source\PSoC4/UART.c **** 
  18:Generated_Source\PSoC4/UART.c **** #include "UART_PVT.h"
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccv2rUUu.s 			page 2


  19:Generated_Source\PSoC4/UART.c **** 
  20:Generated_Source\PSoC4/UART.c **** #if (UART_SCB_MODE_I2C_INC)
  21:Generated_Source\PSoC4/UART.c ****     #include "UART_I2C_PVT.h"
  22:Generated_Source\PSoC4/UART.c **** #endif /* (UART_SCB_MODE_I2C_INC) */
  23:Generated_Source\PSoC4/UART.c **** 
  24:Generated_Source\PSoC4/UART.c **** #if (UART_SCB_MODE_EZI2C_INC)
  25:Generated_Source\PSoC4/UART.c ****     #include "UART_EZI2C_PVT.h"
  26:Generated_Source\PSoC4/UART.c **** #endif /* (UART_SCB_MODE_EZI2C_INC) */
  27:Generated_Source\PSoC4/UART.c **** 
  28:Generated_Source\PSoC4/UART.c **** #if (UART_SCB_MODE_SPI_INC || UART_SCB_MODE_UART_INC)
  29:Generated_Source\PSoC4/UART.c ****     #include "UART_SPI_UART_PVT.h"
  30:Generated_Source\PSoC4/UART.c **** #endif /* (UART_SCB_MODE_SPI_INC || UART_SCB_MODE_UART_INC) */
  31:Generated_Source\PSoC4/UART.c **** 
  32:Generated_Source\PSoC4/UART.c **** 
  33:Generated_Source\PSoC4/UART.c **** /***************************************
  34:Generated_Source\PSoC4/UART.c **** *    Run Time Configuration Vars
  35:Generated_Source\PSoC4/UART.c **** ***************************************/
  36:Generated_Source\PSoC4/UART.c **** 
  37:Generated_Source\PSoC4/UART.c **** /* Stores internal component configuration for Unconfigured mode */
  38:Generated_Source\PSoC4/UART.c **** #if (UART_SCB_MODE_UNCONFIG_CONST_CFG)
  39:Generated_Source\PSoC4/UART.c ****     /* Common configuration variables */
  40:Generated_Source\PSoC4/UART.c ****     uint8 UART_scbMode = UART_SCB_MODE_UNCONFIG;
  41:Generated_Source\PSoC4/UART.c ****     uint8 UART_scbEnableWake;
  42:Generated_Source\PSoC4/UART.c ****     uint8 UART_scbEnableIntr;
  43:Generated_Source\PSoC4/UART.c **** 
  44:Generated_Source\PSoC4/UART.c ****     /* I2C configuration variables */
  45:Generated_Source\PSoC4/UART.c ****     uint8 UART_mode;
  46:Generated_Source\PSoC4/UART.c ****     uint8 UART_acceptAddr;
  47:Generated_Source\PSoC4/UART.c **** 
  48:Generated_Source\PSoC4/UART.c ****     /* SPI/UART configuration variables */
  49:Generated_Source\PSoC4/UART.c ****     volatile uint8 * UART_rxBuffer;
  50:Generated_Source\PSoC4/UART.c ****     uint8  UART_rxDataBits;
  51:Generated_Source\PSoC4/UART.c ****     uint32 UART_rxBufferSize;
  52:Generated_Source\PSoC4/UART.c **** 
  53:Generated_Source\PSoC4/UART.c ****     volatile uint8 * UART_txBuffer;
  54:Generated_Source\PSoC4/UART.c ****     uint8  UART_txDataBits;
  55:Generated_Source\PSoC4/UART.c ****     uint32 UART_txBufferSize;
  56:Generated_Source\PSoC4/UART.c **** 
  57:Generated_Source\PSoC4/UART.c ****     /* EZI2C configuration variables */
  58:Generated_Source\PSoC4/UART.c ****     uint8 UART_numberOfAddr;
  59:Generated_Source\PSoC4/UART.c ****     uint8 UART_subAddrSize;
  60:Generated_Source\PSoC4/UART.c **** #endif /* (UART_SCB_MODE_UNCONFIG_CONST_CFG) */
  61:Generated_Source\PSoC4/UART.c **** 
  62:Generated_Source\PSoC4/UART.c **** 
  63:Generated_Source\PSoC4/UART.c **** /***************************************
  64:Generated_Source\PSoC4/UART.c **** *     Common SCB Vars
  65:Generated_Source\PSoC4/UART.c **** ***************************************/
  66:Generated_Source\PSoC4/UART.c **** /**
  67:Generated_Source\PSoC4/UART.c **** * \addtogroup group_general
  68:Generated_Source\PSoC4/UART.c **** * \{
  69:Generated_Source\PSoC4/UART.c **** */
  70:Generated_Source\PSoC4/UART.c **** 
  71:Generated_Source\PSoC4/UART.c **** /** UART_initVar indicates whether the UART 
  72:Generated_Source\PSoC4/UART.c **** *  component has been initialized. The variable is initialized to 0 
  73:Generated_Source\PSoC4/UART.c **** *  and set to 1 the first time SCB_Start() is called. This allows 
  74:Generated_Source\PSoC4/UART.c **** *  the component to restart without reinitialization after the first 
  75:Generated_Source\PSoC4/UART.c **** *  call to the UART_Start() routine.
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccv2rUUu.s 			page 3


  76:Generated_Source\PSoC4/UART.c **** *
  77:Generated_Source\PSoC4/UART.c **** *  If re-initialization of the component is required, then the 
  78:Generated_Source\PSoC4/UART.c **** *  UART_Init() function can be called before the 
  79:Generated_Source\PSoC4/UART.c **** *  UART_Start() or UART_Enable() function.
  80:Generated_Source\PSoC4/UART.c **** */
  81:Generated_Source\PSoC4/UART.c **** uint8 UART_initVar = 0u;
  82:Generated_Source\PSoC4/UART.c **** 
  83:Generated_Source\PSoC4/UART.c **** 
  84:Generated_Source\PSoC4/UART.c **** #if (! (UART_SCB_MODE_I2C_CONST_CFG || \
  85:Generated_Source\PSoC4/UART.c ****         UART_SCB_MODE_EZI2C_CONST_CFG))
  86:Generated_Source\PSoC4/UART.c ****     /** This global variable stores TX interrupt sources after 
  87:Generated_Source\PSoC4/UART.c ****     * UART_Stop() is called. Only these TX interrupt sources 
  88:Generated_Source\PSoC4/UART.c ****     * will be restored on a subsequent UART_Enable() call.
  89:Generated_Source\PSoC4/UART.c ****     */
  90:Generated_Source\PSoC4/UART.c ****     uint16 UART_IntrTxMask = 0u;
  91:Generated_Source\PSoC4/UART.c **** #endif /* (! (UART_SCB_MODE_I2C_CONST_CFG || \
  92:Generated_Source\PSoC4/UART.c ****               UART_SCB_MODE_EZI2C_CONST_CFG)) */
  93:Generated_Source\PSoC4/UART.c **** /** \} globals */
  94:Generated_Source\PSoC4/UART.c **** 
  95:Generated_Source\PSoC4/UART.c **** #if (UART_SCB_IRQ_INTERNAL)
  96:Generated_Source\PSoC4/UART.c **** #if !defined (CY_REMOVE_UART_CUSTOM_INTR_HANDLER)
  97:Generated_Source\PSoC4/UART.c ****     void (*UART_customIntrHandler)(void) = NULL;
  98:Generated_Source\PSoC4/UART.c **** #endif /* !defined (CY_REMOVE_UART_CUSTOM_INTR_HANDLER) */
  99:Generated_Source\PSoC4/UART.c **** #endif /* (UART_SCB_IRQ_INTERNAL) */
 100:Generated_Source\PSoC4/UART.c **** 
 101:Generated_Source\PSoC4/UART.c **** 
 102:Generated_Source\PSoC4/UART.c **** /***************************************
 103:Generated_Source\PSoC4/UART.c **** *    Private Function Prototypes
 104:Generated_Source\PSoC4/UART.c **** ***************************************/
 105:Generated_Source\PSoC4/UART.c **** 
 106:Generated_Source\PSoC4/UART.c **** static void UART_ScbEnableIntr(void);
 107:Generated_Source\PSoC4/UART.c **** static void UART_ScbModeStop(void);
 108:Generated_Source\PSoC4/UART.c **** static void UART_ScbModePostEnable(void);
 109:Generated_Source\PSoC4/UART.c **** 
 110:Generated_Source\PSoC4/UART.c **** 
 111:Generated_Source\PSoC4/UART.c **** /*******************************************************************************
 112:Generated_Source\PSoC4/UART.c **** * Function Name: UART_Init
 113:Generated_Source\PSoC4/UART.c **** ****************************************************************************//**
 114:Generated_Source\PSoC4/UART.c **** *
 115:Generated_Source\PSoC4/UART.c **** *  Initializes the UART component to operate in one of the selected
 116:Generated_Source\PSoC4/UART.c **** *  configurations: I2C, SPI, UART or EZI2C.
 117:Generated_Source\PSoC4/UART.c **** *  When the configuration is set to "Unconfigured SCB", this function does
 118:Generated_Source\PSoC4/UART.c **** *  not do any initialization. Use mode-specific initialization APIs instead:
 119:Generated_Source\PSoC4/UART.c **** *  UART_I2CInit, UART_SpiInit, 
 120:Generated_Source\PSoC4/UART.c **** *  UART_UartInit or UART_EzI2CInit.
 121:Generated_Source\PSoC4/UART.c **** *
 122:Generated_Source\PSoC4/UART.c **** *******************************************************************************/
 123:Generated_Source\PSoC4/UART.c **** void UART_Init(void)
 124:Generated_Source\PSoC4/UART.c **** {
  40              		.loc 1 124 0
  41              		.cfi_startproc
  42              		@ args = 0, pretend = 0, frame = 0
  43              		@ frame_needed = 1, uses_anonymous_args = 0
  44 0000 80B5     		push	{r7, lr}
  45              		.cfi_def_cfa_offset 8
  46              		.cfi_offset 7, -8
  47              		.cfi_offset 14, -4
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccv2rUUu.s 			page 4


  48 0002 00AF     		add	r7, sp, #0
  49              		.cfi_def_cfa_register 7
 125:Generated_Source\PSoC4/UART.c **** #if (UART_SCB_MODE_UNCONFIG_CONST_CFG)
 126:Generated_Source\PSoC4/UART.c ****     if (UART_SCB_MODE_UNCONFIG_RUNTM_CFG)
 127:Generated_Source\PSoC4/UART.c ****     {
 128:Generated_Source\PSoC4/UART.c ****         UART_initVar = 0u;
 129:Generated_Source\PSoC4/UART.c ****     }
 130:Generated_Source\PSoC4/UART.c ****     else
 131:Generated_Source\PSoC4/UART.c ****     {
 132:Generated_Source\PSoC4/UART.c ****         /* Initialization was done before this function call */
 133:Generated_Source\PSoC4/UART.c ****     }
 134:Generated_Source\PSoC4/UART.c **** 
 135:Generated_Source\PSoC4/UART.c **** #elif (UART_SCB_MODE_I2C_CONST_CFG)
 136:Generated_Source\PSoC4/UART.c ****     UART_I2CInit();
 137:Generated_Source\PSoC4/UART.c **** 
 138:Generated_Source\PSoC4/UART.c **** #elif (UART_SCB_MODE_SPI_CONST_CFG)
 139:Generated_Source\PSoC4/UART.c ****     UART_SpiInit();
 140:Generated_Source\PSoC4/UART.c **** 
 141:Generated_Source\PSoC4/UART.c **** #elif (UART_SCB_MODE_UART_CONST_CFG)
 142:Generated_Source\PSoC4/UART.c ****     UART_UartInit();
  50              		.loc 1 142 0
  51 0004 FFF7FEFF 		bl	UART_UartInit
 143:Generated_Source\PSoC4/UART.c **** 
 144:Generated_Source\PSoC4/UART.c **** #elif (UART_SCB_MODE_EZI2C_CONST_CFG)
 145:Generated_Source\PSoC4/UART.c ****     UART_EzI2CInit();
 146:Generated_Source\PSoC4/UART.c **** 
 147:Generated_Source\PSoC4/UART.c **** #endif /* (UART_SCB_MODE_UNCONFIG_CONST_CFG) */
 148:Generated_Source\PSoC4/UART.c **** }
  52              		.loc 1 148 0
  53 0008 C046     		nop
  54 000a BD46     		mov	sp, r7
  55              		@ sp needed
  56 000c 80BD     		pop	{r7, pc}
  57              		.cfi_endproc
  58              	.LFE0:
  59              		.size	UART_Init, .-UART_Init
  60 000e C046     		.section	.text.UART_Enable,"ax",%progbits
  61              		.align	2
  62              		.global	UART_Enable
  63              		.code	16
  64              		.thumb_func
  65              		.type	UART_Enable, %function
  66              	UART_Enable:
  67              	.LFB1:
 149:Generated_Source\PSoC4/UART.c **** 
 150:Generated_Source\PSoC4/UART.c **** 
 151:Generated_Source\PSoC4/UART.c **** /*******************************************************************************
 152:Generated_Source\PSoC4/UART.c **** * Function Name: UART_Enable
 153:Generated_Source\PSoC4/UART.c **** ****************************************************************************//**
 154:Generated_Source\PSoC4/UART.c **** *
 155:Generated_Source\PSoC4/UART.c **** *  Enables UART component operation: activates the hardware and 
 156:Generated_Source\PSoC4/UART.c **** *  internal interrupt. It also restores TX interrupt sources disabled after the 
 157:Generated_Source\PSoC4/UART.c **** *  UART_Stop() function was called (note that level-triggered TX 
 158:Generated_Source\PSoC4/UART.c **** *  interrupt sources remain disabled to not cause code lock-up).
 159:Generated_Source\PSoC4/UART.c **** *  For I2C and EZI2C modes the interrupt is internal and mandatory for 
 160:Generated_Source\PSoC4/UART.c **** *  operation. For SPI and UART modes the interrupt can be configured as none, 
 161:Generated_Source\PSoC4/UART.c **** *  internal or external.
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccv2rUUu.s 			page 5


 162:Generated_Source\PSoC4/UART.c **** *  The UART configuration should be not changed when the component
 163:Generated_Source\PSoC4/UART.c **** *  is enabled. Any configuration changes should be made after disabling the 
 164:Generated_Source\PSoC4/UART.c **** *  component.
 165:Generated_Source\PSoC4/UART.c **** *  When configuration is set to “Unconfigured UART”, the component 
 166:Generated_Source\PSoC4/UART.c **** *  must first be initialized to operate in one of the following configurations: 
 167:Generated_Source\PSoC4/UART.c **** *  I2C, SPI, UART or EZ I2C, using the mode-specific initialization API. 
 168:Generated_Source\PSoC4/UART.c **** *  Otherwise this function does not enable the component.
 169:Generated_Source\PSoC4/UART.c **** *
 170:Generated_Source\PSoC4/UART.c **** *******************************************************************************/
 171:Generated_Source\PSoC4/UART.c **** void UART_Enable(void)
 172:Generated_Source\PSoC4/UART.c **** {
  68              		.loc 1 172 0
  69              		.cfi_startproc
  70              		@ args = 0, pretend = 0, frame = 0
  71              		@ frame_needed = 1, uses_anonymous_args = 0
  72 0000 80B5     		push	{r7, lr}
  73              		.cfi_def_cfa_offset 8
  74              		.cfi_offset 7, -8
  75              		.cfi_offset 14, -4
  76 0002 00AF     		add	r7, sp, #0
  77              		.cfi_def_cfa_register 7
 173:Generated_Source\PSoC4/UART.c **** #if (UART_SCB_MODE_UNCONFIG_CONST_CFG)
 174:Generated_Source\PSoC4/UART.c ****     /* Enable SCB block, only if it is already configured */
 175:Generated_Source\PSoC4/UART.c ****     if (!UART_SCB_MODE_UNCONFIG_RUNTM_CFG)
 176:Generated_Source\PSoC4/UART.c ****     {
 177:Generated_Source\PSoC4/UART.c ****         UART_CTRL_REG |= UART_CTRL_ENABLED;
 178:Generated_Source\PSoC4/UART.c **** 
 179:Generated_Source\PSoC4/UART.c ****         UART_ScbEnableIntr();
 180:Generated_Source\PSoC4/UART.c **** 
 181:Generated_Source\PSoC4/UART.c ****         /* Call PostEnable function specific to current operation mode */
 182:Generated_Source\PSoC4/UART.c ****         UART_ScbModePostEnable();
 183:Generated_Source\PSoC4/UART.c ****     }
 184:Generated_Source\PSoC4/UART.c **** #else
 185:Generated_Source\PSoC4/UART.c ****     UART_CTRL_REG |= UART_CTRL_ENABLED;
  78              		.loc 1 185 0
  79 0004 064B     		ldr	r3, .L3
  80 0006 064A     		ldr	r2, .L3
  81 0008 1268     		ldr	r2, [r2]
  82 000a 8021     		movs	r1, #128
  83 000c 0906     		lsls	r1, r1, #24
  84 000e 0A43     		orrs	r2, r1
  85 0010 1A60     		str	r2, [r3]
 186:Generated_Source\PSoC4/UART.c **** 
 187:Generated_Source\PSoC4/UART.c ****     UART_ScbEnableIntr();
  86              		.loc 1 187 0
  87 0012 FFF7FEFF 		bl	UART_ScbEnableIntr
 188:Generated_Source\PSoC4/UART.c **** 
 189:Generated_Source\PSoC4/UART.c ****     /* Call PostEnable function specific to current operation mode */
 190:Generated_Source\PSoC4/UART.c ****     UART_ScbModePostEnable();
  88              		.loc 1 190 0
  89 0016 FFF7FEFF 		bl	UART_ScbModePostEnable
 191:Generated_Source\PSoC4/UART.c **** #endif /* (UART_SCB_MODE_UNCONFIG_CONST_CFG) */
 192:Generated_Source\PSoC4/UART.c **** }
  90              		.loc 1 192 0
  91 001a C046     		nop
  92 001c BD46     		mov	sp, r7
  93              		@ sp needed
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccv2rUUu.s 			page 6


  94 001e 80BD     		pop	{r7, pc}
  95              	.L4:
  96              		.align	2
  97              	.L3:
  98 0020 00000640 		.word	1074135040
  99              		.cfi_endproc
 100              	.LFE1:
 101              		.size	UART_Enable, .-UART_Enable
 102              		.section	.text.UART_Start,"ax",%progbits
 103              		.align	2
 104              		.global	UART_Start
 105              		.code	16
 106              		.thumb_func
 107              		.type	UART_Start, %function
 108              	UART_Start:
 109              	.LFB2:
 193:Generated_Source\PSoC4/UART.c **** 
 194:Generated_Source\PSoC4/UART.c **** 
 195:Generated_Source\PSoC4/UART.c **** /*******************************************************************************
 196:Generated_Source\PSoC4/UART.c **** * Function Name: UART_Start
 197:Generated_Source\PSoC4/UART.c **** ****************************************************************************//**
 198:Generated_Source\PSoC4/UART.c **** *
 199:Generated_Source\PSoC4/UART.c **** *  Invokes UART_Init() and UART_Enable().
 200:Generated_Source\PSoC4/UART.c **** *  After this function call, the component is enabled and ready for operation.
 201:Generated_Source\PSoC4/UART.c **** *  When configuration is set to "Unconfigured SCB", the component must first be
 202:Generated_Source\PSoC4/UART.c **** *  initialized to operate in one of the following configurations: I2C, SPI, UART
 203:Generated_Source\PSoC4/UART.c **** *  or EZI2C. Otherwise this function does not enable the component.
 204:Generated_Source\PSoC4/UART.c **** *
 205:Generated_Source\PSoC4/UART.c **** * \globalvars
 206:Generated_Source\PSoC4/UART.c **** *  UART_initVar - used to check initial configuration, modified
 207:Generated_Source\PSoC4/UART.c **** *  on first function call.
 208:Generated_Source\PSoC4/UART.c **** *
 209:Generated_Source\PSoC4/UART.c **** *******************************************************************************/
 210:Generated_Source\PSoC4/UART.c **** void UART_Start(void)
 211:Generated_Source\PSoC4/UART.c **** {
 110              		.loc 1 211 0
 111              		.cfi_startproc
 112              		@ args = 0, pretend = 0, frame = 0
 113              		@ frame_needed = 1, uses_anonymous_args = 0
 114 0000 80B5     		push	{r7, lr}
 115              		.cfi_def_cfa_offset 8
 116              		.cfi_offset 7, -8
 117              		.cfi_offset 14, -4
 118 0002 00AF     		add	r7, sp, #0
 119              		.cfi_def_cfa_register 7
 212:Generated_Source\PSoC4/UART.c ****     if (0u == UART_initVar)
 120              		.loc 1 212 0
 121 0004 064B     		ldr	r3, .L7
 122 0006 1B78     		ldrb	r3, [r3]
 123 0008 002B     		cmp	r3, #0
 124 000a 04D1     		bne	.L6
 213:Generated_Source\PSoC4/UART.c ****     {
 214:Generated_Source\PSoC4/UART.c ****         UART_Init();
 125              		.loc 1 214 0
 126 000c FFF7FEFF 		bl	UART_Init
 215:Generated_Source\PSoC4/UART.c ****         UART_initVar = 1u; /* Component was initialized */
 127              		.loc 1 215 0
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccv2rUUu.s 			page 7


 128 0010 034B     		ldr	r3, .L7
 129 0012 0122     		movs	r2, #1
 130 0014 1A70     		strb	r2, [r3]
 131              	.L6:
 216:Generated_Source\PSoC4/UART.c ****     }
 217:Generated_Source\PSoC4/UART.c **** 
 218:Generated_Source\PSoC4/UART.c ****     UART_Enable();
 132              		.loc 1 218 0
 133 0016 FFF7FEFF 		bl	UART_Enable
 219:Generated_Source\PSoC4/UART.c **** }
 134              		.loc 1 219 0
 135 001a C046     		nop
 136 001c BD46     		mov	sp, r7
 137              		@ sp needed
 138 001e 80BD     		pop	{r7, pc}
 139              	.L8:
 140              		.align	2
 141              	.L7:
 142 0020 00000000 		.word	UART_initVar
 143              		.cfi_endproc
 144              	.LFE2:
 145              		.size	UART_Start, .-UART_Start
 146              		.section	.text.UART_Stop,"ax",%progbits
 147              		.align	2
 148              		.global	UART_Stop
 149              		.code	16
 150              		.thumb_func
 151              		.type	UART_Stop, %function
 152              	UART_Stop:
 153              	.LFB3:
 220:Generated_Source\PSoC4/UART.c **** 
 221:Generated_Source\PSoC4/UART.c **** 
 222:Generated_Source\PSoC4/UART.c **** /*******************************************************************************
 223:Generated_Source\PSoC4/UART.c **** * Function Name: UART_Stop
 224:Generated_Source\PSoC4/UART.c **** ****************************************************************************//**
 225:Generated_Source\PSoC4/UART.c **** *
 226:Generated_Source\PSoC4/UART.c **** *  Disables the UART component: disable the hardware and internal 
 227:Generated_Source\PSoC4/UART.c **** *  interrupt. It also disables all TX interrupt sources so as not to cause an 
 228:Generated_Source\PSoC4/UART.c **** *  unexpected interrupt trigger because after the component is enabled, the 
 229:Generated_Source\PSoC4/UART.c **** *  TX FIFO is empty.
 230:Generated_Source\PSoC4/UART.c **** *  Refer to the function UART_Enable() for the interrupt 
 231:Generated_Source\PSoC4/UART.c **** *  configuration details.
 232:Generated_Source\PSoC4/UART.c **** *  This function disables the SCB component without checking to see if 
 233:Generated_Source\PSoC4/UART.c **** *  communication is in progress. Before calling this function it may be 
 234:Generated_Source\PSoC4/UART.c **** *  necessary to check the status of communication to make sure communication 
 235:Generated_Source\PSoC4/UART.c **** *  is complete. If this is not done then communication could be stopped mid 
 236:Generated_Source\PSoC4/UART.c **** *  byte and corrupted data could result.
 237:Generated_Source\PSoC4/UART.c **** *
 238:Generated_Source\PSoC4/UART.c **** *******************************************************************************/
 239:Generated_Source\PSoC4/UART.c **** void UART_Stop(void)
 240:Generated_Source\PSoC4/UART.c **** {
 154              		.loc 1 240 0
 155              		.cfi_startproc
 156              		@ args = 0, pretend = 0, frame = 0
 157              		@ frame_needed = 1, uses_anonymous_args = 0
 158 0000 80B5     		push	{r7, lr}
 159              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccv2rUUu.s 			page 8


 160              		.cfi_offset 7, -8
 161              		.cfi_offset 14, -4
 162 0002 00AF     		add	r7, sp, #0
 163              		.cfi_def_cfa_register 7
 241:Generated_Source\PSoC4/UART.c **** #if (UART_SCB_IRQ_INTERNAL)
 242:Generated_Source\PSoC4/UART.c ****     UART_DisableInt();
 243:Generated_Source\PSoC4/UART.c **** #endif /* (UART_SCB_IRQ_INTERNAL) */
 244:Generated_Source\PSoC4/UART.c **** 
 245:Generated_Source\PSoC4/UART.c ****     /* Call Stop function specific to current operation mode */
 246:Generated_Source\PSoC4/UART.c ****     UART_ScbModeStop();
 164              		.loc 1 246 0
 165 0004 FFF7FEFF 		bl	UART_ScbModeStop
 247:Generated_Source\PSoC4/UART.c **** 
 248:Generated_Source\PSoC4/UART.c ****     /* Disable SCB IP */
 249:Generated_Source\PSoC4/UART.c ****     UART_CTRL_REG &= (uint32) ~UART_CTRL_ENABLED;
 166              		.loc 1 249 0
 167 0008 054B     		ldr	r3, .L10
 168 000a 054A     		ldr	r2, .L10
 169 000c 1268     		ldr	r2, [r2]
 170 000e 5200     		lsls	r2, r2, #1
 171 0010 5208     		lsrs	r2, r2, #1
 172 0012 1A60     		str	r2, [r3]
 250:Generated_Source\PSoC4/UART.c **** 
 251:Generated_Source\PSoC4/UART.c ****     /* Disable all TX interrupt sources so as not to cause an unexpected
 252:Generated_Source\PSoC4/UART.c ****     * interrupt trigger after the component will be enabled because the 
 253:Generated_Source\PSoC4/UART.c ****     * TX FIFO is empty.
 254:Generated_Source\PSoC4/UART.c ****     * For SCB IP v0, it is critical as it does not mask-out interrupt
 255:Generated_Source\PSoC4/UART.c ****     * sources when it is disabled. This can cause a code lock-up in the
 256:Generated_Source\PSoC4/UART.c ****     * interrupt handler because TX FIFO cannot be loaded after the block
 257:Generated_Source\PSoC4/UART.c ****     * is disabled.
 258:Generated_Source\PSoC4/UART.c ****     */
 259:Generated_Source\PSoC4/UART.c ****     UART_SetTxInterruptMode(UART_NO_INTR_SOURCES);
 173              		.loc 1 259 0
 174 0014 034B     		ldr	r3, .L10+4
 175 0016 0022     		movs	r2, #0
 176 0018 1A60     		str	r2, [r3]
 260:Generated_Source\PSoC4/UART.c **** 
 261:Generated_Source\PSoC4/UART.c **** #if (UART_SCB_IRQ_INTERNAL)
 262:Generated_Source\PSoC4/UART.c ****     UART_ClearPendingInt();
 263:Generated_Source\PSoC4/UART.c **** #endif /* (UART_SCB_IRQ_INTERNAL) */
 264:Generated_Source\PSoC4/UART.c **** }
 177              		.loc 1 264 0
 178 001a C046     		nop
 179 001c BD46     		mov	sp, r7
 180              		@ sp needed
 181 001e 80BD     		pop	{r7, pc}
 182              	.L11:
 183              		.align	2
 184              	.L10:
 185 0020 00000640 		.word	1074135040
 186 0024 880F0640 		.word	1074139016
 187              		.cfi_endproc
 188              	.LFE3:
 189              		.size	UART_Stop, .-UART_Stop
 190              		.section	.text.UART_SetRxFifoLevel,"ax",%progbits
 191              		.align	2
 192              		.global	UART_SetRxFifoLevel
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccv2rUUu.s 			page 9


 193              		.code	16
 194              		.thumb_func
 195              		.type	UART_SetRxFifoLevel, %function
 196              	UART_SetRxFifoLevel:
 197              	.LFB4:
 265:Generated_Source\PSoC4/UART.c **** 
 266:Generated_Source\PSoC4/UART.c **** 
 267:Generated_Source\PSoC4/UART.c **** /*******************************************************************************
 268:Generated_Source\PSoC4/UART.c **** * Function Name: UART_SetRxFifoLevel
 269:Generated_Source\PSoC4/UART.c **** ****************************************************************************//**
 270:Generated_Source\PSoC4/UART.c **** *
 271:Generated_Source\PSoC4/UART.c **** *  Sets level in the RX FIFO to generate a RX level interrupt.
 272:Generated_Source\PSoC4/UART.c **** *  When the RX FIFO has more entries than the RX FIFO level an RX level
 273:Generated_Source\PSoC4/UART.c **** *  interrupt request is generated.
 274:Generated_Source\PSoC4/UART.c **** *
 275:Generated_Source\PSoC4/UART.c **** *  \param level: Level in the RX FIFO to generate RX level interrupt.
 276:Generated_Source\PSoC4/UART.c **** *   The range of valid level values is between 0 and RX FIFO depth - 1.
 277:Generated_Source\PSoC4/UART.c **** *
 278:Generated_Source\PSoC4/UART.c **** *******************************************************************************/
 279:Generated_Source\PSoC4/UART.c **** void UART_SetRxFifoLevel(uint32 level)
 280:Generated_Source\PSoC4/UART.c **** {
 198              		.loc 1 280 0
 199              		.cfi_startproc
 200              		@ args = 0, pretend = 0, frame = 16
 201              		@ frame_needed = 1, uses_anonymous_args = 0
 202 0000 80B5     		push	{r7, lr}
 203              		.cfi_def_cfa_offset 8
 204              		.cfi_offset 7, -8
 205              		.cfi_offset 14, -4
 206 0002 84B0     		sub	sp, sp, #16
 207              		.cfi_def_cfa_offset 24
 208 0004 00AF     		add	r7, sp, #0
 209              		.cfi_def_cfa_register 7
 210 0006 7860     		str	r0, [r7, #4]
 281:Generated_Source\PSoC4/UART.c ****     uint32 rxFifoCtrl;
 282:Generated_Source\PSoC4/UART.c **** 
 283:Generated_Source\PSoC4/UART.c ****     rxFifoCtrl = UART_RX_FIFO_CTRL_REG;
 211              		.loc 1 283 0
 212 0008 094B     		ldr	r3, .L13
 213 000a 1B68     		ldr	r3, [r3]
 214 000c FB60     		str	r3, [r7, #12]
 284:Generated_Source\PSoC4/UART.c **** 
 285:Generated_Source\PSoC4/UART.c ****     rxFifoCtrl &= ((uint32) ~UART_RX_FIFO_CTRL_TRIGGER_LEVEL_MASK); /* Clear level mask bits */
 215              		.loc 1 285 0
 216 000e FB68     		ldr	r3, [r7, #12]
 217 0010 0722     		movs	r2, #7
 218 0012 9343     		bics	r3, r2
 219 0014 FB60     		str	r3, [r7, #12]
 286:Generated_Source\PSoC4/UART.c ****     rxFifoCtrl |= ((uint32) (UART_RX_FIFO_CTRL_TRIGGER_LEVEL_MASK & level));
 220              		.loc 1 286 0
 221 0016 7B68     		ldr	r3, [r7, #4]
 222 0018 0722     		movs	r2, #7
 223 001a 1340     		ands	r3, r2
 224 001c FA68     		ldr	r2, [r7, #12]
 225 001e 1343     		orrs	r3, r2
 226 0020 FB60     		str	r3, [r7, #12]
 287:Generated_Source\PSoC4/UART.c **** 
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccv2rUUu.s 			page 10


 288:Generated_Source\PSoC4/UART.c ****     UART_RX_FIFO_CTRL_REG = rxFifoCtrl;
 227              		.loc 1 288 0
 228 0022 034B     		ldr	r3, .L13
 229 0024 FA68     		ldr	r2, [r7, #12]
 230 0026 1A60     		str	r2, [r3]
 289:Generated_Source\PSoC4/UART.c **** }
 231              		.loc 1 289 0
 232 0028 C046     		nop
 233 002a BD46     		mov	sp, r7
 234 002c 04B0     		add	sp, sp, #16
 235              		@ sp needed
 236 002e 80BD     		pop	{r7, pc}
 237              	.L14:
 238              		.align	2
 239              	.L13:
 240 0030 04030640 		.word	1074135812
 241              		.cfi_endproc
 242              	.LFE4:
 243              		.size	UART_SetRxFifoLevel, .-UART_SetRxFifoLevel
 244              		.section	.text.UART_SetTxFifoLevel,"ax",%progbits
 245              		.align	2
 246              		.global	UART_SetTxFifoLevel
 247              		.code	16
 248              		.thumb_func
 249              		.type	UART_SetTxFifoLevel, %function
 250              	UART_SetTxFifoLevel:
 251              	.LFB5:
 290:Generated_Source\PSoC4/UART.c **** 
 291:Generated_Source\PSoC4/UART.c **** 
 292:Generated_Source\PSoC4/UART.c **** /*******************************************************************************
 293:Generated_Source\PSoC4/UART.c **** * Function Name: UART_SetTxFifoLevel
 294:Generated_Source\PSoC4/UART.c **** ****************************************************************************//**
 295:Generated_Source\PSoC4/UART.c **** *
 296:Generated_Source\PSoC4/UART.c **** *  Sets level in the TX FIFO to generate a TX level interrupt.
 297:Generated_Source\PSoC4/UART.c **** *  When the TX FIFO has less entries than the TX FIFO level an TX level
 298:Generated_Source\PSoC4/UART.c **** *  interrupt request is generated.
 299:Generated_Source\PSoC4/UART.c **** *
 300:Generated_Source\PSoC4/UART.c **** *  \param level: Level in the TX FIFO to generate TX level interrupt.
 301:Generated_Source\PSoC4/UART.c **** *   The range of valid level values is between 0 and TX FIFO depth - 1.
 302:Generated_Source\PSoC4/UART.c **** *
 303:Generated_Source\PSoC4/UART.c **** *******************************************************************************/
 304:Generated_Source\PSoC4/UART.c **** void UART_SetTxFifoLevel(uint32 level)
 305:Generated_Source\PSoC4/UART.c **** {
 252              		.loc 1 305 0
 253              		.cfi_startproc
 254              		@ args = 0, pretend = 0, frame = 16
 255              		@ frame_needed = 1, uses_anonymous_args = 0
 256 0000 80B5     		push	{r7, lr}
 257              		.cfi_def_cfa_offset 8
 258              		.cfi_offset 7, -8
 259              		.cfi_offset 14, -4
 260 0002 84B0     		sub	sp, sp, #16
 261              		.cfi_def_cfa_offset 24
 262 0004 00AF     		add	r7, sp, #0
 263              		.cfi_def_cfa_register 7
 264 0006 7860     		str	r0, [r7, #4]
 306:Generated_Source\PSoC4/UART.c ****     uint32 txFifoCtrl;
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccv2rUUu.s 			page 11


 307:Generated_Source\PSoC4/UART.c **** 
 308:Generated_Source\PSoC4/UART.c ****     txFifoCtrl = UART_TX_FIFO_CTRL_REG;
 265              		.loc 1 308 0
 266 0008 094B     		ldr	r3, .L16
 267 000a 1B68     		ldr	r3, [r3]
 268 000c FB60     		str	r3, [r7, #12]
 309:Generated_Source\PSoC4/UART.c **** 
 310:Generated_Source\PSoC4/UART.c ****     txFifoCtrl &= ((uint32) ~UART_TX_FIFO_CTRL_TRIGGER_LEVEL_MASK); /* Clear level mask bits */
 269              		.loc 1 310 0
 270 000e FB68     		ldr	r3, [r7, #12]
 271 0010 0722     		movs	r2, #7
 272 0012 9343     		bics	r3, r2
 273 0014 FB60     		str	r3, [r7, #12]
 311:Generated_Source\PSoC4/UART.c ****     txFifoCtrl |= ((uint32) (UART_TX_FIFO_CTRL_TRIGGER_LEVEL_MASK & level));
 274              		.loc 1 311 0
 275 0016 7B68     		ldr	r3, [r7, #4]
 276 0018 0722     		movs	r2, #7
 277 001a 1340     		ands	r3, r2
 278 001c FA68     		ldr	r2, [r7, #12]
 279 001e 1343     		orrs	r3, r2
 280 0020 FB60     		str	r3, [r7, #12]
 312:Generated_Source\PSoC4/UART.c **** 
 313:Generated_Source\PSoC4/UART.c ****     UART_TX_FIFO_CTRL_REG = txFifoCtrl;
 281              		.loc 1 313 0
 282 0022 034B     		ldr	r3, .L16
 283 0024 FA68     		ldr	r2, [r7, #12]
 284 0026 1A60     		str	r2, [r3]
 314:Generated_Source\PSoC4/UART.c **** }
 285              		.loc 1 314 0
 286 0028 C046     		nop
 287 002a BD46     		mov	sp, r7
 288 002c 04B0     		add	sp, sp, #16
 289              		@ sp needed
 290 002e 80BD     		pop	{r7, pc}
 291              	.L17:
 292              		.align	2
 293              	.L16:
 294 0030 04020640 		.word	1074135556
 295              		.cfi_endproc
 296              	.LFE5:
 297              		.size	UART_SetTxFifoLevel, .-UART_SetTxFifoLevel
 298              		.section	.text.UART_ScbEnableIntr,"ax",%progbits
 299              		.align	2
 300              		.code	16
 301              		.thumb_func
 302              		.type	UART_ScbEnableIntr, %function
 303              	UART_ScbEnableIntr:
 304              	.LFB6:
 315:Generated_Source\PSoC4/UART.c **** 
 316:Generated_Source\PSoC4/UART.c **** 
 317:Generated_Source\PSoC4/UART.c **** #if (UART_SCB_IRQ_INTERNAL)
 318:Generated_Source\PSoC4/UART.c ****     /*******************************************************************************
 319:Generated_Source\PSoC4/UART.c ****     * Function Name: UART_SetCustomInterruptHandler
 320:Generated_Source\PSoC4/UART.c ****     ****************************************************************************//**
 321:Generated_Source\PSoC4/UART.c ****     *
 322:Generated_Source\PSoC4/UART.c ****     *  Registers a function to be called by the internal interrupt handler.
 323:Generated_Source\PSoC4/UART.c ****     *  First the function that is registered is called, then the internal interrupt
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccv2rUUu.s 			page 12


 324:Generated_Source\PSoC4/UART.c ****     *  handler performs any operation such as software buffer management functions
 325:Generated_Source\PSoC4/UART.c ****     *  before the interrupt returns.  It is the user's responsibility not to break
 326:Generated_Source\PSoC4/UART.c ****     *  the software buffer operations. Only one custom handler is supported, which
 327:Generated_Source\PSoC4/UART.c ****     *  is the function provided by the most recent call.
 328:Generated_Source\PSoC4/UART.c ****     *  At the initialization time no custom handler is registered.
 329:Generated_Source\PSoC4/UART.c ****     *
 330:Generated_Source\PSoC4/UART.c ****     *  \param func: Pointer to the function to register.
 331:Generated_Source\PSoC4/UART.c ****     *        The value NULL indicates to remove the current custom interrupt
 332:Generated_Source\PSoC4/UART.c ****     *        handler.
 333:Generated_Source\PSoC4/UART.c ****     *
 334:Generated_Source\PSoC4/UART.c ****     *******************************************************************************/
 335:Generated_Source\PSoC4/UART.c ****     void UART_SetCustomInterruptHandler(void (*func)(void))
 336:Generated_Source\PSoC4/UART.c ****     {
 337:Generated_Source\PSoC4/UART.c ****     #if !defined (CY_REMOVE_UART_CUSTOM_INTR_HANDLER)
 338:Generated_Source\PSoC4/UART.c ****         UART_customIntrHandler = func; /* Register interrupt handler */
 339:Generated_Source\PSoC4/UART.c ****     #else
 340:Generated_Source\PSoC4/UART.c ****         if (NULL != func)
 341:Generated_Source\PSoC4/UART.c ****         {
 342:Generated_Source\PSoC4/UART.c ****             /* Suppress compiler warning */
 343:Generated_Source\PSoC4/UART.c ****         }
 344:Generated_Source\PSoC4/UART.c ****     #endif /* !defined (CY_REMOVE_UART_CUSTOM_INTR_HANDLER) */
 345:Generated_Source\PSoC4/UART.c ****     }
 346:Generated_Source\PSoC4/UART.c **** #endif /* (UART_SCB_IRQ_INTERNAL) */
 347:Generated_Source\PSoC4/UART.c **** 
 348:Generated_Source\PSoC4/UART.c **** 
 349:Generated_Source\PSoC4/UART.c **** /*******************************************************************************
 350:Generated_Source\PSoC4/UART.c **** * Function Name: UART_ScbModeEnableIntr
 351:Generated_Source\PSoC4/UART.c **** ****************************************************************************//**
 352:Generated_Source\PSoC4/UART.c **** *
 353:Generated_Source\PSoC4/UART.c **** *  Enables an interrupt for a specific mode.
 354:Generated_Source\PSoC4/UART.c **** *
 355:Generated_Source\PSoC4/UART.c **** *******************************************************************************/
 356:Generated_Source\PSoC4/UART.c **** static void UART_ScbEnableIntr(void)
 357:Generated_Source\PSoC4/UART.c **** {
 305              		.loc 1 357 0
 306              		.cfi_startproc
 307              		@ args = 0, pretend = 0, frame = 0
 308              		@ frame_needed = 1, uses_anonymous_args = 0
 309 0000 80B5     		push	{r7, lr}
 310              		.cfi_def_cfa_offset 8
 311              		.cfi_offset 7, -8
 312              		.cfi_offset 14, -4
 313 0002 00AF     		add	r7, sp, #0
 314              		.cfi_def_cfa_register 7
 358:Generated_Source\PSoC4/UART.c **** #if (UART_SCB_IRQ_INTERNAL)
 359:Generated_Source\PSoC4/UART.c ****     /* Enable interrupt in NVIC */
 360:Generated_Source\PSoC4/UART.c ****     #if (UART_SCB_MODE_UNCONFIG_CONST_CFG)
 361:Generated_Source\PSoC4/UART.c ****         if (0u != UART_scbEnableIntr)
 362:Generated_Source\PSoC4/UART.c ****         {
 363:Generated_Source\PSoC4/UART.c ****             UART_EnableInt();
 364:Generated_Source\PSoC4/UART.c ****         }
 365:Generated_Source\PSoC4/UART.c **** 
 366:Generated_Source\PSoC4/UART.c ****     #else
 367:Generated_Source\PSoC4/UART.c ****         UART_EnableInt();
 368:Generated_Source\PSoC4/UART.c **** 
 369:Generated_Source\PSoC4/UART.c ****     #endif /* (UART_SCB_MODE_UNCONFIG_CONST_CFG) */
 370:Generated_Source\PSoC4/UART.c **** #endif /* (UART_SCB_IRQ_INTERNAL) */
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccv2rUUu.s 			page 13


 371:Generated_Source\PSoC4/UART.c **** }
 315              		.loc 1 371 0
 316 0004 C046     		nop
 317 0006 BD46     		mov	sp, r7
 318              		@ sp needed
 319 0008 80BD     		pop	{r7, pc}
 320              		.cfi_endproc
 321              	.LFE6:
 322              		.size	UART_ScbEnableIntr, .-UART_ScbEnableIntr
 323 000a C046     		.section	.text.UART_ScbModePostEnable,"ax",%progbits
 324              		.align	2
 325              		.code	16
 326              		.thumb_func
 327              		.type	UART_ScbModePostEnable, %function
 328              	UART_ScbModePostEnable:
 329              	.LFB7:
 372:Generated_Source\PSoC4/UART.c **** 
 373:Generated_Source\PSoC4/UART.c **** 
 374:Generated_Source\PSoC4/UART.c **** /*******************************************************************************
 375:Generated_Source\PSoC4/UART.c **** * Function Name: UART_ScbModePostEnable
 376:Generated_Source\PSoC4/UART.c **** ****************************************************************************//**
 377:Generated_Source\PSoC4/UART.c **** *
 378:Generated_Source\PSoC4/UART.c **** *  Calls the PostEnable function for a specific operation mode.
 379:Generated_Source\PSoC4/UART.c **** *
 380:Generated_Source\PSoC4/UART.c **** *******************************************************************************/
 381:Generated_Source\PSoC4/UART.c **** static void UART_ScbModePostEnable(void)
 382:Generated_Source\PSoC4/UART.c **** {
 330              		.loc 1 382 0
 331              		.cfi_startproc
 332              		@ args = 0, pretend = 0, frame = 0
 333              		@ frame_needed = 1, uses_anonymous_args = 0
 334 0000 80B5     		push	{r7, lr}
 335              		.cfi_def_cfa_offset 8
 336              		.cfi_offset 7, -8
 337              		.cfi_offset 14, -4
 338 0002 00AF     		add	r7, sp, #0
 339              		.cfi_def_cfa_register 7
 383:Generated_Source\PSoC4/UART.c **** #if (UART_SCB_MODE_UNCONFIG_CONST_CFG)
 384:Generated_Source\PSoC4/UART.c **** #if (!UART_CY_SCBIP_V1)
 385:Generated_Source\PSoC4/UART.c ****     if (UART_SCB_MODE_SPI_RUNTM_CFG)
 386:Generated_Source\PSoC4/UART.c ****     {
 387:Generated_Source\PSoC4/UART.c ****         UART_SpiPostEnable();
 388:Generated_Source\PSoC4/UART.c ****     }
 389:Generated_Source\PSoC4/UART.c ****     else if (UART_SCB_MODE_UART_RUNTM_CFG)
 390:Generated_Source\PSoC4/UART.c ****     {
 391:Generated_Source\PSoC4/UART.c ****         UART_UartPostEnable();
 392:Generated_Source\PSoC4/UART.c ****     }
 393:Generated_Source\PSoC4/UART.c ****     else
 394:Generated_Source\PSoC4/UART.c ****     {
 395:Generated_Source\PSoC4/UART.c ****         /* Unknown mode: do nothing */
 396:Generated_Source\PSoC4/UART.c ****     }
 397:Generated_Source\PSoC4/UART.c **** #endif /* (!UART_CY_SCBIP_V1) */
 398:Generated_Source\PSoC4/UART.c **** 
 399:Generated_Source\PSoC4/UART.c **** #elif (UART_SCB_MODE_SPI_CONST_CFG)
 400:Generated_Source\PSoC4/UART.c ****     UART_SpiPostEnable();
 401:Generated_Source\PSoC4/UART.c **** 
 402:Generated_Source\PSoC4/UART.c **** #elif (UART_SCB_MODE_UART_CONST_CFG)
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccv2rUUu.s 			page 14


 403:Generated_Source\PSoC4/UART.c ****     UART_UartPostEnable();
 340              		.loc 1 403 0
 341 0004 FFF7FEFF 		bl	UART_UartPostEnable
 404:Generated_Source\PSoC4/UART.c **** 
 405:Generated_Source\PSoC4/UART.c **** #else
 406:Generated_Source\PSoC4/UART.c ****     /* Unknown mode: do nothing */
 407:Generated_Source\PSoC4/UART.c **** #endif /* (UART_SCB_MODE_UNCONFIG_CONST_CFG) */
 408:Generated_Source\PSoC4/UART.c **** }
 342              		.loc 1 408 0
 343 0008 C046     		nop
 344 000a BD46     		mov	sp, r7
 345              		@ sp needed
 346 000c 80BD     		pop	{r7, pc}
 347              		.cfi_endproc
 348              	.LFE7:
 349              		.size	UART_ScbModePostEnable, .-UART_ScbModePostEnable
 350 000e C046     		.section	.text.UART_ScbModeStop,"ax",%progbits
 351              		.align	2
 352              		.code	16
 353              		.thumb_func
 354              		.type	UART_ScbModeStop, %function
 355              	UART_ScbModeStop:
 356              	.LFB8:
 409:Generated_Source\PSoC4/UART.c **** 
 410:Generated_Source\PSoC4/UART.c **** 
 411:Generated_Source\PSoC4/UART.c **** /*******************************************************************************
 412:Generated_Source\PSoC4/UART.c **** * Function Name: UART_ScbModeStop
 413:Generated_Source\PSoC4/UART.c **** ****************************************************************************//**
 414:Generated_Source\PSoC4/UART.c **** *
 415:Generated_Source\PSoC4/UART.c **** *  Calls the Stop function for a specific operation mode.
 416:Generated_Source\PSoC4/UART.c **** *
 417:Generated_Source\PSoC4/UART.c **** *******************************************************************************/
 418:Generated_Source\PSoC4/UART.c **** static void UART_ScbModeStop(void)
 419:Generated_Source\PSoC4/UART.c **** {
 357              		.loc 1 419 0
 358              		.cfi_startproc
 359              		@ args = 0, pretend = 0, frame = 0
 360              		@ frame_needed = 1, uses_anonymous_args = 0
 361 0000 80B5     		push	{r7, lr}
 362              		.cfi_def_cfa_offset 8
 363              		.cfi_offset 7, -8
 364              		.cfi_offset 14, -4
 365 0002 00AF     		add	r7, sp, #0
 366              		.cfi_def_cfa_register 7
 420:Generated_Source\PSoC4/UART.c **** #if (UART_SCB_MODE_UNCONFIG_CONST_CFG)
 421:Generated_Source\PSoC4/UART.c ****     if (UART_SCB_MODE_I2C_RUNTM_CFG)
 422:Generated_Source\PSoC4/UART.c ****     {
 423:Generated_Source\PSoC4/UART.c ****         UART_I2CStop();
 424:Generated_Source\PSoC4/UART.c ****     }
 425:Generated_Source\PSoC4/UART.c ****     else if (UART_SCB_MODE_EZI2C_RUNTM_CFG)
 426:Generated_Source\PSoC4/UART.c ****     {
 427:Generated_Source\PSoC4/UART.c ****         UART_EzI2CStop();
 428:Generated_Source\PSoC4/UART.c ****     }
 429:Generated_Source\PSoC4/UART.c **** #if (!UART_CY_SCBIP_V1)
 430:Generated_Source\PSoC4/UART.c ****     else if (UART_SCB_MODE_SPI_RUNTM_CFG)
 431:Generated_Source\PSoC4/UART.c ****     {
 432:Generated_Source\PSoC4/UART.c ****         UART_SpiStop();
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccv2rUUu.s 			page 15


 433:Generated_Source\PSoC4/UART.c ****     }
 434:Generated_Source\PSoC4/UART.c ****     else if (UART_SCB_MODE_UART_RUNTM_CFG)
 435:Generated_Source\PSoC4/UART.c ****     {
 436:Generated_Source\PSoC4/UART.c ****         UART_UartStop();
 437:Generated_Source\PSoC4/UART.c ****     }
 438:Generated_Source\PSoC4/UART.c **** #endif /* (!UART_CY_SCBIP_V1) */
 439:Generated_Source\PSoC4/UART.c ****     else
 440:Generated_Source\PSoC4/UART.c ****     {
 441:Generated_Source\PSoC4/UART.c ****         /* Unknown mode: do nothing */
 442:Generated_Source\PSoC4/UART.c ****     }
 443:Generated_Source\PSoC4/UART.c **** #elif (UART_SCB_MODE_I2C_CONST_CFG)
 444:Generated_Source\PSoC4/UART.c ****     UART_I2CStop();
 445:Generated_Source\PSoC4/UART.c **** 
 446:Generated_Source\PSoC4/UART.c **** #elif (UART_SCB_MODE_EZI2C_CONST_CFG)
 447:Generated_Source\PSoC4/UART.c ****     UART_EzI2CStop();
 448:Generated_Source\PSoC4/UART.c **** 
 449:Generated_Source\PSoC4/UART.c **** #elif (UART_SCB_MODE_SPI_CONST_CFG)
 450:Generated_Source\PSoC4/UART.c ****     UART_SpiStop();
 451:Generated_Source\PSoC4/UART.c **** 
 452:Generated_Source\PSoC4/UART.c **** #elif (UART_SCB_MODE_UART_CONST_CFG)
 453:Generated_Source\PSoC4/UART.c ****     UART_UartStop();
 367              		.loc 1 453 0
 368 0004 FFF7FEFF 		bl	UART_UartStop
 454:Generated_Source\PSoC4/UART.c **** 
 455:Generated_Source\PSoC4/UART.c **** #else
 456:Generated_Source\PSoC4/UART.c ****     /* Unknown mode: do nothing */
 457:Generated_Source\PSoC4/UART.c **** #endif /* (UART_SCB_MODE_UNCONFIG_CONST_CFG) */
 458:Generated_Source\PSoC4/UART.c **** }
 369              		.loc 1 458 0
 370 0008 C046     		nop
 371 000a BD46     		mov	sp, r7
 372              		@ sp needed
 373 000c 80BD     		pop	{r7, pc}
 374              		.cfi_endproc
 375              	.LFE8:
 376              		.size	UART_ScbModeStop, .-UART_ScbModeStop
 377 000e C046     		.section	.text.UART_I2CSlaveNackGeneration,"ax",%progbits
 378              		.align	2
 379              		.global	UART_I2CSlaveNackGeneration
 380              		.code	16
 381              		.thumb_func
 382              		.type	UART_I2CSlaveNackGeneration, %function
 383              	UART_I2CSlaveNackGeneration:
 384              	.LFB9:
 459:Generated_Source\PSoC4/UART.c **** 
 460:Generated_Source\PSoC4/UART.c **** 
 461:Generated_Source\PSoC4/UART.c **** #if (UART_SCB_MODE_UNCONFIG_CONST_CFG)
 462:Generated_Source\PSoC4/UART.c ****     /*******************************************************************************
 463:Generated_Source\PSoC4/UART.c ****     * Function Name: UART_SetPins
 464:Generated_Source\PSoC4/UART.c ****     ****************************************************************************//**
 465:Generated_Source\PSoC4/UART.c ****     *
 466:Generated_Source\PSoC4/UART.c ****     *  Sets the pins settings accordingly to the selected operation mode.
 467:Generated_Source\PSoC4/UART.c ****     *  Only available in the Unconfigured operation mode. The mode specific
 468:Generated_Source\PSoC4/UART.c ****     *  initialization function calls it.
 469:Generated_Source\PSoC4/UART.c ****     *  Pins configuration is set by PSoC Creator when a specific mode of operation
 470:Generated_Source\PSoC4/UART.c ****     *  is selected in design time.
 471:Generated_Source\PSoC4/UART.c ****     *
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccv2rUUu.s 			page 16


 472:Generated_Source\PSoC4/UART.c ****     *  \param mode:      Mode of SCB operation.
 473:Generated_Source\PSoC4/UART.c ****     *  \param subMode:   Sub-mode of SCB operation. It is only required for SPI and UART
 474:Generated_Source\PSoC4/UART.c ****     *             modes.
 475:Generated_Source\PSoC4/UART.c ****     *  \param uartEnableMask: enables TX or RX direction and RTS and CTS signals.
 476:Generated_Source\PSoC4/UART.c ****     *
 477:Generated_Source\PSoC4/UART.c ****     *******************************************************************************/
 478:Generated_Source\PSoC4/UART.c ****     void UART_SetPins(uint32 mode, uint32 subMode, uint32 uartEnableMask)
 479:Generated_Source\PSoC4/UART.c ****     {
 480:Generated_Source\PSoC4/UART.c ****         uint32 pinsDm[UART_SCB_PINS_NUMBER];
 481:Generated_Source\PSoC4/UART.c ****         uint32 i;
 482:Generated_Source\PSoC4/UART.c ****         
 483:Generated_Source\PSoC4/UART.c ****     #if (!UART_CY_SCBIP_V1)
 484:Generated_Source\PSoC4/UART.c ****         uint32 pinsInBuf = 0u;
 485:Generated_Source\PSoC4/UART.c ****     #endif /* (!UART_CY_SCBIP_V1) */
 486:Generated_Source\PSoC4/UART.c ****         
 487:Generated_Source\PSoC4/UART.c ****         uint32 hsiomSel[UART_SCB_PINS_NUMBER] = 
 488:Generated_Source\PSoC4/UART.c ****         {
 489:Generated_Source\PSoC4/UART.c ****             UART_RX_SCL_MOSI_HSIOM_SEL_GPIO,
 490:Generated_Source\PSoC4/UART.c ****             UART_TX_SDA_MISO_HSIOM_SEL_GPIO,
 491:Generated_Source\PSoC4/UART.c ****             0u,
 492:Generated_Source\PSoC4/UART.c ****             0u,
 493:Generated_Source\PSoC4/UART.c ****             0u,
 494:Generated_Source\PSoC4/UART.c ****             0u,
 495:Generated_Source\PSoC4/UART.c ****             0u,
 496:Generated_Source\PSoC4/UART.c ****         };
 497:Generated_Source\PSoC4/UART.c **** 
 498:Generated_Source\PSoC4/UART.c ****     #if (UART_CY_SCBIP_V1)
 499:Generated_Source\PSoC4/UART.c ****         /* Supress compiler warning. */
 500:Generated_Source\PSoC4/UART.c ****         if ((0u == subMode) || (0u == uartEnableMask))
 501:Generated_Source\PSoC4/UART.c ****         {
 502:Generated_Source\PSoC4/UART.c ****         }
 503:Generated_Source\PSoC4/UART.c ****     #endif /* (UART_CY_SCBIP_V1) */
 504:Generated_Source\PSoC4/UART.c **** 
 505:Generated_Source\PSoC4/UART.c ****         /* Set default HSIOM to GPIO and Drive Mode to Analog Hi-Z */
 506:Generated_Source\PSoC4/UART.c ****         for (i = 0u; i < UART_SCB_PINS_NUMBER; i++)
 507:Generated_Source\PSoC4/UART.c ****         {
 508:Generated_Source\PSoC4/UART.c ****             pinsDm[i] = UART_PIN_DM_ALG_HIZ;
 509:Generated_Source\PSoC4/UART.c ****         }
 510:Generated_Source\PSoC4/UART.c **** 
 511:Generated_Source\PSoC4/UART.c ****         if ((UART_SCB_MODE_I2C   == mode) ||
 512:Generated_Source\PSoC4/UART.c ****             (UART_SCB_MODE_EZI2C == mode))
 513:Generated_Source\PSoC4/UART.c ****         {
 514:Generated_Source\PSoC4/UART.c ****         #if (UART_RX_SCL_MOSI_PIN)
 515:Generated_Source\PSoC4/UART.c ****             hsiomSel[UART_RX_SCL_MOSI_PIN_INDEX] = UART_RX_SCL_MOSI_HSIOM_SEL_I2C;
 516:Generated_Source\PSoC4/UART.c ****             pinsDm  [UART_RX_SCL_MOSI_PIN_INDEX] = UART_PIN_DM_OD_LO;
 517:Generated_Source\PSoC4/UART.c ****         #elif (UART_RX_WAKE_SCL_MOSI_PIN)
 518:Generated_Source\PSoC4/UART.c ****             hsiomSel[UART_RX_WAKE_SCL_MOSI_PIN_INDEX] = UART_RX_WAKE_SCL_MOSI_HSIOM_SEL_I2C;
 519:Generated_Source\PSoC4/UART.c ****             pinsDm  [UART_RX_WAKE_SCL_MOSI_PIN_INDEX] = UART_PIN_DM_OD_LO;
 520:Generated_Source\PSoC4/UART.c ****         #else
 521:Generated_Source\PSoC4/UART.c ****         #endif /* (UART_RX_SCL_MOSI_PIN) */
 522:Generated_Source\PSoC4/UART.c ****         
 523:Generated_Source\PSoC4/UART.c ****         #if (UART_TX_SDA_MISO_PIN)
 524:Generated_Source\PSoC4/UART.c ****             hsiomSel[UART_TX_SDA_MISO_PIN_INDEX] = UART_TX_SDA_MISO_HSIOM_SEL_I2C;
 525:Generated_Source\PSoC4/UART.c ****             pinsDm  [UART_TX_SDA_MISO_PIN_INDEX] = UART_PIN_DM_OD_LO;
 526:Generated_Source\PSoC4/UART.c ****         #endif /* (UART_TX_SDA_MISO_PIN) */
 527:Generated_Source\PSoC4/UART.c ****         }
 528:Generated_Source\PSoC4/UART.c ****     #if (!UART_CY_SCBIP_V1)
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccv2rUUu.s 			page 17


 529:Generated_Source\PSoC4/UART.c ****         else if (UART_SCB_MODE_SPI == mode)
 530:Generated_Source\PSoC4/UART.c ****         {
 531:Generated_Source\PSoC4/UART.c ****         #if (UART_RX_SCL_MOSI_PIN)
 532:Generated_Source\PSoC4/UART.c ****             hsiomSel[UART_RX_SCL_MOSI_PIN_INDEX] = UART_RX_SCL_MOSI_HSIOM_SEL_SPI;
 533:Generated_Source\PSoC4/UART.c ****         #elif (UART_RX_WAKE_SCL_MOSI_PIN)
 534:Generated_Source\PSoC4/UART.c ****             hsiomSel[UART_RX_WAKE_SCL_MOSI_PIN_INDEX] = UART_RX_WAKE_SCL_MOSI_HSIOM_SEL_SPI;
 535:Generated_Source\PSoC4/UART.c ****         #else
 536:Generated_Source\PSoC4/UART.c ****         #endif /* (UART_RX_SCL_MOSI_PIN) */
 537:Generated_Source\PSoC4/UART.c ****         
 538:Generated_Source\PSoC4/UART.c ****         #if (UART_TX_SDA_MISO_PIN)
 539:Generated_Source\PSoC4/UART.c ****             hsiomSel[UART_TX_SDA_MISO_PIN_INDEX] = UART_TX_SDA_MISO_HSIOM_SEL_SPI;
 540:Generated_Source\PSoC4/UART.c ****         #endif /* (UART_TX_SDA_MISO_PIN) */
 541:Generated_Source\PSoC4/UART.c ****         
 542:Generated_Source\PSoC4/UART.c ****         #if (UART_SCLK_PIN)
 543:Generated_Source\PSoC4/UART.c ****             hsiomSel[UART_SCLK_PIN_INDEX] = UART_SCLK_HSIOM_SEL_SPI;
 544:Generated_Source\PSoC4/UART.c ****         #endif /* (UART_SCLK_PIN) */
 545:Generated_Source\PSoC4/UART.c **** 
 546:Generated_Source\PSoC4/UART.c ****             if (UART_SPI_SLAVE == subMode)
 547:Generated_Source\PSoC4/UART.c ****             {
 548:Generated_Source\PSoC4/UART.c ****                 /* Slave */
 549:Generated_Source\PSoC4/UART.c ****                 pinsDm[UART_RX_SCL_MOSI_PIN_INDEX] = UART_PIN_DM_DIG_HIZ;
 550:Generated_Source\PSoC4/UART.c ****                 pinsDm[UART_TX_SDA_MISO_PIN_INDEX] = UART_PIN_DM_STRONG;
 551:Generated_Source\PSoC4/UART.c ****                 pinsDm[UART_SCLK_PIN_INDEX] = UART_PIN_DM_DIG_HIZ;
 552:Generated_Source\PSoC4/UART.c **** 
 553:Generated_Source\PSoC4/UART.c ****             #if (UART_SS0_PIN)
 554:Generated_Source\PSoC4/UART.c ****                 /* Only SS0 is valid choice for Slave */
 555:Generated_Source\PSoC4/UART.c ****                 hsiomSel[UART_SS0_PIN_INDEX] = UART_SS0_HSIOM_SEL_SPI;
 556:Generated_Source\PSoC4/UART.c ****                 pinsDm  [UART_SS0_PIN_INDEX] = UART_PIN_DM_DIG_HIZ;
 557:Generated_Source\PSoC4/UART.c ****             #endif /* (UART_SS0_PIN) */
 558:Generated_Source\PSoC4/UART.c **** 
 559:Generated_Source\PSoC4/UART.c ****             #if (UART_TX_SDA_MISO_PIN)
 560:Generated_Source\PSoC4/UART.c ****                 /* Disable input buffer */
 561:Generated_Source\PSoC4/UART.c ****                  pinsInBuf |= UART_TX_SDA_MISO_PIN_MASK;
 562:Generated_Source\PSoC4/UART.c ****             #endif /* (UART_TX_SDA_MISO_PIN) */
 563:Generated_Source\PSoC4/UART.c ****             }
 564:Generated_Source\PSoC4/UART.c ****             else 
 565:Generated_Source\PSoC4/UART.c ****             {
 566:Generated_Source\PSoC4/UART.c ****                 /* (Master) */
 567:Generated_Source\PSoC4/UART.c ****                 pinsDm[UART_RX_SCL_MOSI_PIN_INDEX] = UART_PIN_DM_STRONG;
 568:Generated_Source\PSoC4/UART.c ****                 pinsDm[UART_TX_SDA_MISO_PIN_INDEX] = UART_PIN_DM_DIG_HIZ;
 569:Generated_Source\PSoC4/UART.c ****                 pinsDm[UART_SCLK_PIN_INDEX] = UART_PIN_DM_STRONG;
 570:Generated_Source\PSoC4/UART.c **** 
 571:Generated_Source\PSoC4/UART.c ****             #if (UART_SS0_PIN)
 572:Generated_Source\PSoC4/UART.c ****                 hsiomSel [UART_SS0_PIN_INDEX] = UART_SS0_HSIOM_SEL_SPI;
 573:Generated_Source\PSoC4/UART.c ****                 pinsDm   [UART_SS0_PIN_INDEX] = UART_PIN_DM_STRONG;
 574:Generated_Source\PSoC4/UART.c ****                 pinsInBuf |= UART_SS0_PIN_MASK;
 575:Generated_Source\PSoC4/UART.c ****             #endif /* (UART_SS0_PIN) */
 576:Generated_Source\PSoC4/UART.c **** 
 577:Generated_Source\PSoC4/UART.c ****             #if (UART_SS1_PIN)
 578:Generated_Source\PSoC4/UART.c ****                 hsiomSel [UART_SS1_PIN_INDEX] = UART_SS1_HSIOM_SEL_SPI;
 579:Generated_Source\PSoC4/UART.c ****                 pinsDm   [UART_SS1_PIN_INDEX] = UART_PIN_DM_STRONG;
 580:Generated_Source\PSoC4/UART.c ****                 pinsInBuf |= UART_SS1_PIN_MASK;
 581:Generated_Source\PSoC4/UART.c ****             #endif /* (UART_SS1_PIN) */
 582:Generated_Source\PSoC4/UART.c **** 
 583:Generated_Source\PSoC4/UART.c ****             #if (UART_SS2_PIN)
 584:Generated_Source\PSoC4/UART.c ****                 hsiomSel [UART_SS2_PIN_INDEX] = UART_SS2_HSIOM_SEL_SPI;
 585:Generated_Source\PSoC4/UART.c ****                 pinsDm   [UART_SS2_PIN_INDEX] = UART_PIN_DM_STRONG;
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccv2rUUu.s 			page 18


 586:Generated_Source\PSoC4/UART.c ****                 pinsInBuf |= UART_SS2_PIN_MASK;
 587:Generated_Source\PSoC4/UART.c ****             #endif /* (UART_SS2_PIN) */
 588:Generated_Source\PSoC4/UART.c **** 
 589:Generated_Source\PSoC4/UART.c ****             #if (UART_SS3_PIN)
 590:Generated_Source\PSoC4/UART.c ****                 hsiomSel [UART_SS3_PIN_INDEX] = UART_SS3_HSIOM_SEL_SPI;
 591:Generated_Source\PSoC4/UART.c ****                 pinsDm   [UART_SS3_PIN_INDEX] = UART_PIN_DM_STRONG;
 592:Generated_Source\PSoC4/UART.c ****                 pinsInBuf |= UART_SS3_PIN_MASK;
 593:Generated_Source\PSoC4/UART.c ****             #endif /* (UART_SS3_PIN) */
 594:Generated_Source\PSoC4/UART.c **** 
 595:Generated_Source\PSoC4/UART.c ****                 /* Disable input buffers */
 596:Generated_Source\PSoC4/UART.c ****             #if (UART_RX_SCL_MOSI_PIN)
 597:Generated_Source\PSoC4/UART.c ****                 pinsInBuf |= UART_RX_SCL_MOSI_PIN_MASK;
 598:Generated_Source\PSoC4/UART.c ****             #elif (UART_RX_WAKE_SCL_MOSI_PIN)
 599:Generated_Source\PSoC4/UART.c ****                 pinsInBuf |= UART_RX_WAKE_SCL_MOSI_PIN_MASK;
 600:Generated_Source\PSoC4/UART.c ****             #else
 601:Generated_Source\PSoC4/UART.c ****             #endif /* (UART_RX_SCL_MOSI_PIN) */
 602:Generated_Source\PSoC4/UART.c **** 
 603:Generated_Source\PSoC4/UART.c ****             #if (UART_SCLK_PIN)
 604:Generated_Source\PSoC4/UART.c ****                 pinsInBuf |= UART_SCLK_PIN_MASK;
 605:Generated_Source\PSoC4/UART.c ****             #endif /* (UART_SCLK_PIN) */
 606:Generated_Source\PSoC4/UART.c ****             }
 607:Generated_Source\PSoC4/UART.c ****         }
 608:Generated_Source\PSoC4/UART.c ****         else /* UART */
 609:Generated_Source\PSoC4/UART.c ****         {
 610:Generated_Source\PSoC4/UART.c ****             if (UART_UART_MODE_SMARTCARD == subMode)
 611:Generated_Source\PSoC4/UART.c ****             {
 612:Generated_Source\PSoC4/UART.c ****                 /* SmartCard */
 613:Generated_Source\PSoC4/UART.c ****             #if (UART_TX_SDA_MISO_PIN)
 614:Generated_Source\PSoC4/UART.c ****                 hsiomSel[UART_TX_SDA_MISO_PIN_INDEX] = UART_TX_SDA_MISO_HSIOM_SEL_UART;
 615:Generated_Source\PSoC4/UART.c ****                 pinsDm  [UART_TX_SDA_MISO_PIN_INDEX] = UART_PIN_DM_OD_LO;
 616:Generated_Source\PSoC4/UART.c ****             #endif /* (UART_TX_SDA_MISO_PIN) */
 617:Generated_Source\PSoC4/UART.c ****             }
 618:Generated_Source\PSoC4/UART.c ****             else /* Standard or IrDA */
 619:Generated_Source\PSoC4/UART.c ****             {
 620:Generated_Source\PSoC4/UART.c ****                 if (0u != (UART_UART_RX_PIN_ENABLE & uartEnableMask))
 621:Generated_Source\PSoC4/UART.c ****                 {
 622:Generated_Source\PSoC4/UART.c ****                 #if (UART_RX_SCL_MOSI_PIN)
 623:Generated_Source\PSoC4/UART.c ****                     hsiomSel[UART_RX_SCL_MOSI_PIN_INDEX] = UART_RX_SCL_MOSI_HSIOM_SEL_UART;
 624:Generated_Source\PSoC4/UART.c ****                     pinsDm  [UART_RX_SCL_MOSI_PIN_INDEX] = UART_PIN_DM_DIG_HIZ;
 625:Generated_Source\PSoC4/UART.c ****                 #elif (UART_RX_WAKE_SCL_MOSI_PIN)
 626:Generated_Source\PSoC4/UART.c ****                     hsiomSel[UART_RX_WAKE_SCL_MOSI_PIN_INDEX] = UART_RX_WAKE_SCL_MOSI_HSIOM_SEL_UAR
 627:Generated_Source\PSoC4/UART.c ****                     pinsDm  [UART_RX_WAKE_SCL_MOSI_PIN_INDEX] = UART_PIN_DM_DIG_HIZ;
 628:Generated_Source\PSoC4/UART.c ****                 #else
 629:Generated_Source\PSoC4/UART.c ****                 #endif /* (UART_RX_SCL_MOSI_PIN) */
 630:Generated_Source\PSoC4/UART.c ****                 }
 631:Generated_Source\PSoC4/UART.c **** 
 632:Generated_Source\PSoC4/UART.c ****                 if (0u != (UART_UART_TX_PIN_ENABLE & uartEnableMask))
 633:Generated_Source\PSoC4/UART.c ****                 {
 634:Generated_Source\PSoC4/UART.c ****                 #if (UART_TX_SDA_MISO_PIN)
 635:Generated_Source\PSoC4/UART.c ****                     hsiomSel[UART_TX_SDA_MISO_PIN_INDEX] = UART_TX_SDA_MISO_HSIOM_SEL_UART;
 636:Generated_Source\PSoC4/UART.c ****                     pinsDm  [UART_TX_SDA_MISO_PIN_INDEX] = UART_PIN_DM_STRONG;
 637:Generated_Source\PSoC4/UART.c ****                     
 638:Generated_Source\PSoC4/UART.c ****                     /* Disable input buffer */
 639:Generated_Source\PSoC4/UART.c ****                     pinsInBuf |= UART_TX_SDA_MISO_PIN_MASK;
 640:Generated_Source\PSoC4/UART.c ****                 #endif /* (UART_TX_SDA_MISO_PIN) */
 641:Generated_Source\PSoC4/UART.c ****                 }
 642:Generated_Source\PSoC4/UART.c **** 
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccv2rUUu.s 			page 19


 643:Generated_Source\PSoC4/UART.c ****             #if !(UART_CY_SCBIP_V0 || UART_CY_SCBIP_V1)
 644:Generated_Source\PSoC4/UART.c ****                 if (UART_UART_MODE_STD == subMode)
 645:Generated_Source\PSoC4/UART.c ****                 {
 646:Generated_Source\PSoC4/UART.c ****                     if (0u != (UART_UART_CTS_PIN_ENABLE & uartEnableMask))
 647:Generated_Source\PSoC4/UART.c ****                     {
 648:Generated_Source\PSoC4/UART.c ****                         /* CTS input is multiplexed with SCLK */
 649:Generated_Source\PSoC4/UART.c ****                     #if (UART_SCLK_PIN)
 650:Generated_Source\PSoC4/UART.c ****                         hsiomSel[UART_SCLK_PIN_INDEX] = UART_SCLK_HSIOM_SEL_UART;
 651:Generated_Source\PSoC4/UART.c ****                         pinsDm  [UART_SCLK_PIN_INDEX] = UART_PIN_DM_DIG_HIZ;
 652:Generated_Source\PSoC4/UART.c ****                     #endif /* (UART_SCLK_PIN) */
 653:Generated_Source\PSoC4/UART.c ****                     }
 654:Generated_Source\PSoC4/UART.c **** 
 655:Generated_Source\PSoC4/UART.c ****                     if (0u != (UART_UART_RTS_PIN_ENABLE & uartEnableMask))
 656:Generated_Source\PSoC4/UART.c ****                     {
 657:Generated_Source\PSoC4/UART.c ****                         /* RTS output is multiplexed with SS0 */
 658:Generated_Source\PSoC4/UART.c ****                     #if (UART_SS0_PIN)
 659:Generated_Source\PSoC4/UART.c ****                         hsiomSel[UART_SS0_PIN_INDEX] = UART_SS0_HSIOM_SEL_UART;
 660:Generated_Source\PSoC4/UART.c ****                         pinsDm  [UART_SS0_PIN_INDEX] = UART_PIN_DM_STRONG;
 661:Generated_Source\PSoC4/UART.c ****                         
 662:Generated_Source\PSoC4/UART.c ****                         /* Disable input buffer */
 663:Generated_Source\PSoC4/UART.c ****                         pinsInBuf |= UART_SS0_PIN_MASK;
 664:Generated_Source\PSoC4/UART.c ****                     #endif /* (UART_SS0_PIN) */
 665:Generated_Source\PSoC4/UART.c ****                     }
 666:Generated_Source\PSoC4/UART.c ****                 }
 667:Generated_Source\PSoC4/UART.c ****             #endif /* !(UART_CY_SCBIP_V0 || UART_CY_SCBIP_V1) */
 668:Generated_Source\PSoC4/UART.c ****             }
 669:Generated_Source\PSoC4/UART.c ****         }
 670:Generated_Source\PSoC4/UART.c ****     #endif /* (!UART_CY_SCBIP_V1) */
 671:Generated_Source\PSoC4/UART.c **** 
 672:Generated_Source\PSoC4/UART.c ****     /* Configure pins: set HSIOM, DM and InputBufEnable */
 673:Generated_Source\PSoC4/UART.c ****     /* Note: the DR register settings do not effect the pin output if HSIOM is other than GPIO */
 674:Generated_Source\PSoC4/UART.c **** 
 675:Generated_Source\PSoC4/UART.c ****     #if (UART_RX_SCL_MOSI_PIN)
 676:Generated_Source\PSoC4/UART.c ****         UART_SET_HSIOM_SEL(UART_RX_SCL_MOSI_HSIOM_REG,
 677:Generated_Source\PSoC4/UART.c ****                                        UART_RX_SCL_MOSI_HSIOM_MASK,
 678:Generated_Source\PSoC4/UART.c ****                                        UART_RX_SCL_MOSI_HSIOM_POS,
 679:Generated_Source\PSoC4/UART.c ****                                         hsiomSel[UART_RX_SCL_MOSI_PIN_INDEX]);
 680:Generated_Source\PSoC4/UART.c **** 
 681:Generated_Source\PSoC4/UART.c ****         UART_uart_rx_i2c_scl_spi_mosi_SetDriveMode((uint8) pinsDm[UART_RX_SCL_MOSI_PIN_INDEX]);
 682:Generated_Source\PSoC4/UART.c **** 
 683:Generated_Source\PSoC4/UART.c ****         #if (!UART_CY_SCBIP_V1)
 684:Generated_Source\PSoC4/UART.c ****             UART_SET_INP_DIS(UART_uart_rx_i2c_scl_spi_mosi_INP_DIS,
 685:Generated_Source\PSoC4/UART.c ****                                          UART_uart_rx_i2c_scl_spi_mosi_MASK,
 686:Generated_Source\PSoC4/UART.c ****                                          (0u != (pinsInBuf & UART_RX_SCL_MOSI_PIN_MASK)));
 687:Generated_Source\PSoC4/UART.c ****         #endif /* (!UART_CY_SCBIP_V1) */
 688:Generated_Source\PSoC4/UART.c ****     
 689:Generated_Source\PSoC4/UART.c ****     #elif (UART_RX_WAKE_SCL_MOSI_PIN)
 690:Generated_Source\PSoC4/UART.c ****         UART_SET_HSIOM_SEL(UART_RX_WAKE_SCL_MOSI_HSIOM_REG,
 691:Generated_Source\PSoC4/UART.c ****                                        UART_RX_WAKE_SCL_MOSI_HSIOM_MASK,
 692:Generated_Source\PSoC4/UART.c ****                                        UART_RX_WAKE_SCL_MOSI_HSIOM_POS,
 693:Generated_Source\PSoC4/UART.c ****                                        hsiomSel[UART_RX_WAKE_SCL_MOSI_PIN_INDEX]);
 694:Generated_Source\PSoC4/UART.c **** 
 695:Generated_Source\PSoC4/UART.c ****         UART_uart_rx_wake_i2c_scl_spi_mosi_SetDriveMode((uint8)
 696:Generated_Source\PSoC4/UART.c ****                                                                pinsDm[UART_RX_WAKE_SCL_MOSI_PIN_IND
 697:Generated_Source\PSoC4/UART.c **** 
 698:Generated_Source\PSoC4/UART.c ****         UART_SET_INP_DIS(UART_uart_rx_wake_i2c_scl_spi_mosi_INP_DIS,
 699:Generated_Source\PSoC4/UART.c ****                                      UART_uart_rx_wake_i2c_scl_spi_mosi_MASK,
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccv2rUUu.s 			page 20


 700:Generated_Source\PSoC4/UART.c ****                                      (0u != (pinsInBuf & UART_RX_WAKE_SCL_MOSI_PIN_MASK)));
 701:Generated_Source\PSoC4/UART.c **** 
 702:Generated_Source\PSoC4/UART.c ****          /* Set interrupt on falling edge */
 703:Generated_Source\PSoC4/UART.c ****         UART_SET_INCFG_TYPE(UART_RX_WAKE_SCL_MOSI_INTCFG_REG,
 704:Generated_Source\PSoC4/UART.c ****                                         UART_RX_WAKE_SCL_MOSI_INTCFG_TYPE_MASK,
 705:Generated_Source\PSoC4/UART.c ****                                         UART_RX_WAKE_SCL_MOSI_INTCFG_TYPE_POS,
 706:Generated_Source\PSoC4/UART.c ****                                         UART_INTCFG_TYPE_FALLING_EDGE);
 707:Generated_Source\PSoC4/UART.c ****     #else
 708:Generated_Source\PSoC4/UART.c ****     #endif /* (UART_RX_WAKE_SCL_MOSI_PIN) */
 709:Generated_Source\PSoC4/UART.c **** 
 710:Generated_Source\PSoC4/UART.c ****     #if (UART_TX_SDA_MISO_PIN)
 711:Generated_Source\PSoC4/UART.c ****         UART_SET_HSIOM_SEL(UART_TX_SDA_MISO_HSIOM_REG,
 712:Generated_Source\PSoC4/UART.c ****                                        UART_TX_SDA_MISO_HSIOM_MASK,
 713:Generated_Source\PSoC4/UART.c ****                                        UART_TX_SDA_MISO_HSIOM_POS,
 714:Generated_Source\PSoC4/UART.c ****                                         hsiomSel[UART_TX_SDA_MISO_PIN_INDEX]);
 715:Generated_Source\PSoC4/UART.c **** 
 716:Generated_Source\PSoC4/UART.c ****         UART_uart_tx_i2c_sda_spi_miso_SetDriveMode((uint8) pinsDm[UART_TX_SDA_MISO_PIN_INDEX]);
 717:Generated_Source\PSoC4/UART.c **** 
 718:Generated_Source\PSoC4/UART.c ****     #if (!UART_CY_SCBIP_V1)
 719:Generated_Source\PSoC4/UART.c ****         UART_SET_INP_DIS(UART_uart_tx_i2c_sda_spi_miso_INP_DIS,
 720:Generated_Source\PSoC4/UART.c ****                                      UART_uart_tx_i2c_sda_spi_miso_MASK,
 721:Generated_Source\PSoC4/UART.c ****                                     (0u != (pinsInBuf & UART_TX_SDA_MISO_PIN_MASK)));
 722:Generated_Source\PSoC4/UART.c ****     #endif /* (!UART_CY_SCBIP_V1) */
 723:Generated_Source\PSoC4/UART.c ****     #endif /* (UART_RX_SCL_MOSI_PIN) */
 724:Generated_Source\PSoC4/UART.c **** 
 725:Generated_Source\PSoC4/UART.c ****     #if (UART_SCLK_PIN)
 726:Generated_Source\PSoC4/UART.c ****         UART_SET_HSIOM_SEL(UART_SCLK_HSIOM_REG,
 727:Generated_Source\PSoC4/UART.c ****                                        UART_SCLK_HSIOM_MASK,
 728:Generated_Source\PSoC4/UART.c ****                                        UART_SCLK_HSIOM_POS,
 729:Generated_Source\PSoC4/UART.c ****                                        hsiomSel[UART_SCLK_PIN_INDEX]);
 730:Generated_Source\PSoC4/UART.c **** 
 731:Generated_Source\PSoC4/UART.c ****         UART_spi_sclk_SetDriveMode((uint8) pinsDm[UART_SCLK_PIN_INDEX]);
 732:Generated_Source\PSoC4/UART.c **** 
 733:Generated_Source\PSoC4/UART.c ****         UART_SET_INP_DIS(UART_spi_sclk_INP_DIS,
 734:Generated_Source\PSoC4/UART.c ****                                      UART_spi_sclk_MASK,
 735:Generated_Source\PSoC4/UART.c ****                                      (0u != (pinsInBuf & UART_SCLK_PIN_MASK)));
 736:Generated_Source\PSoC4/UART.c ****     #endif /* (UART_SCLK_PIN) */
 737:Generated_Source\PSoC4/UART.c **** 
 738:Generated_Source\PSoC4/UART.c ****     #if (UART_SS0_PIN)
 739:Generated_Source\PSoC4/UART.c ****         UART_SET_HSIOM_SEL(UART_SS0_HSIOM_REG,
 740:Generated_Source\PSoC4/UART.c ****                                        UART_SS0_HSIOM_MASK,
 741:Generated_Source\PSoC4/UART.c ****                                        UART_SS0_HSIOM_POS,
 742:Generated_Source\PSoC4/UART.c ****                                        hsiomSel[UART_SS0_PIN_INDEX]);
 743:Generated_Source\PSoC4/UART.c **** 
 744:Generated_Source\PSoC4/UART.c ****         UART_spi_ss0_SetDriveMode((uint8) pinsDm[UART_SS0_PIN_INDEX]);
 745:Generated_Source\PSoC4/UART.c **** 
 746:Generated_Source\PSoC4/UART.c ****         UART_SET_INP_DIS(UART_spi_ss0_INP_DIS,
 747:Generated_Source\PSoC4/UART.c ****                                      UART_spi_ss0_MASK,
 748:Generated_Source\PSoC4/UART.c ****                                      (0u != (pinsInBuf & UART_SS0_PIN_MASK)));
 749:Generated_Source\PSoC4/UART.c ****     #endif /* (UART_SS0_PIN) */
 750:Generated_Source\PSoC4/UART.c **** 
 751:Generated_Source\PSoC4/UART.c ****     #if (UART_SS1_PIN)
 752:Generated_Source\PSoC4/UART.c ****         UART_SET_HSIOM_SEL(UART_SS1_HSIOM_REG,
 753:Generated_Source\PSoC4/UART.c ****                                        UART_SS1_HSIOM_MASK,
 754:Generated_Source\PSoC4/UART.c ****                                        UART_SS1_HSIOM_POS,
 755:Generated_Source\PSoC4/UART.c ****                                        hsiomSel[UART_SS1_PIN_INDEX]);
 756:Generated_Source\PSoC4/UART.c **** 
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccv2rUUu.s 			page 21


 757:Generated_Source\PSoC4/UART.c ****         UART_spi_ss1_SetDriveMode((uint8) pinsDm[UART_SS1_PIN_INDEX]);
 758:Generated_Source\PSoC4/UART.c **** 
 759:Generated_Source\PSoC4/UART.c ****         UART_SET_INP_DIS(UART_spi_ss1_INP_DIS,
 760:Generated_Source\PSoC4/UART.c ****                                      UART_spi_ss1_MASK,
 761:Generated_Source\PSoC4/UART.c ****                                      (0u != (pinsInBuf & UART_SS1_PIN_MASK)));
 762:Generated_Source\PSoC4/UART.c ****     #endif /* (UART_SS1_PIN) */
 763:Generated_Source\PSoC4/UART.c **** 
 764:Generated_Source\PSoC4/UART.c ****     #if (UART_SS2_PIN)
 765:Generated_Source\PSoC4/UART.c ****         UART_SET_HSIOM_SEL(UART_SS2_HSIOM_REG,
 766:Generated_Source\PSoC4/UART.c ****                                        UART_SS2_HSIOM_MASK,
 767:Generated_Source\PSoC4/UART.c ****                                        UART_SS2_HSIOM_POS,
 768:Generated_Source\PSoC4/UART.c ****                                        hsiomSel[UART_SS2_PIN_INDEX]);
 769:Generated_Source\PSoC4/UART.c **** 
 770:Generated_Source\PSoC4/UART.c ****         UART_spi_ss2_SetDriveMode((uint8) pinsDm[UART_SS2_PIN_INDEX]);
 771:Generated_Source\PSoC4/UART.c **** 
 772:Generated_Source\PSoC4/UART.c ****         UART_SET_INP_DIS(UART_spi_ss2_INP_DIS,
 773:Generated_Source\PSoC4/UART.c ****                                      UART_spi_ss2_MASK,
 774:Generated_Source\PSoC4/UART.c ****                                      (0u != (pinsInBuf & UART_SS2_PIN_MASK)));
 775:Generated_Source\PSoC4/UART.c ****     #endif /* (UART_SS2_PIN) */
 776:Generated_Source\PSoC4/UART.c **** 
 777:Generated_Source\PSoC4/UART.c ****     #if (UART_SS3_PIN)
 778:Generated_Source\PSoC4/UART.c ****         UART_SET_HSIOM_SEL(UART_SS3_HSIOM_REG,
 779:Generated_Source\PSoC4/UART.c ****                                        UART_SS3_HSIOM_MASK,
 780:Generated_Source\PSoC4/UART.c ****                                        UART_SS3_HSIOM_POS,
 781:Generated_Source\PSoC4/UART.c ****                                        hsiomSel[UART_SS3_PIN_INDEX]);
 782:Generated_Source\PSoC4/UART.c **** 
 783:Generated_Source\PSoC4/UART.c ****         UART_spi_ss3_SetDriveMode((uint8) pinsDm[UART_SS3_PIN_INDEX]);
 784:Generated_Source\PSoC4/UART.c **** 
 785:Generated_Source\PSoC4/UART.c ****         UART_SET_INP_DIS(UART_spi_ss3_INP_DIS,
 786:Generated_Source\PSoC4/UART.c ****                                      UART_spi_ss3_MASK,
 787:Generated_Source\PSoC4/UART.c ****                                      (0u != (pinsInBuf & UART_SS3_PIN_MASK)));
 788:Generated_Source\PSoC4/UART.c ****     #endif /* (UART_SS3_PIN) */
 789:Generated_Source\PSoC4/UART.c ****     }
 790:Generated_Source\PSoC4/UART.c **** 
 791:Generated_Source\PSoC4/UART.c **** #endif /* (UART_SCB_MODE_UNCONFIG_CONST_CFG) */
 792:Generated_Source\PSoC4/UART.c **** 
 793:Generated_Source\PSoC4/UART.c **** 
 794:Generated_Source\PSoC4/UART.c **** #if (UART_CY_SCBIP_V0 || UART_CY_SCBIP_V1)
 795:Generated_Source\PSoC4/UART.c ****     /*******************************************************************************
 796:Generated_Source\PSoC4/UART.c ****     * Function Name: UART_I2CSlaveNackGeneration
 797:Generated_Source\PSoC4/UART.c ****     ****************************************************************************//**
 798:Generated_Source\PSoC4/UART.c ****     *
 799:Generated_Source\PSoC4/UART.c ****     *  Sets command to generate NACK to the address or data.
 800:Generated_Source\PSoC4/UART.c ****     *
 801:Generated_Source\PSoC4/UART.c ****     *******************************************************************************/
 802:Generated_Source\PSoC4/UART.c ****     void UART_I2CSlaveNackGeneration(void)
 803:Generated_Source\PSoC4/UART.c ****     {
 385              		.loc 1 803 0
 386              		.cfi_startproc
 387              		@ args = 0, pretend = 0, frame = 0
 388              		@ frame_needed = 1, uses_anonymous_args = 0
 389 0000 80B5     		push	{r7, lr}
 390              		.cfi_def_cfa_offset 8
 391              		.cfi_offset 7, -8
 392              		.cfi_offset 14, -4
 393 0002 00AF     		add	r7, sp, #0
 394              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccv2rUUu.s 			page 22


 804:Generated_Source\PSoC4/UART.c ****         /* Check for EC_AM toggle condition: EC_AM and clock stretching for address are enabled */
 805:Generated_Source\PSoC4/UART.c ****         if ((0u != (UART_CTRL_REG & UART_CTRL_EC_AM_MODE)) &&
 395              		.loc 1 805 0
 396 0004 0F4B     		ldr	r3, .L23
 397 0006 1A68     		ldr	r2, [r3]
 398 0008 8023     		movs	r3, #128
 399 000a 5B00     		lsls	r3, r3, #1
 400 000c 1340     		ands	r3, r2
 401 000e 12D0     		beq	.L22
 806:Generated_Source\PSoC4/UART.c ****             (0u == (UART_I2C_CTRL_REG & UART_I2C_CTRL_S_NOT_READY_ADDR_NACK)))
 402              		.loc 1 806 0 discriminator 1
 403 0010 0D4B     		ldr	r3, .L23+4
 404 0012 1A68     		ldr	r2, [r3]
 405 0014 8023     		movs	r3, #128
 406 0016 DB01     		lsls	r3, r3, #7
 407 0018 1340     		ands	r3, r2
 805:Generated_Source\PSoC4/UART.c ****             (0u == (UART_I2C_CTRL_REG & UART_I2C_CTRL_S_NOT_READY_ADDR_NACK)))
 408              		.loc 1 805 0 discriminator 1
 409 001a 0CD1     		bne	.L22
 807:Generated_Source\PSoC4/UART.c ****         {
 808:Generated_Source\PSoC4/UART.c ****             /* Toggle EC_AM before NACK generation */
 809:Generated_Source\PSoC4/UART.c ****             UART_CTRL_REG &= ~UART_CTRL_EC_AM_MODE;
 410              		.loc 1 809 0
 411 001c 094B     		ldr	r3, .L23
 412 001e 094A     		ldr	r2, .L23
 413 0020 1268     		ldr	r2, [r2]
 414 0022 0A49     		ldr	r1, .L23+8
 415 0024 0A40     		ands	r2, r1
 416 0026 1A60     		str	r2, [r3]
 810:Generated_Source\PSoC4/UART.c ****             UART_CTRL_REG |=  UART_CTRL_EC_AM_MODE;
 417              		.loc 1 810 0
 418 0028 064B     		ldr	r3, .L23
 419 002a 064A     		ldr	r2, .L23
 420 002c 1268     		ldr	r2, [r2]
 421 002e 8021     		movs	r1, #128
 422 0030 4900     		lsls	r1, r1, #1
 423 0032 0A43     		orrs	r2, r1
 424 0034 1A60     		str	r2, [r3]
 425              	.L22:
 811:Generated_Source\PSoC4/UART.c ****         }
 812:Generated_Source\PSoC4/UART.c **** 
 813:Generated_Source\PSoC4/UART.c ****         UART_I2C_SLAVE_CMD_REG = UART_I2C_SLAVE_CMD_S_NACK;
 426              		.loc 1 813 0
 427 0036 064B     		ldr	r3, .L23+12
 428 0038 0222     		movs	r2, #2
 429 003a 1A60     		str	r2, [r3]
 814:Generated_Source\PSoC4/UART.c ****     }
 430              		.loc 1 814 0
 431 003c C046     		nop
 432 003e BD46     		mov	sp, r7
 433              		@ sp needed
 434 0040 80BD     		pop	{r7, pc}
 435              	.L24:
 436 0042 C046     		.align	2
 437              	.L23:
 438 0044 00000640 		.word	1074135040
 439 0048 60000640 		.word	1074135136
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccv2rUUu.s 			page 23


 440 004c FFFEFFFF 		.word	-257
 441 0050 6C000640 		.word	1074135148
 442              		.cfi_endproc
 443              	.LFE9:
 444              		.size	UART_I2CSlaveNackGeneration, .-UART_I2CSlaveNackGeneration
 445              		.text
 446              	.Letext0:
 447              		.file 2 "Generated_Source\\PSoC4/cytypes.h"
 448              		.section	.debug_info,"",%progbits
 449              	.Ldebug_info0:
 450 0000 D8010000 		.4byte	0x1d8
 451 0004 0400     		.2byte	0x4
 452 0006 00000000 		.4byte	.Ldebug_abbrev0
 453 000a 04       		.byte	0x4
 454 000b 01       		.uleb128 0x1
 455 000c 1A010000 		.4byte	.LASF33
 456 0010 0C       		.byte	0xc
 457 0011 B6010000 		.4byte	.LASF34
 458 0015 72000000 		.4byte	.LASF35
 459 0019 00000000 		.4byte	.Ldebug_ranges0+0
 460 001d 00000000 		.4byte	0
 461 0021 00000000 		.4byte	.Ldebug_line0
 462 0025 02       		.uleb128 0x2
 463 0026 01       		.byte	0x1
 464 0027 06       		.byte	0x6
 465 0028 87020000 		.4byte	.LASF0
 466 002c 02       		.uleb128 0x2
 467 002d 01       		.byte	0x1
 468 002e 08       		.byte	0x8
 469 002f DF000000 		.4byte	.LASF1
 470 0033 02       		.uleb128 0x2
 471 0034 02       		.byte	0x2
 472 0035 05       		.byte	0x5
 473 0036 4A020000 		.4byte	.LASF2
 474 003a 02       		.uleb128 0x2
 475 003b 02       		.byte	0x2
 476 003c 07       		.byte	0x7
 477 003d 52000000 		.4byte	.LASF3
 478 0041 02       		.uleb128 0x2
 479 0042 04       		.byte	0x4
 480 0043 05       		.byte	0x5
 481 0044 72020000 		.4byte	.LASF4
 482 0048 02       		.uleb128 0x2
 483 0049 04       		.byte	0x4
 484 004a 07       		.byte	0x7
 485 004b F7000000 		.4byte	.LASF5
 486 004f 02       		.uleb128 0x2
 487 0050 08       		.byte	0x8
 488 0051 05       		.byte	0x5
 489 0052 23020000 		.4byte	.LASF6
 490 0056 02       		.uleb128 0x2
 491 0057 08       		.byte	0x8
 492 0058 07       		.byte	0x7
 493 0059 F9010000 		.4byte	.LASF7
 494 005d 03       		.uleb128 0x3
 495 005e 04       		.byte	0x4
 496 005f 05       		.byte	0x5
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccv2rUUu.s 			page 24


 497 0060 696E7400 		.ascii	"int\000"
 498 0064 02       		.uleb128 0x2
 499 0065 04       		.byte	0x4
 500 0066 07       		.byte	0x7
 501 0067 EC010000 		.4byte	.LASF8
 502 006b 04       		.uleb128 0x4
 503 006c 09010000 		.4byte	.LASF9
 504 0070 02       		.byte	0x2
 505 0071 E401     		.2byte	0x1e4
 506 0073 2C000000 		.4byte	0x2c
 507 0077 04       		.uleb128 0x4
 508 0078 AF010000 		.4byte	.LASF10
 509 007c 02       		.byte	0x2
 510 007d E501     		.2byte	0x1e5
 511 007f 3A000000 		.4byte	0x3a
 512 0083 04       		.uleb128 0x4
 513 0084 D4010000 		.4byte	.LASF11
 514 0088 02       		.byte	0x2
 515 0089 E601     		.2byte	0x1e6
 516 008b 48000000 		.4byte	0x48
 517 008f 02       		.uleb128 0x2
 518 0090 04       		.byte	0x4
 519 0091 04       		.byte	0x4
 520 0092 CD000000 		.4byte	.LASF12
 521 0096 02       		.uleb128 0x2
 522 0097 08       		.byte	0x8
 523 0098 04       		.byte	0x4
 524 0099 A8010000 		.4byte	.LASF13
 525 009d 02       		.uleb128 0x2
 526 009e 01       		.byte	0x1
 527 009f 08       		.byte	0x8
 528 00a0 45020000 		.4byte	.LASF14
 529 00a4 04       		.uleb128 0x4
 530 00a5 00000000 		.4byte	.LASF15
 531 00a9 02       		.byte	0x2
 532 00aa 9002     		.2byte	0x290
 533 00ac B0000000 		.4byte	0xb0
 534 00b0 05       		.uleb128 0x5
 535 00b1 83000000 		.4byte	0x83
 536 00b5 02       		.uleb128 0x2
 537 00b6 08       		.byte	0x8
 538 00b7 04       		.byte	0x4
 539 00b8 7B020000 		.4byte	.LASF16
 540 00bc 02       		.uleb128 0x2
 541 00bd 04       		.byte	0x4
 542 00be 07       		.byte	0x7
 543 00bf 1A020000 		.4byte	.LASF17
 544 00c3 06       		.uleb128 0x6
 545 00c4 ED000000 		.4byte	.LASF18
 546 00c8 01       		.byte	0x1
 547 00c9 7B       		.byte	0x7b
 548 00ca 00000000 		.4byte	.LFB0
 549 00ce 0E000000 		.4byte	.LFE0-.LFB0
 550 00d2 01       		.uleb128 0x1
 551 00d3 9C       		.byte	0x9c
 552 00d4 06       		.uleb128 0x6
 553 00d5 D3000000 		.4byte	.LASF19
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccv2rUUu.s 			page 25


 554 00d9 01       		.byte	0x1
 555 00da AB       		.byte	0xab
 556 00db 00000000 		.4byte	.LFB1
 557 00df 24000000 		.4byte	.LFE1-.LFB1
 558 00e3 01       		.uleb128 0x1
 559 00e4 9C       		.byte	0x9c
 560 00e5 06       		.uleb128 0x6
 561 00e6 0F010000 		.4byte	.LASF20
 562 00ea 01       		.byte	0x1
 563 00eb D2       		.byte	0xd2
 564 00ec 00000000 		.4byte	.LFB2
 565 00f0 24000000 		.4byte	.LFE2-.LFB2
 566 00f4 01       		.uleb128 0x1
 567 00f5 9C       		.byte	0x9c
 568 00f6 06       		.uleb128 0x6
 569 00f7 10020000 		.4byte	.LASF21
 570 00fb 01       		.byte	0x1
 571 00fc EF       		.byte	0xef
 572 00fd 00000000 		.4byte	.LFB3
 573 0101 28000000 		.4byte	.LFE3-.LFB3
 574 0105 01       		.uleb128 0x1
 575 0106 9C       		.byte	0x9c
 576 0107 07       		.uleb128 0x7
 577 0108 31020000 		.4byte	.LASF22
 578 010c 01       		.byte	0x1
 579 010d 1701     		.2byte	0x117
 580 010f 00000000 		.4byte	.LFB4
 581 0113 34000000 		.4byte	.LFE4-.LFB4
 582 0117 01       		.uleb128 0x1
 583 0118 9C       		.byte	0x9c
 584 0119 3C010000 		.4byte	0x13c
 585 011d 08       		.uleb128 0x8
 586 011e 35000000 		.4byte	.LASF24
 587 0122 01       		.byte	0x1
 588 0123 1701     		.2byte	0x117
 589 0125 83000000 		.4byte	0x83
 590 0129 02       		.uleb128 0x2
 591 012a 91       		.byte	0x91
 592 012b 6C       		.sleb128 -20
 593 012c 09       		.uleb128 0x9
 594 012d 67020000 		.4byte	.LASF25
 595 0131 01       		.byte	0x1
 596 0132 1901     		.2byte	0x119
 597 0134 83000000 		.4byte	0x83
 598 0138 02       		.uleb128 0x2
 599 0139 91       		.byte	0x91
 600 013a 74       		.sleb128 -12
 601 013b 00       		.byte	0
 602 013c 07       		.uleb128 0x7
 603 013d 21000000 		.4byte	.LASF23
 604 0141 01       		.byte	0x1
 605 0142 3001     		.2byte	0x130
 606 0144 00000000 		.4byte	.LFB5
 607 0148 34000000 		.4byte	.LFE5-.LFB5
 608 014c 01       		.uleb128 0x1
 609 014d 9C       		.byte	0x9c
 610 014e 71010000 		.4byte	0x171
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccv2rUUu.s 			page 26


 611 0152 08       		.uleb128 0x8
 612 0153 35000000 		.4byte	.LASF24
 613 0157 01       		.byte	0x1
 614 0158 3001     		.2byte	0x130
 615 015a 83000000 		.4byte	0x83
 616 015e 02       		.uleb128 0x2
 617 015f 91       		.byte	0x91
 618 0160 6C       		.sleb128 -20
 619 0161 09       		.uleb128 0x9
 620 0162 06000000 		.4byte	.LASF26
 621 0166 01       		.byte	0x1
 622 0167 3201     		.2byte	0x132
 623 0169 83000000 		.4byte	0x83
 624 016d 02       		.uleb128 0x2
 625 016e 91       		.byte	0x91
 626 016f 74       		.sleb128 -12
 627 0170 00       		.byte	0
 628 0171 0A       		.uleb128 0xa
 629 0172 54020000 		.4byte	.LASF27
 630 0176 01       		.byte	0x1
 631 0177 6401     		.2byte	0x164
 632 0179 00000000 		.4byte	.LFB6
 633 017d 0A000000 		.4byte	.LFE6-.LFB6
 634 0181 01       		.uleb128 0x1
 635 0182 9C       		.byte	0x9c
 636 0183 0B       		.uleb128 0xb
 637 0184 3B000000 		.4byte	.LASF28
 638 0188 01       		.byte	0x1
 639 0189 7D01     		.2byte	0x17d
 640 018b 00000000 		.4byte	.LFB7
 641 018f 0E000000 		.4byte	.LFE7-.LFB7
 642 0193 01       		.uleb128 0x1
 643 0194 9C       		.byte	0x9c
 644 0195 0B       		.uleb128 0xb
 645 0196 DB010000 		.4byte	.LASF29
 646 019a 01       		.byte	0x1
 647 019b A201     		.2byte	0x1a2
 648 019d 00000000 		.4byte	.LFB8
 649 01a1 0E000000 		.4byte	.LFE8-.LFB8
 650 01a5 01       		.uleb128 0x1
 651 01a6 9C       		.byte	0x9c
 652 01a7 0C       		.uleb128 0xc
 653 01a8 93020000 		.4byte	.LASF30
 654 01ac 01       		.byte	0x1
 655 01ad 2203     		.2byte	0x322
 656 01af 00000000 		.4byte	.LFB9
 657 01b3 54000000 		.4byte	.LFE9-.LFB9
 658 01b7 01       		.uleb128 0x1
 659 01b8 9C       		.byte	0x9c
 660 01b9 0D       		.uleb128 0xd
 661 01ba 65000000 		.4byte	.LASF31
 662 01be 01       		.byte	0x1
 663 01bf 51       		.byte	0x51
 664 01c0 6B000000 		.4byte	0x6b
 665 01c4 05       		.uleb128 0x5
 666 01c5 03       		.byte	0x3
 667 01c6 00000000 		.4byte	UART_initVar
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccv2rUUu.s 			page 27


 668 01ca 0D       		.uleb128 0xd
 669 01cb 11000000 		.4byte	.LASF32
 670 01cf 01       		.byte	0x1
 671 01d0 5A       		.byte	0x5a
 672 01d1 77000000 		.4byte	0x77
 673 01d5 05       		.uleb128 0x5
 674 01d6 03       		.byte	0x3
 675 01d7 00000000 		.4byte	UART_IntrTxMask
 676 01db 00       		.byte	0
 677              		.section	.debug_abbrev,"",%progbits
 678              	.Ldebug_abbrev0:
 679 0000 01       		.uleb128 0x1
 680 0001 11       		.uleb128 0x11
 681 0002 01       		.byte	0x1
 682 0003 25       		.uleb128 0x25
 683 0004 0E       		.uleb128 0xe
 684 0005 13       		.uleb128 0x13
 685 0006 0B       		.uleb128 0xb
 686 0007 03       		.uleb128 0x3
 687 0008 0E       		.uleb128 0xe
 688 0009 1B       		.uleb128 0x1b
 689 000a 0E       		.uleb128 0xe
 690 000b 55       		.uleb128 0x55
 691 000c 17       		.uleb128 0x17
 692 000d 11       		.uleb128 0x11
 693 000e 01       		.uleb128 0x1
 694 000f 10       		.uleb128 0x10
 695 0010 17       		.uleb128 0x17
 696 0011 00       		.byte	0
 697 0012 00       		.byte	0
 698 0013 02       		.uleb128 0x2
 699 0014 24       		.uleb128 0x24
 700 0015 00       		.byte	0
 701 0016 0B       		.uleb128 0xb
 702 0017 0B       		.uleb128 0xb
 703 0018 3E       		.uleb128 0x3e
 704 0019 0B       		.uleb128 0xb
 705 001a 03       		.uleb128 0x3
 706 001b 0E       		.uleb128 0xe
 707 001c 00       		.byte	0
 708 001d 00       		.byte	0
 709 001e 03       		.uleb128 0x3
 710 001f 24       		.uleb128 0x24
 711 0020 00       		.byte	0
 712 0021 0B       		.uleb128 0xb
 713 0022 0B       		.uleb128 0xb
 714 0023 3E       		.uleb128 0x3e
 715 0024 0B       		.uleb128 0xb
 716 0025 03       		.uleb128 0x3
 717 0026 08       		.uleb128 0x8
 718 0027 00       		.byte	0
 719 0028 00       		.byte	0
 720 0029 04       		.uleb128 0x4
 721 002a 16       		.uleb128 0x16
 722 002b 00       		.byte	0
 723 002c 03       		.uleb128 0x3
 724 002d 0E       		.uleb128 0xe
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccv2rUUu.s 			page 28


 725 002e 3A       		.uleb128 0x3a
 726 002f 0B       		.uleb128 0xb
 727 0030 3B       		.uleb128 0x3b
 728 0031 05       		.uleb128 0x5
 729 0032 49       		.uleb128 0x49
 730 0033 13       		.uleb128 0x13
 731 0034 00       		.byte	0
 732 0035 00       		.byte	0
 733 0036 05       		.uleb128 0x5
 734 0037 35       		.uleb128 0x35
 735 0038 00       		.byte	0
 736 0039 49       		.uleb128 0x49
 737 003a 13       		.uleb128 0x13
 738 003b 00       		.byte	0
 739 003c 00       		.byte	0
 740 003d 06       		.uleb128 0x6
 741 003e 2E       		.uleb128 0x2e
 742 003f 00       		.byte	0
 743 0040 3F       		.uleb128 0x3f
 744 0041 19       		.uleb128 0x19
 745 0042 03       		.uleb128 0x3
 746 0043 0E       		.uleb128 0xe
 747 0044 3A       		.uleb128 0x3a
 748 0045 0B       		.uleb128 0xb
 749 0046 3B       		.uleb128 0x3b
 750 0047 0B       		.uleb128 0xb
 751 0048 27       		.uleb128 0x27
 752 0049 19       		.uleb128 0x19
 753 004a 11       		.uleb128 0x11
 754 004b 01       		.uleb128 0x1
 755 004c 12       		.uleb128 0x12
 756 004d 06       		.uleb128 0x6
 757 004e 40       		.uleb128 0x40
 758 004f 18       		.uleb128 0x18
 759 0050 9642     		.uleb128 0x2116
 760 0052 19       		.uleb128 0x19
 761 0053 00       		.byte	0
 762 0054 00       		.byte	0
 763 0055 07       		.uleb128 0x7
 764 0056 2E       		.uleb128 0x2e
 765 0057 01       		.byte	0x1
 766 0058 3F       		.uleb128 0x3f
 767 0059 19       		.uleb128 0x19
 768 005a 03       		.uleb128 0x3
 769 005b 0E       		.uleb128 0xe
 770 005c 3A       		.uleb128 0x3a
 771 005d 0B       		.uleb128 0xb
 772 005e 3B       		.uleb128 0x3b
 773 005f 05       		.uleb128 0x5
 774 0060 27       		.uleb128 0x27
 775 0061 19       		.uleb128 0x19
 776 0062 11       		.uleb128 0x11
 777 0063 01       		.uleb128 0x1
 778 0064 12       		.uleb128 0x12
 779 0065 06       		.uleb128 0x6
 780 0066 40       		.uleb128 0x40
 781 0067 18       		.uleb128 0x18
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccv2rUUu.s 			page 29


 782 0068 9742     		.uleb128 0x2117
 783 006a 19       		.uleb128 0x19
 784 006b 01       		.uleb128 0x1
 785 006c 13       		.uleb128 0x13
 786 006d 00       		.byte	0
 787 006e 00       		.byte	0
 788 006f 08       		.uleb128 0x8
 789 0070 05       		.uleb128 0x5
 790 0071 00       		.byte	0
 791 0072 03       		.uleb128 0x3
 792 0073 0E       		.uleb128 0xe
 793 0074 3A       		.uleb128 0x3a
 794 0075 0B       		.uleb128 0xb
 795 0076 3B       		.uleb128 0x3b
 796 0077 05       		.uleb128 0x5
 797 0078 49       		.uleb128 0x49
 798 0079 13       		.uleb128 0x13
 799 007a 02       		.uleb128 0x2
 800 007b 18       		.uleb128 0x18
 801 007c 00       		.byte	0
 802 007d 00       		.byte	0
 803 007e 09       		.uleb128 0x9
 804 007f 34       		.uleb128 0x34
 805 0080 00       		.byte	0
 806 0081 03       		.uleb128 0x3
 807 0082 0E       		.uleb128 0xe
 808 0083 3A       		.uleb128 0x3a
 809 0084 0B       		.uleb128 0xb
 810 0085 3B       		.uleb128 0x3b
 811 0086 05       		.uleb128 0x5
 812 0087 49       		.uleb128 0x49
 813 0088 13       		.uleb128 0x13
 814 0089 02       		.uleb128 0x2
 815 008a 18       		.uleb128 0x18
 816 008b 00       		.byte	0
 817 008c 00       		.byte	0
 818 008d 0A       		.uleb128 0xa
 819 008e 2E       		.uleb128 0x2e
 820 008f 00       		.byte	0
 821 0090 03       		.uleb128 0x3
 822 0091 0E       		.uleb128 0xe
 823 0092 3A       		.uleb128 0x3a
 824 0093 0B       		.uleb128 0xb
 825 0094 3B       		.uleb128 0x3b
 826 0095 05       		.uleb128 0x5
 827 0096 27       		.uleb128 0x27
 828 0097 19       		.uleb128 0x19
 829 0098 11       		.uleb128 0x11
 830 0099 01       		.uleb128 0x1
 831 009a 12       		.uleb128 0x12
 832 009b 06       		.uleb128 0x6
 833 009c 40       		.uleb128 0x40
 834 009d 18       		.uleb128 0x18
 835 009e 9742     		.uleb128 0x2117
 836 00a0 19       		.uleb128 0x19
 837 00a1 00       		.byte	0
 838 00a2 00       		.byte	0
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccv2rUUu.s 			page 30


 839 00a3 0B       		.uleb128 0xb
 840 00a4 2E       		.uleb128 0x2e
 841 00a5 00       		.byte	0
 842 00a6 03       		.uleb128 0x3
 843 00a7 0E       		.uleb128 0xe
 844 00a8 3A       		.uleb128 0x3a
 845 00a9 0B       		.uleb128 0xb
 846 00aa 3B       		.uleb128 0x3b
 847 00ab 05       		.uleb128 0x5
 848 00ac 27       		.uleb128 0x27
 849 00ad 19       		.uleb128 0x19
 850 00ae 11       		.uleb128 0x11
 851 00af 01       		.uleb128 0x1
 852 00b0 12       		.uleb128 0x12
 853 00b1 06       		.uleb128 0x6
 854 00b2 40       		.uleb128 0x40
 855 00b3 18       		.uleb128 0x18
 856 00b4 9642     		.uleb128 0x2116
 857 00b6 19       		.uleb128 0x19
 858 00b7 00       		.byte	0
 859 00b8 00       		.byte	0
 860 00b9 0C       		.uleb128 0xc
 861 00ba 2E       		.uleb128 0x2e
 862 00bb 00       		.byte	0
 863 00bc 3F       		.uleb128 0x3f
 864 00bd 19       		.uleb128 0x19
 865 00be 03       		.uleb128 0x3
 866 00bf 0E       		.uleb128 0xe
 867 00c0 3A       		.uleb128 0x3a
 868 00c1 0B       		.uleb128 0xb
 869 00c2 3B       		.uleb128 0x3b
 870 00c3 05       		.uleb128 0x5
 871 00c4 27       		.uleb128 0x27
 872 00c5 19       		.uleb128 0x19
 873 00c6 11       		.uleb128 0x11
 874 00c7 01       		.uleb128 0x1
 875 00c8 12       		.uleb128 0x12
 876 00c9 06       		.uleb128 0x6
 877 00ca 40       		.uleb128 0x40
 878 00cb 18       		.uleb128 0x18
 879 00cc 9742     		.uleb128 0x2117
 880 00ce 19       		.uleb128 0x19
 881 00cf 00       		.byte	0
 882 00d0 00       		.byte	0
 883 00d1 0D       		.uleb128 0xd
 884 00d2 34       		.uleb128 0x34
 885 00d3 00       		.byte	0
 886 00d4 03       		.uleb128 0x3
 887 00d5 0E       		.uleb128 0xe
 888 00d6 3A       		.uleb128 0x3a
 889 00d7 0B       		.uleb128 0xb
 890 00d8 3B       		.uleb128 0x3b
 891 00d9 0B       		.uleb128 0xb
 892 00da 49       		.uleb128 0x49
 893 00db 13       		.uleb128 0x13
 894 00dc 3F       		.uleb128 0x3f
 895 00dd 19       		.uleb128 0x19
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccv2rUUu.s 			page 31


 896 00de 02       		.uleb128 0x2
 897 00df 18       		.uleb128 0x18
 898 00e0 00       		.byte	0
 899 00e1 00       		.byte	0
 900 00e2 00       		.byte	0
 901              		.section	.debug_aranges,"",%progbits
 902 0000 64000000 		.4byte	0x64
 903 0004 0200     		.2byte	0x2
 904 0006 00000000 		.4byte	.Ldebug_info0
 905 000a 04       		.byte	0x4
 906 000b 00       		.byte	0
 907 000c 0000     		.2byte	0
 908 000e 0000     		.2byte	0
 909 0010 00000000 		.4byte	.LFB0
 910 0014 0E000000 		.4byte	.LFE0-.LFB0
 911 0018 00000000 		.4byte	.LFB1
 912 001c 24000000 		.4byte	.LFE1-.LFB1
 913 0020 00000000 		.4byte	.LFB2
 914 0024 24000000 		.4byte	.LFE2-.LFB2
 915 0028 00000000 		.4byte	.LFB3
 916 002c 28000000 		.4byte	.LFE3-.LFB3
 917 0030 00000000 		.4byte	.LFB4
 918 0034 34000000 		.4byte	.LFE4-.LFB4
 919 0038 00000000 		.4byte	.LFB5
 920 003c 34000000 		.4byte	.LFE5-.LFB5
 921 0040 00000000 		.4byte	.LFB6
 922 0044 0A000000 		.4byte	.LFE6-.LFB6
 923 0048 00000000 		.4byte	.LFB7
 924 004c 0E000000 		.4byte	.LFE7-.LFB7
 925 0050 00000000 		.4byte	.LFB8
 926 0054 0E000000 		.4byte	.LFE8-.LFB8
 927 0058 00000000 		.4byte	.LFB9
 928 005c 54000000 		.4byte	.LFE9-.LFB9
 929 0060 00000000 		.4byte	0
 930 0064 00000000 		.4byte	0
 931              		.section	.debug_ranges,"",%progbits
 932              	.Ldebug_ranges0:
 933 0000 00000000 		.4byte	.LFB0
 934 0004 0E000000 		.4byte	.LFE0
 935 0008 00000000 		.4byte	.LFB1
 936 000c 24000000 		.4byte	.LFE1
 937 0010 00000000 		.4byte	.LFB2
 938 0014 24000000 		.4byte	.LFE2
 939 0018 00000000 		.4byte	.LFB3
 940 001c 28000000 		.4byte	.LFE3
 941 0020 00000000 		.4byte	.LFB4
 942 0024 34000000 		.4byte	.LFE4
 943 0028 00000000 		.4byte	.LFB5
 944 002c 34000000 		.4byte	.LFE5
 945 0030 00000000 		.4byte	.LFB6
 946 0034 0A000000 		.4byte	.LFE6
 947 0038 00000000 		.4byte	.LFB7
 948 003c 0E000000 		.4byte	.LFE7
 949 0040 00000000 		.4byte	.LFB8
 950 0044 0E000000 		.4byte	.LFE8
 951 0048 00000000 		.4byte	.LFB9
 952 004c 54000000 		.4byte	.LFE9
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccv2rUUu.s 			page 32


 953 0050 00000000 		.4byte	0
 954 0054 00000000 		.4byte	0
 955              		.section	.debug_line,"",%progbits
 956              	.Ldebug_line0:
 957 0000 20010000 		.section	.debug_str,"MS",%progbits,1
 957      02004100 
 957      00000201 
 957      FB0E0D00 
 957      01010101 
 958              	.LASF15:
 959 0000 72656733 		.ascii	"reg32\000"
 959      3200
 960              	.LASF26:
 961 0006 74784669 		.ascii	"txFifoCtrl\000"
 961      666F4374 
 961      726C00
 962              	.LASF32:
 963 0011 55415254 		.ascii	"UART_IntrTxMask\000"
 963      5F496E74 
 963      7254784D 
 963      61736B00 
 964              	.LASF23:
 965 0021 55415254 		.ascii	"UART_SetTxFifoLevel\000"
 965      5F536574 
 965      54784669 
 965      666F4C65 
 965      76656C00 
 966              	.LASF24:
 967 0035 6C657665 		.ascii	"level\000"
 967      6C00
 968              	.LASF28:
 969 003b 55415254 		.ascii	"UART_ScbModePostEnable\000"
 969      5F536362 
 969      4D6F6465 
 969      506F7374 
 969      456E6162 
 970              	.LASF3:
 971 0052 73686F72 		.ascii	"short unsigned int\000"
 971      7420756E 
 971      7369676E 
 971      65642069 
 971      6E7400
 972              	.LASF31:
 973 0065 55415254 		.ascii	"UART_initVar\000"
 973      5F696E69 
 973      74566172 
 973      00
 974              	.LASF35:
 975 0072 443A5C55 		.ascii	"D:\\Users\\jagumiel\\Documents\\PSoC Creator\\PSoC-"
 975      73657273 
 975      5C6A6167 
 975      756D6965 
 975      6C5C446F 
 976 00a0 3130315C 		.ascii	"101\\PSoC-101\\TrainingProjects\\ADC-UART.cydsn\000"
 976      50536F43 
 976      2D313031 
 976      5C547261 
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccv2rUUu.s 			page 33


 976      696E696E 
 977              	.LASF12:
 978 00cd 666C6F61 		.ascii	"float\000"
 978      7400
 979              	.LASF19:
 980 00d3 55415254 		.ascii	"UART_Enable\000"
 980      5F456E61 
 980      626C6500 
 981              	.LASF1:
 982 00df 756E7369 		.ascii	"unsigned char\000"
 982      676E6564 
 982      20636861 
 982      7200
 983              	.LASF18:
 984 00ed 55415254 		.ascii	"UART_Init\000"
 984      5F496E69 
 984      7400
 985              	.LASF5:
 986 00f7 6C6F6E67 		.ascii	"long unsigned int\000"
 986      20756E73 
 986      69676E65 
 986      6420696E 
 986      7400
 987              	.LASF9:
 988 0109 75696E74 		.ascii	"uint8\000"
 988      3800
 989              	.LASF20:
 990 010f 55415254 		.ascii	"UART_Start\000"
 990      5F537461 
 990      727400
 991              	.LASF33:
 992 011a 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 992      43313120 
 992      352E342E 
 992      31203230 
 992      31363036 
 993 014d 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 993      20726576 
 993      6973696F 
 993      6E203233 
 993      37373135 
 994 0180 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 994      66756E63 
 994      74696F6E 
 994      2D736563 
 994      74696F6E 
 995              	.LASF13:
 996 01a8 646F7562 		.ascii	"double\000"
 996      6C6500
 997              	.LASF10:
 998 01af 75696E74 		.ascii	"uint16\000"
 998      313600
 999              	.LASF34:
 1000 01b6 47656E65 		.ascii	"Generated_Source\\PSoC4\\UART.c\000"
 1000      72617465 
 1000      645F536F 
 1000      75726365 
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccv2rUUu.s 			page 34


 1000      5C50536F 
 1001              	.LASF11:
 1002 01d4 75696E74 		.ascii	"uint32\000"
 1002      333200
 1003              	.LASF29:
 1004 01db 55415254 		.ascii	"UART_ScbModeStop\000"
 1004      5F536362 
 1004      4D6F6465 
 1004      53746F70 
 1004      00
 1005              	.LASF8:
 1006 01ec 756E7369 		.ascii	"unsigned int\000"
 1006      676E6564 
 1006      20696E74 
 1006      00
 1007              	.LASF7:
 1008 01f9 6C6F6E67 		.ascii	"long long unsigned int\000"
 1008      206C6F6E 
 1008      6720756E 
 1008      7369676E 
 1008      65642069 
 1009              	.LASF21:
 1010 0210 55415254 		.ascii	"UART_Stop\000"
 1010      5F53746F 
 1010      7000
 1011              	.LASF17:
 1012 021a 73697A65 		.ascii	"sizetype\000"
 1012      74797065 
 1012      00
 1013              	.LASF6:
 1014 0223 6C6F6E67 		.ascii	"long long int\000"
 1014      206C6F6E 
 1014      6720696E 
 1014      7400
 1015              	.LASF22:
 1016 0231 55415254 		.ascii	"UART_SetRxFifoLevel\000"
 1016      5F536574 
 1016      52784669 
 1016      666F4C65 
 1016      76656C00 
 1017              	.LASF14:
 1018 0245 63686172 		.ascii	"char\000"
 1018      00
 1019              	.LASF2:
 1020 024a 73686F72 		.ascii	"short int\000"
 1020      7420696E 
 1020      7400
 1021              	.LASF27:
 1022 0254 55415254 		.ascii	"UART_ScbEnableIntr\000"
 1022      5F536362 
 1022      456E6162 
 1022      6C65496E 
 1022      747200
 1023              	.LASF25:
 1024 0267 72784669 		.ascii	"rxFifoCtrl\000"
 1024      666F4374 
 1024      726C00
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccv2rUUu.s 			page 35


 1025              	.LASF4:
 1026 0272 6C6F6E67 		.ascii	"long int\000"
 1026      20696E74 
 1026      00
 1027              	.LASF16:
 1028 027b 6C6F6E67 		.ascii	"long double\000"
 1028      20646F75 
 1028      626C6500 
 1029              	.LASF0:
 1030 0287 7369676E 		.ascii	"signed char\000"
 1030      65642063 
 1030      68617200 
 1031              	.LASF30:
 1032 0293 55415254 		.ascii	"UART_I2CSlaveNackGeneration\000"
 1032      5F493243 
 1032      536C6176 
 1032      654E6163 
 1032      6B47656E 
 1033              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
