ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccK6w6Mx.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"I2C_EZI2C_INT.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.I2C_EZI2C_STRETCH_ISR,"ax",%progbits
  20              		.align	2
  21              		.global	I2C_EZI2C_STRETCH_ISR
  22              		.code	16
  23              		.thumb_func
  24              		.type	I2C_EZI2C_STRETCH_ISR, %function
  25              	I2C_EZI2C_STRETCH_ISR:
  26              	.LFB0:
  27              		.file 1 "Generated_Source\\PSoC4\\I2C_EZI2C_INT.c"
   1:Generated_Source\PSoC4/I2C_EZI2C_INT.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/I2C_EZI2C_INT.c **** * \file I2C_EZI2C_INT.c
   3:Generated_Source\PSoC4/I2C_EZI2C_INT.c **** * \version 4.0
   4:Generated_Source\PSoC4/I2C_EZI2C_INT.c **** *
   5:Generated_Source\PSoC4/I2C_EZI2C_INT.c **** * \brief
   6:Generated_Source\PSoC4/I2C_EZI2C_INT.c **** *  This file provides the source code to the Interrupt Service Routine for
   7:Generated_Source\PSoC4/I2C_EZI2C_INT.c **** *  the SCB Component in EZI2C mode.
   8:Generated_Source\PSoC4/I2C_EZI2C_INT.c **** *
   9:Generated_Source\PSoC4/I2C_EZI2C_INT.c **** * Note:
  10:Generated_Source\PSoC4/I2C_EZI2C_INT.c **** *
  11:Generated_Source\PSoC4/I2C_EZI2C_INT.c **** ********************************************************************************
  12:Generated_Source\PSoC4/I2C_EZI2C_INT.c **** * \copyright
  13:Generated_Source\PSoC4/I2C_EZI2C_INT.c **** * Copyright 2013-2017, Cypress Semiconductor Corporation.  All rights reserved.
  14:Generated_Source\PSoC4/I2C_EZI2C_INT.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:Generated_Source\PSoC4/I2C_EZI2C_INT.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:Generated_Source\PSoC4/I2C_EZI2C_INT.c **** * the software package with which this file was provided.
  17:Generated_Source\PSoC4/I2C_EZI2C_INT.c **** *******************************************************************************/
  18:Generated_Source\PSoC4/I2C_EZI2C_INT.c **** 
  19:Generated_Source\PSoC4/I2C_EZI2C_INT.c **** #include "I2C_PVT.h"
  20:Generated_Source\PSoC4/I2C_EZI2C_INT.c **** #include "I2C_EZI2C_PVT.h"
  21:Generated_Source\PSoC4/I2C_EZI2C_INT.c **** #include "cyapicallbacks.h"
  22:Generated_Source\PSoC4/I2C_EZI2C_INT.c **** 
  23:Generated_Source\PSoC4/I2C_EZI2C_INT.c **** #if(I2C_EZI2C_SCL_STRETCH_ENABLE_CONST)
  24:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****     /*******************************************************************************
  25:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****     * Function Name: I2C_EZI2C_STRETCH_ISR
  26:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****     ****************************************************************************//**
  27:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****     *
  28:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****     *  Handles the Interrupt Service Routine for the SCB EZI2C mode.
  29:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****     *  The clock stretching is used during operation.
  30:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****     *
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccK6w6Mx.s 			page 2


  31:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****     *******************************************************************************/
  32:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****     CY_ISR_PROTO(I2C_EZI2C_STRETCH_ISR)
  33:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****     {
  28              		.loc 1 33 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 70B5     		push	{r4, r5, r6, lr}
  33              		.cfi_def_cfa_offset 16
  34              		.cfi_offset 4, -16
  35              		.cfi_offset 5, -12
  36              		.cfi_offset 6, -8
  37              		.cfi_offset 14, -4
  34:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****         static uint16 locBufSize;
  35:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****         uint32 locIndex;
  36:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****         uint32 locStatus;
  37:Generated_Source\PSoC4/I2C_EZI2C_INT.c **** 
  38:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****         uint32 endTransfer;
  39:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****         uint32 fifoIndex;
  40:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****         uint32 locByte;
  41:Generated_Source\PSoC4/I2C_EZI2C_INT.c **** 
  42:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****         uint32 locIntrCause;
  43:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****         uint32 locIntrSlave;
  44:Generated_Source\PSoC4/I2C_EZI2C_INT.c **** 
  45:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****     #ifdef I2C_EZI2C_STRETCH_ISR_ENTRY_CALLBACK
  46:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****         I2C_EZI2C_STRETCH_ISR_EntryCallback();
  47:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****     #endif /* I2C_EZI2C_STRETCH_ISR_ENTRY_CALLBACK */
  48:Generated_Source\PSoC4/I2C_EZI2C_INT.c **** 
  49:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****     #if(I2C_SECONDARY_ADDRESS_ENABLE_CONST)
  50:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****         /* Variable intended to be used with either buffer */
  51:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****         static volatile uint8 * I2C_dataBuffer; /* Pointer to data buffer              */
  52:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****         static uint16 I2C_bufSizeBuf;           /* Size of buffer in bytes             */
  53:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****         static uint16 I2C_protectBuf;           /* Start index of write protected area */
  54:Generated_Source\PSoC4/I2C_EZI2C_INT.c **** 
  55:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****         static uint8 activeAddress;
  56:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****         uint32 ackResponse;
  57:Generated_Source\PSoC4/I2C_EZI2C_INT.c **** 
  58:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****         ackResponse = I2C_EZI2C_ACK_RECEIVED_ADDRESS;
  59:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****     #endif /* (I2C_SECONDARY_ADDRESS_ENABLE_CONST) */
  60:Generated_Source\PSoC4/I2C_EZI2C_INT.c **** 
  61:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****     #if !defined (CY_REMOVE_I2C_CUSTOM_INTR_HANDLER)
  62:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****         if(NULL != I2C_customIntrHandler)
  38              		.loc 1 62 0
  39 0002 AC4B     		ldr	r3, .L38
  40 0004 1B68     		ldr	r3, [r3]
  41 0006 002B     		cmp	r3, #0
  42 0008 00D0     		beq	.L2
  63:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****         {
  64:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****             I2C_customIntrHandler();
  43              		.loc 1 64 0
  44 000a 9847     		blx	r3
  45              	.LVL0:
  46              	.L2:
  65:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****         }
  66:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****     #else
  67:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****         CY_I2C_CUSTOM_INTR_HANDLER();
  68:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****     #endif /* !defined (CY_REMOVE_I2C_CUSTOM_INTR_HANDLER) */
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccK6w6Mx.s 			page 3


  69:Generated_Source\PSoC4/I2C_EZI2C_INT.c **** 
  70:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****         /* Make local copy of global variable */
  71:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****         locIndex = I2C_EZI2C_GET_INDEX(activeAddress);
  47              		.loc 1 71 0
  48 000c AA4B     		ldr	r3, .L38+4
  49 000e 1C88     		ldrh	r4, [r3]
  50              	.LVL1:
  72:Generated_Source\PSoC4/I2C_EZI2C_INT.c **** 
  73:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****         /* Get interrupt sources */
  74:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****         locIntrSlave = I2C_GetSlaveInterruptSource();
  51              		.loc 1 74 0
  52 0010 AA4B     		ldr	r3, .L38+8
  53 0012 1D68     		ldr	r5, [r3]
  54              	.LVL2:
  75:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****         locIntrCause = I2C_GetInterruptCause();
  55              		.loc 1 75 0
  56 0014 AA4B     		ldr	r3, .L38+12
  57 0016 1E68     		ldr	r6, [r3]
  58              	.LVL3:
  76:Generated_Source\PSoC4/I2C_EZI2C_INT.c **** 
  77:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****         /* INTR_SLAVE.I2C_ARB_LOST and INTR_SLAVE_I2C.BUS_ERROR */
  78:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****         /* Handles errors on the bus. There are cases when both bits are set.
  79:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****         * The error recovery is common: re-enable the scb IP. The content of the RX FIFO is lost.
  80:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****         */
  81:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****         if(0u != (locIntrSlave & (I2C_INTR_SLAVE_I2C_ARB_LOST |
  59              		.loc 1 81 0
  60 0018 0223     		movs	r3, #2
  61 001a FF33     		adds	r3, r3, #255
  62 001c 1D42     		tst	r5, r3
  63 001e 42D0     		beq	.L3
  82:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                                   I2C_INTR_SLAVE_I2C_BUS_ERROR)))
  83:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****         {
  84:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****             I2C_CTRL_REG &= (uint32) ~I2C_CTRL_ENABLED; /* Disable SCB block */
  64              		.loc 1 84 0
  65 0020 A84A     		ldr	r2, .L38+16
  66 0022 1368     		ldr	r3, [r2]
  67 0024 5B00     		lsls	r3, r3, #1
  68 0026 5B08     		lsrs	r3, r3, #1
  69 0028 1360     		str	r3, [r2]
  85:Generated_Source\PSoC4/I2C_EZI2C_INT.c **** 
  86:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****         #if(I2C_CY_SCBIP_V0)
  87:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****             if(0u != ((uint8) I2C_EZI2C_STATUS_BUSY & I2C_curStatus))
  70              		.loc 1 87 0
  71 002a A74B     		ldr	r3, .L38+20
  72 002c 1B78     		ldrb	r3, [r3]
  73 002e 9B06     		lsls	r3, r3, #26
  74 0030 20D5     		bpl	.L4
  88:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****         #endif /* (I2C_CY_SCBIP_V0) */
  89:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****             {
  90:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                 I2C_curStatus &= (uint8) ~I2C_EZI2C_STATUS_BUSY;
  75              		.loc 1 90 0
  76 0032 A54A     		ldr	r2, .L38+20
  77 0034 1378     		ldrb	r3, [r2]
  78 0036 2021     		movs	r1, #32
  79 0038 8B43     		bics	r3, r1
  80 003a 1370     		strb	r3, [r2]
  91:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                 I2C_curStatus |= (uint8)  I2C_EZI2C_STATUS_ERR;
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccK6w6Mx.s 			page 4


  81              		.loc 1 91 0
  82 003c 1178     		ldrb	r1, [r2]
  83 003e 1023     		movs	r3, #16
  84 0040 0B43     		orrs	r3, r1
  85 0042 DBB2     		uxtb	r3, r3
  86 0044 1370     		strb	r3, [r2]
  92:Generated_Source\PSoC4/I2C_EZI2C_INT.c **** 
  93:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                 /* INTR_TX_EMPTY is enabled in the address phase to receive data */
  94:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                 if(0u == (I2C_GetTxInterruptMode() & I2C_INTR_TX_EMPTY))
  87              		.loc 1 94 0
  88 0046 A14B     		ldr	r3, .L38+24
  89 0048 1B68     		ldr	r3, [r3]
  90 004a DB06     		lsls	r3, r3, #27
  91 004c 0CD4     		bmi	.L5
  95:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                 {
  96:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                     /* Write complete */
  97:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                     if(I2C_indexBuf1 != I2C_offsetBuf1)
  92              		.loc 1 97 0
  93 004e A04B     		ldr	r3, .L38+28
  94 0050 1A78     		ldrb	r2, [r3]
  95 0052 994B     		ldr	r3, .L38+4
  96 0054 1B88     		ldrh	r3, [r3]
  97 0056 9A42     		cmp	r2, r3
  98 0058 0CD0     		beq	.L4
  98:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                     {
  99:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                         I2C_curStatus |= (uint8) I2C_INTR_SLAVE_I2C_WRITE_STOP;
  99              		.loc 1 99 0
 100 005a 9B4A     		ldr	r2, .L38+20
 101 005c 1178     		ldrb	r1, [r2]
 102 005e 0823     		movs	r3, #8
 103 0060 0B43     		orrs	r3, r1
 104 0062 DBB2     		uxtb	r3, r3
 105 0064 1370     		strb	r3, [r2]
 106 0066 05E0     		b	.L4
 107              	.L5:
 100:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                     }
 101:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                 }
 102:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                 else
 103:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                 {
 104:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                     /* Read complete */
 105:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                     I2C_curStatus |= (uint8) I2C_INTR_SLAVE_I2C_NACK;
 108              		.loc 1 105 0
 109 0068 974A     		ldr	r2, .L38+20
 110 006a 1178     		ldrb	r1, [r2]
 111 006c 0223     		movs	r3, #2
 112 006e 0B43     		orrs	r3, r1
 113 0070 DBB2     		uxtb	r3, r3
 114 0072 1370     		strb	r3, [r2]
 115              	.L4:
 106:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                 }
 107:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****             }
 108:Generated_Source\PSoC4/I2C_EZI2C_INT.c **** 
 109:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****             I2C_DISABLE_SLAVE_AUTO_DATA;
 116              		.loc 1 109 0
 117 0074 974A     		ldr	r2, .L38+32
 118 0076 1168     		ldr	r1, [r2]
 119 0078 974B     		ldr	r3, .L38+36
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccK6w6Mx.s 			page 5


 120 007a 0B40     		ands	r3, r1
 121 007c 1360     		str	r3, [r2]
 110:Generated_Source\PSoC4/I2C_EZI2C_INT.c **** 
 111:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****             /* Disable TX and RX interrupt sources */
 112:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****             I2C_SetRxInterruptMode(I2C_NO_INTR_SOURCES);
 122              		.loc 1 112 0
 123 007e 0023     		movs	r3, #0
 124 0080 964A     		ldr	r2, .L38+40
 125 0082 1360     		str	r3, [r2]
 113:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****             I2C_SetTxInterruptMode(I2C_NO_INTR_SOURCES);
 126              		.loc 1 113 0
 127 0084 914A     		ldr	r2, .L38+24
 128 0086 1360     		str	r3, [r2]
 114:Generated_Source\PSoC4/I2C_EZI2C_INT.c **** 
 115:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****         #if(I2C_CY_SCBIP_V0)
 116:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****             /* Clear interrupt sources as they are not automatically cleared after SCB is disabled 
 117:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****             I2C_ClearRxInterruptSource(I2C_INTR_RX_ALL);
 129              		.loc 1 117 0
 130 0088 9549     		ldr	r1, .L38+44
 131 008a 964A     		ldr	r2, .L38+48
 132 008c 1160     		str	r1, [r2]
 118:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****             I2C_ClearSlaveInterruptSource(I2C_INTR_SLAVE_ALL);
 133              		.loc 1 118 0
 134 008e 9649     		ldr	r1, .L38+52
 135 0090 8A4A     		ldr	r2, .L38+8
 136 0092 1160     		str	r1, [r2]
 119:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****         #endif /* (I2C_CY_SCBIP_V0) */
 120:Generated_Source\PSoC4/I2C_EZI2C_INT.c **** 
 121:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****             I2C_fsmState = I2C_EZI2C_FSM_IDLE;
 137              		.loc 1 121 0
 138 0094 954A     		ldr	r2, .L38+56
 139 0096 1370     		strb	r3, [r2]
 122:Generated_Source\PSoC4/I2C_EZI2C_INT.c **** 
 123:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****             I2C_CTRL_REG |= (uint32) I2C_CTRL_ENABLED;  /* Enable SCB block */
 140              		.loc 1 123 0
 141 0098 8A4A     		ldr	r2, .L38+16
 142 009a 1368     		ldr	r3, [r2]
 143 009c 8021     		movs	r1, #128
 144 009e 0906     		lsls	r1, r1, #24
 145 00a0 0B43     		orrs	r3, r1
 146 00a2 1360     		str	r3, [r2]
 147 00a4 03E1     		b	.L6
 148              	.L3:
 124:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****         }
 125:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****         else
 126:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****         {
 127:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****             /* INTR_I2C_EC_WAKE_UP */
 128:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****             /* Wakes up device from deep sleep */
 129:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****             if(0u != (locIntrCause & I2C_INTR_CAUSE_I2C_EC))
 149              		.loc 1 129 0
 150 00a6 F306     		lsls	r3, r6, #27
 151 00a8 02D5     		bpl	.L7
 130:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****             {
 131:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                 /* Disables wakeup interrupt source but does not clear it. It is cleared in INTR_SL
 132:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                 I2C_SetI2CExtClkInterruptMode(I2C_NO_INTR_SOURCES);
 152              		.loc 1 132 0
 153 00aa 0022     		movs	r2, #0
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccK6w6Mx.s 			page 6


 154 00ac 904B     		ldr	r3, .L38+60
 155 00ae 1A60     		str	r2, [r3]
 156              	.L7:
 133:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****             }
 134:Generated_Source\PSoC4/I2C_EZI2C_INT.c **** 
 135:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****             if(0u != (locIntrCause & (I2C_INTR_CAUSE_RX | I2C_INTR_CAUSE_SLAVE)))
 157              		.loc 1 135 0
 158 00b0 0A23     		movs	r3, #10
 159 00b2 3342     		tst	r3, r6
 160 00b4 00D1     		bne	.LCB131
 161 00b6 90E0     		b	.L8	@long jump
 162              	.LCB131:
 136:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****             {
 137:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                 /* INTR_RX.NOT_EMPTY */
 138:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                 /* Receives data byte-by-byte. Does not use RX FIFO capabilities */
 139:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                 if (0u != (I2C_GetRxInterruptSourceMasked() & I2C_INTR_RX_NOT_EMPTY))
 163              		.loc 1 139 0
 164 00b8 8E4B     		ldr	r3, .L38+64
 165 00ba 1B68     		ldr	r3, [r3]
 166 00bc 5B07     		lsls	r3, r3, #29
 167 00be 56D5     		bpl	.L9
 140:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                 {
 141:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                 #if(I2C_SECONDARY_ADDRESS_ENABLE_CONST)
 142:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                     /* If I2C_STOP service is delayed to I2C_ADDR_MATCH the address byte is in the 
 143:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                     * RX_NOT_EMPTY is enabled. The address byte has to stay into RX FIFO therefore
 144:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                     * RX.NOT_EMPTY service has to be skipped. The address byte has to be read by I2
 145:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                     */
 146:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                     if (0u == (locIntrCause & I2C_INTR_CAUSE_SLAVE))
 147:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                 #endif /* (I2C_SECONDARY_ADDRESS_ENABLE_CONST) */
 148:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                     {
 149:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                         locByte = I2C_RX_FIFO_RD_REG;
 168              		.loc 1 149 0
 169 00c0 8D4B     		ldr	r3, .L38+68
 170 00c2 1B68     		ldr	r3, [r3]
 171              	.LVL4:
 150:Generated_Source\PSoC4/I2C_EZI2C_INT.c **** 
 151:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                         switch(I2C_fsmState)
 172              		.loc 1 151 0
 173 00c4 894A     		ldr	r2, .L38+56
 174 00c6 1278     		ldrb	r2, [r2]
 175 00c8 002A     		cmp	r2, #0
 176 00ca 16D0     		beq	.L11
 177 00cc 012A     		cmp	r2, #1
 178 00ce 47D1     		bne	.L37
 152:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                         {
 153:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                         case I2C_EZI2C_FSM_BYTE_WRITE:
 154:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                             if(0u != locBufSize)
 179              		.loc 1 154 0
 180 00d0 8A4A     		ldr	r2, .L38+72
 181 00d2 1288     		ldrh	r2, [r2]
 182 00d4 002A     		cmp	r2, #0
 183 00d6 0DD0     		beq	.L13
 155:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                             {
 156:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                                 /* Store data byte and ACK */
 157:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                                 I2C_I2C_SLAVE_GENERATE_ACK;
 184              		.loc 1 157 0
 185 00d8 0121     		movs	r1, #1
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccK6w6Mx.s 			page 7


 186 00da 894A     		ldr	r2, .L38+76
 187 00dc 1160     		str	r1, [r2]
 158:Generated_Source\PSoC4/I2C_EZI2C_INT.c **** 
 159:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                                 I2C_dataBuffer1[locIndex] = (uint8) locByte;
 188              		.loc 1 159 0
 189 00de 894A     		ldr	r2, .L38+80
 190 00e0 1268     		ldr	r2, [r2]
 191 00e2 1219     		adds	r2, r2, r4
 192 00e4 DBB2     		uxtb	r3, r3
 193              	.LVL5:
 194 00e6 1370     		strb	r3, [r2]
 160:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                                 locIndex++;
 195              		.loc 1 160 0
 196 00e8 0134     		adds	r4, r4, #1
 197              	.LVL6:
 161:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                                 locBufSize--;
 198              		.loc 1 161 0
 199 00ea 844A     		ldr	r2, .L38+72
 200 00ec 1388     		ldrh	r3, [r2]
 201 00ee 013B     		subs	r3, r3, #1
 202 00f0 1380     		strh	r3, [r2]
 203 00f2 38E0     		b	.L14
 204              	.LVL7:
 205              	.L13:
 162:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                             }
 163:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                             else
 164:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                             {
 165:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                                 /* Discard data byte and NACK */
 166:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                                 I2C_I2C_SLAVE_GENERATE_NACK;
 206              		.loc 1 166 0
 207 00f4 FFF7FEFF 		bl	I2C_I2CSlaveNackGeneration
 208              	.LVL8:
 209 00f8 35E0     		b	.L14
 210              	.LVL9:
 211              	.L11:
 167:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                             }
 168:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                             break;
 169:Generated_Source\PSoC4/I2C_EZI2C_INT.c **** 
 170:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                     #if(I2C_SUB_ADDRESS_SIZE16_CONST)
 171:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                         case I2C_EZI2C_FSM_OFFSET_HI8:
 172:Generated_Source\PSoC4/I2C_EZI2C_INT.c **** 
 173:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                             I2C_I2C_SLAVE_GENERATE_ACK;
 174:Generated_Source\PSoC4/I2C_EZI2C_INT.c **** 
 175:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                             /* Store offset most significant byre */
 176:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                             locBufSize = (uint16) ((uint8) locByte);
 177:Generated_Source\PSoC4/I2C_EZI2C_INT.c **** 
 178:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                             I2C_fsmState = I2C_EZI2C_FSM_OFFSET_LO8;
 179:Generated_Source\PSoC4/I2C_EZI2C_INT.c **** 
 180:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                             break;
 181:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                     #endif /* (I2C_SUB_ADDRESS_SIZE16_CONST) */
 182:Generated_Source\PSoC4/I2C_EZI2C_INT.c **** 
 183:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                         case I2C_EZI2C_FSM_OFFSET_LO8:
 184:Generated_Source\PSoC4/I2C_EZI2C_INT.c **** 
 185:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                             #if (I2C_SUB_ADDRESS_SIZE16)
 186:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                             {
 187:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                                 /* Collect 2 bytes offset */
 188:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                                 locByte = ((uint32) ((uint32) locBufSize << 8u)) | locByte;
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccK6w6Mx.s 			page 8


 189:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                             }
 190:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                             #endif
 191:Generated_Source\PSoC4/I2C_EZI2C_INT.c **** 
 192:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                             /* Check offset against buffer size */
 193:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                             if(locByte < (uint32) I2C_bufSizeBuf1)
 212              		.loc 1 193 0
 213 00fa 834A     		ldr	r2, .L38+84
 214 00fc 1288     		ldrh	r2, [r2]
 215 00fe 9342     		cmp	r3, r2
 216 0100 2BD2     		bcs	.L15
 194:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                             {
 195:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                                 I2C_I2C_SLAVE_GENERATE_ACK;
 217              		.loc 1 195 0
 218 0102 0121     		movs	r1, #1
 219 0104 7E4A     		ldr	r2, .L38+76
 220 0106 1160     		str	r1, [r2]
 221              	.LVL10:
 196:Generated_Source\PSoC4/I2C_EZI2C_INT.c **** 
 197:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                                 /* Update local buffer index with new offset */
 198:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                                 locIndex = locByte;
 199:Generated_Source\PSoC4/I2C_EZI2C_INT.c **** 
 200:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                                 /* Get available buffer size to write */
 201:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                                 locBufSize = (uint16) ((locByte < I2C_protectBuf1) ?
 222              		.loc 1 201 0
 223 0108 804A     		ldr	r2, .L38+88
 224 010a 1288     		ldrh	r2, [r2]
 225 010c 9342     		cmp	r3, r2
 226 010e 02D2     		bcs	.L34
 227              		.loc 1 201 0 is_stmt 0 discriminator 1
 228 0110 D21A     		subs	r2, r2, r3
 229 0112 92B2     		uxth	r2, r2
 230 0114 00E0     		b	.L16
 231              	.L34:
 232              		.loc 1 201 0
 233 0116 0022     		movs	r2, #0
 234              	.L16:
 235              		.loc 1 201 0 discriminator 4
 236 0118 7849     		ldr	r1, .L38+72
 237 011a 0A80     		strh	r2, [r1]
 202:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                                                        (I2C_protectBuf1 - locByte) : (0u));
 203:Generated_Source\PSoC4/I2C_EZI2C_INT.c **** 
 204:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                             #if(I2C_CY_SCBIP_V0)
 205:Generated_Source\PSoC4/I2C_EZI2C_INT.c **** 
 206:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                                 if(locBufSize < I2C_EZI2C_FIFO_SIZE)
 238              		.loc 1 206 0 is_stmt 1 discriminator 4
 239 011c 072A     		cmp	r2, #7
 240 011e 03D8     		bhi	.L17
 207:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                                 {
 208:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                                     /* Set FSM state to receive byte by byte */
 209:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                                     I2C_fsmState = I2C_EZI2C_FSM_BYTE_WRITE;
 241              		.loc 1 209 0
 242 0120 0121     		movs	r1, #1
 243 0122 724A     		ldr	r2, .L38+56
 244 0124 1170     		strb	r1, [r2]
 245 0126 14E0     		b	.L18
 246              	.L17:
 210:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                                 }
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccK6w6Mx.s 			page 9


 211:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                                 /* Receive RX FIFO chunks */
 212:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                                 else if(locBufSize == I2C_EZI2C_FIFO_SIZE)
 247              		.loc 1 212 0
 248 0128 082A     		cmp	r2, #8
 249 012a 09D1     		bne	.L19
 213:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                                 {
 214:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                                     I2C_ENABLE_SLAVE_AUTO_DATA; /* NACK when RX FIFO is full */
 250              		.loc 1 214 0
 251 012c 6949     		ldr	r1, .L38+32
 252 012e 0A68     		ldr	r2, [r1]
 253 0130 A020     		movs	r0, #160
 254 0132 0002     		lsls	r0, r0, #8
 255 0134 0243     		orrs	r2, r0
 256 0136 0A60     		str	r2, [r1]
 215:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                                     I2C_SetRxInterruptMode(I2C_NO_INTR_SOURCES);
 257              		.loc 1 215 0
 258 0138 0021     		movs	r1, #0
 259 013a 684A     		ldr	r2, .L38+40
 260 013c 1160     		str	r1, [r2]
 261 013e 08E0     		b	.L18
 262              	.L19:
 216:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                                 }
 217:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                                 else
 218:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                                 {
 219:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                                     I2C_ENABLE_SLAVE_AUTO_DATA_ACK; /* Stretch when RX FIFO is full
 263              		.loc 1 219 0
 264 0140 6449     		ldr	r1, .L38+32
 265 0142 0A68     		ldr	r2, [r1]
 266 0144 8020     		movs	r0, #128
 267 0146 8001     		lsls	r0, r0, #6
 268 0148 0243     		orrs	r2, r0
 269 014a 0A60     		str	r2, [r1]
 220:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                                     I2C_SetRxInterruptMode(I2C_INTR_RX_FULL);
 270              		.loc 1 220 0
 271 014c 0821     		movs	r1, #8
 272 014e 634A     		ldr	r2, .L38+40
 273 0150 1160     		str	r1, [r2]
 274              	.L18:
 221:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                                 }
 222:Generated_Source\PSoC4/I2C_EZI2C_INT.c **** 
 223:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                             #else
 224:Generated_Source\PSoC4/I2C_EZI2C_INT.c **** 
 225:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                                 #if(I2C_SECONDARY_ADDRESS_ENABLE)
 226:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                                 {
 227:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                                     /* Set FSM state to receive byte by byte.
 228:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                                     * The byte by byte receive is always chosen for two addresses. 
 229:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                                     */
 230:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                                     I2C_fsmState = I2C_EZI2C_FSM_BYTE_WRITE;
 231:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                                 }
 232:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                                 #else
 233:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                                 {
 234:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                                     if (locBufSize < I2C_EZI2C_FIFO_SIZE)
 235:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                                     {
 236:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                                         /* Set FSM state to receive byte by byte */
 237:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                                         I2C_fsmState = I2C_EZI2C_FSM_BYTE_WRITE;
 238:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                                     }
 239:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                                     /* Receive RX FIFO chunks */
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccK6w6Mx.s 			page 10


 240:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                                     else if (locBufSize == I2C_EZI2C_FIFO_SIZE)
 241:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                                     {
 242:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                                         I2C_ENABLE_SLAVE_AUTO_DATA; /* NACK when RX FIFO is full */
 243:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                                         I2C_SetRxInterruptMode(I2C_NO_INTR_SOURCES);
 244:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                                     }
 245:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                                     else
 246:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                                     {
 247:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                                         I2C_ENABLE_SLAVE_AUTO_DATA_ACK; /* Stretch when RX FIFO is 
 248:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                                         I2C_SetRxInterruptMode(I2C_INTR_RX_FULL);
 249:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                                     }
 250:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                                 }
 251:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                                 #endif
 252:Generated_Source\PSoC4/I2C_EZI2C_INT.c **** 
 253:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                             #endif /* (I2C_CY_SCBIP_V0) */
 254:Generated_Source\PSoC4/I2C_EZI2C_INT.c **** 
 255:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                                 /* Store local offset into global variable */
 256:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                                 I2C_EZI2C_SET_OFFSET(activeAddress, locIndex);
 275              		.loc 1 256 0
 276 0152 5F4A     		ldr	r2, .L38+28
 277 0154 1370     		strb	r3, [r2]
 198:Generated_Source\PSoC4/I2C_EZI2C_INT.c **** 
 278              		.loc 1 198 0
 279 0156 1C00     		movs	r4, r3
 280 0158 05E0     		b	.L14
 281              	.LVL11:
 282              	.L15:
 257:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                             }
 258:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                             else
 259:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                             {
 260:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                                 /* Discard offset byte and NACK */
 261:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                                 I2C_I2C_SLAVE_GENERATE_NACK;
 283              		.loc 1 261 0
 284 015a FFF7FEFF 		bl	I2C_I2CSlaveNackGeneration
 285              	.LVL12:
 286 015e 02E0     		b	.L14
 287              	.LVL13:
 288              	.L37:
 262:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                             }
 263:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                             break;
 264:Generated_Source\PSoC4/I2C_EZI2C_INT.c **** 
 265:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                         default:
 266:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                             CYASSERT(0u != 0u); /* Should never get there */
 289              		.loc 1 266 0 discriminator 1
 290 0160 0020     		movs	r0, #0
 291 0162 FFF7FEFF 		bl	CyHalt
 292              	.LVL14:
 293              	.L14:
 267:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                             break;
 268:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                         }
 269:Generated_Source\PSoC4/I2C_EZI2C_INT.c **** 
 270:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                         I2C_ClearRxInterruptSource(I2C_INTR_RX_NOT_EMPTY);
 294              		.loc 1 270 0
 295 0166 0422     		movs	r2, #4
 296 0168 5E4B     		ldr	r3, .L38+48
 297 016a 1A60     		str	r2, [r3]
 298 016c 35E0     		b	.L8
 299              	.L9:
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccK6w6Mx.s 			page 11


 271:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                     }
 272:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                 }
 273:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                 /* INTR_RX.FULL, INTR_SLAVE.I2C_STOP */
 274:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                 /* Receive FIFO chunks: auto data ACK is enabled */
 275:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                 else if (0u != (I2C_I2C_CTRL_REG & I2C_I2C_CTRL_S_READY_DATA_ACK))
 300              		.loc 1 275 0
 301 016e 594B     		ldr	r3, .L38+32
 302 0170 1B68     		ldr	r3, [r3]
 303 0172 9B04     		lsls	r3, r3, #18
 304 0174 31D5     		bpl	.L8
 276:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                 {
 277:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                     /* Slave interrupt (I2C_STOP or I2C_ADDR_MATCH) leads to completion of read.
 278:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                     * A completion event has a higher priority than the FIFO full.
 279:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                     * Read remaining data from RX FIFO.
 280:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                     */
 281:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                     if(0u != (locIntrCause & I2C_INTR_CAUSE_SLAVE))
 305              		.loc 1 281 0
 306 0176 B307     		lsls	r3, r6, #30
 307 0178 0DD5     		bpl	.L20
 282:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                     {
 283:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                         /* Read remaining bytes from RX FIFO */
 284:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                         fifoIndex = I2C_GET_RX_FIFO_ENTRIES;
 308              		.loc 1 284 0
 309 017a 654B     		ldr	r3, .L38+92
 310 017c 1B68     		ldr	r3, [r3]
 311 017e 0F21     		movs	r1, #15
 312 0180 1940     		ands	r1, r3
 313              	.LVL15:
 285:Generated_Source\PSoC4/I2C_EZI2C_INT.c **** 
 286:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                         #if(I2C_SECONDARY_ADDRESS_ENABLE)
 287:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                         {
 288:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                             /* Update with current address match */
 289:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                             if(I2C_CHECK_INTR_SLAVE_MASKED(I2C_INTR_SLAVE_I2C_ADDR_MATCH))
 290:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                             {
 291:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                                 /* Update RX FIFO entries as address byte is there now */
 292:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                                 fifoIndex = I2C_GET_RX_FIFO_ENTRIES;
 293:Generated_Source\PSoC4/I2C_EZI2C_INT.c **** 
 294:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                                 /* If SR is valid, RX FIFO is full and address is in SHIFTER:
 295:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                                 * read 8 entries and leave address in RX FIFO for further processin
 296:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                                 * If SR is invalid, address is already in RX FIFO: read (entries-1)
 297:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                                 */
 298:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                                 fifoIndex -= ((0u != I2C_GET_RX_FIFO_SR_VALID) ? (0u) : (1u));
 299:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                             }
 300:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                         }
 301:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                         #endif
 302:Generated_Source\PSoC4/I2C_EZI2C_INT.c **** 
 303:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                         I2C_DISABLE_SLAVE_AUTO_DATA;
 314              		.loc 1 303 0
 315 0182 544A     		ldr	r2, .L38+32
 316 0184 1068     		ldr	r0, [r2]
 317 0186 544B     		ldr	r3, .L38+36
 318 0188 0340     		ands	r3, r0
 319 018a 1360     		str	r3, [r2]
 320              	.LVL16:
 304:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                         endTransfer = I2C_EZI2C_CONTINUE_TRANSFER;
 321              		.loc 1 304 0
 322 018c 0120     		movs	r0, #1
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccK6w6Mx.s 			page 12


 323 018e 14E0     		b	.L21
 324              	.LVL17:
 325              	.L35:
 305:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                     }
 306:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                     else
 307:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                     /* INTR_RX_FULL */
 308:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                     /* Continue transfer or disable INTR_RX_FULL to catch completion event. */
 309:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                     {
 310:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                         /* Calculate buffer size available to write data into */
 311:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                         locBufSize -= (uint16) I2C_EZI2C_FIFO_SIZE;
 312:Generated_Source\PSoC4/I2C_EZI2C_INT.c **** 
 313:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                         if(locBufSize <= I2C_EZI2C_FIFO_SIZE)
 314:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                         {
 315:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                             /* Send NACK when RX FIFO overflow */
 316:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                             fifoIndex   = locBufSize;
 317:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                             endTransfer = I2C_EZI2C_COMPLETE_TRANSFER;
 318:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                         }
 319:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                         else
 320:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                         {
 321:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                             /* Continue  transaction */
 322:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                             fifoIndex   = I2C_EZI2C_FIFO_SIZE;
 326              		.loc 1 322 0
 327 0190 0821     		movs	r1, #8
 323:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                             endTransfer = I2C_EZI2C_CONTINUE_TRANSFER;
 328              		.loc 1 323 0
 329 0192 0120     		movs	r0, #1
 330 0194 11E0     		b	.L21
 331              	.L20:
 311:Generated_Source\PSoC4/I2C_EZI2C_INT.c **** 
 332              		.loc 1 311 0
 333 0196 594B     		ldr	r3, .L38+72
 334 0198 1988     		ldrh	r1, [r3]
 335 019a 0839     		subs	r1, r1, #8
 336 019c 89B2     		uxth	r1, r1
 337 019e 1980     		strh	r1, [r3]
 313:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                         {
 338              		.loc 1 313 0
 339 01a0 0829     		cmp	r1, #8
 340 01a2 F5D8     		bhi	.L35
 341              	.LVL18:
 317:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                         }
 342              		.loc 1 317 0
 343 01a4 0020     		movs	r0, #0
 344 01a6 08E0     		b	.L21
 345              	.LVL19:
 346              	.L23:
 324:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                         }
 325:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                     }
 326:Generated_Source\PSoC4/I2C_EZI2C_INT.c **** 
 327:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                     for(; (0u != fifoIndex); fifoIndex--)
 328:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                     {
 329:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                         /* Store data in buffer */
 330:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                         I2C_dataBuffer1[locIndex] = (uint8) I2C_RX_FIFO_RD_REG;
 347              		.loc 1 330 0 discriminator 2
 348 01a8 564B     		ldr	r3, .L38+80
 349 01aa 1B68     		ldr	r3, [r3]
 350 01ac 1B19     		adds	r3, r3, r4
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccK6w6Mx.s 			page 13


 351 01ae 524A     		ldr	r2, .L38+68
 352 01b0 1268     		ldr	r2, [r2]
 353 01b2 D2B2     		uxtb	r2, r2
 354 01b4 1A70     		strb	r2, [r3]
 331:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                         locIndex++;
 355              		.loc 1 331 0 discriminator 2
 356 01b6 0134     		adds	r4, r4, #1
 357              	.LVL20:
 327:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                     {
 358              		.loc 1 327 0 discriminator 2
 359 01b8 0139     		subs	r1, r1, #1
 360              	.LVL21:
 361              	.L21:
 327:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                     {
 362              		.loc 1 327 0 is_stmt 0 discriminator 1
 363 01ba 0029     		cmp	r1, #0
 364 01bc F4D1     		bne	.L23
 332:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                     }
 333:Generated_Source\PSoC4/I2C_EZI2C_INT.c **** 
 334:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                     /* Complete transfer sending NACK when RX FIFO overflow */
 335:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                     if(I2C_EZI2C_COMPLETE_TRANSFER == endTransfer)
 365              		.loc 1 335 0 is_stmt 1
 366 01be 0028     		cmp	r0, #0
 367 01c0 08D1     		bne	.L24
 336:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                     {
 337:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                         I2C_ENABLE_SLAVE_AUTO_DATA_NACK;
 368              		.loc 1 337 0
 369 01c2 444A     		ldr	r2, .L38+32
 370 01c4 1368     		ldr	r3, [r2]
 371 01c6 8021     		movs	r1, #128
 372              	.LVL22:
 373 01c8 0902     		lsls	r1, r1, #8
 374 01ca 0B43     		orrs	r3, r1
 375 01cc 1360     		str	r3, [r2]
 338:Generated_Source\PSoC4/I2C_EZI2C_INT.c **** 
 339:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                         /* Disable INTR_RX_FULL during last RX FIFO chunk reception */
 340:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                         I2C_SetRxInterruptMode(I2C_NO_INTR_SOURCES);
 376              		.loc 1 340 0
 377 01ce 0022     		movs	r2, #0
 378 01d0 424B     		ldr	r3, .L38+40
 379 01d2 1A60     		str	r2, [r3]
 380              	.L24:
 341:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                     }
 342:Generated_Source\PSoC4/I2C_EZI2C_INT.c **** 
 343:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                     I2C_ClearRxInterruptSource(I2C_INTR_RX_FULL |
 381              		.loc 1 343 0
 382 01d4 0C22     		movs	r2, #12
 383 01d6 434B     		ldr	r3, .L38+48
 384 01d8 1A60     		str	r2, [r3]
 385              	.LVL23:
 386              	.L8:
 344:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                                                             I2C_INTR_RX_NOT_EMPTY);
 345:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                 }
 346:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                 else
 347:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                 {
 348:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                     /* Exit for slave interrupts which are not active for RX direction:
 349:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                     * INTR_SLAVE.I2C_ADDR_MATCH and INTR_SLAVE.I2C_STOP while byte-by-byte receptio
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccK6w6Mx.s 			page 14


 350:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                     */
 351:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                 }
 352:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****             }
 353:Generated_Source\PSoC4/I2C_EZI2C_INT.c **** 
 354:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****             if(0u != (locIntrCause & I2C_INTR_CAUSE_SLAVE))
 387              		.loc 1 354 0
 388 01da B307     		lsls	r3, r6, #30
 389 01dc 46D5     		bpl	.L25
 355:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****             {
 356:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                 /* INTR_SLAVE.I2C_STOP */
 357:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                 /* Catch Stop condition: completion of write or read transfer */
 358:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****             #if(!I2C_SECONDARY_ADDRESS_ENABLE_CONST)
 359:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                 if(0u != (locIntrSlave & I2C_INTR_SLAVE_I2C_STOP))
 390              		.loc 1 359 0
 391 01de EB06     		lsls	r3, r5, #27
 392 01e0 15D5     		bpl	.L26
 360:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****             #else
 361:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                 /* Prevent triggering when matched address was NACKed */
 362:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                 if((0u != (locIntrSlave & I2C_INTR_SLAVE_I2C_STOP)) &&
 363:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                    (0u != ((uint8) I2C_EZI2C_STATUS_BUSY & I2C_curStatus)))
 364:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****             #endif
 365:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                 {
 366:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                     /* Disable TX and RX interrupt sources */
 367:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                     I2C_SetRxInterruptMode(I2C_NO_INTR_SOURCES);
 393              		.loc 1 367 0
 394 01e2 0023     		movs	r3, #0
 395 01e4 3D4A     		ldr	r2, .L38+40
 396 01e6 1360     		str	r3, [r2]
 368:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                     I2C_SetTxInterruptMode(I2C_NO_INTR_SOURCES);
 397              		.loc 1 368 0
 398 01e8 384A     		ldr	r2, .L38+24
 399 01ea 1360     		str	r3, [r2]
 400              	.LVL24:
 369:Generated_Source\PSoC4/I2C_EZI2C_INT.c **** 
 370:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                     /* Set read completion mask */
 371:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                     locStatus = I2C_INTR_SLAVE_I2C_NACK;
 372:Generated_Source\PSoC4/I2C_EZI2C_INT.c **** 
 373:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                     /* Check if buffer content was modified: the address phase resets the locIndex 
 374:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                     if(locIndex != I2C_EZI2C_GET_OFFSET(activeAddress))
 401              		.loc 1 374 0
 402 01ec 384B     		ldr	r3, .L38+28
 403 01ee 1B78     		ldrb	r3, [r3]
 404 01f0 9C42     		cmp	r4, r3
 405 01f2 01D1     		bne	.L36
 371:Generated_Source\PSoC4/I2C_EZI2C_INT.c **** 
 406              		.loc 1 371 0
 407 01f4 0223     		movs	r3, #2
 408 01f6 00E0     		b	.L27
 409              	.L36:
 375:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                     {
 376:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                         locStatus |= I2C_INTR_SLAVE_I2C_WRITE_STOP;
 410              		.loc 1 376 0
 411 01f8 0A23     		movs	r3, #10
 412              	.L27:
 413              	.LVL25:
 377:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                     }
 378:Generated_Source\PSoC4/I2C_EZI2C_INT.c **** 
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccK6w6Mx.s 			page 15


 379:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                     /* Complete read or write transaction */
 380:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                     locStatus &= locIntrSlave;
 414              		.loc 1 380 0
 415 01fa 2B40     		ands	r3, r5
 416              	.LVL26:
 381:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                     I2C_EZI2C_UPDATE_LOC_STATUS(activeAddress, locStatus);
 382:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                     locStatus |= (uint32)  I2C_curStatus;
 417              		.loc 1 382 0
 418 01fc 324A     		ldr	r2, .L38+20
 419 01fe 1178     		ldrb	r1, [r2]
 420 0200 0B43     		orrs	r3, r1
 421              	.LVL27:
 383:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                     locStatus &= (uint32) ~I2C_EZI2C_STATUS_BUSY;
 384:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                     I2C_curStatus = (uint8) locStatus;
 422              		.loc 1 384 0
 423 0202 2021     		movs	r1, #32
 424 0204 8B43     		bics	r3, r1
 425              	.LVL28:
 426 0206 1370     		strb	r3, [r2]
 385:Generated_Source\PSoC4/I2C_EZI2C_INT.c **** 
 386:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                     I2C_fsmState = I2C_EZI2C_FSM_IDLE;
 427              		.loc 1 386 0
 428 0208 0022     		movs	r2, #0
 429 020a 384B     		ldr	r3, .L38+56
 430 020c 1A70     		strb	r2, [r3]
 431              	.L26:
 387:Generated_Source\PSoC4/I2C_EZI2C_INT.c **** 
 388:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                     #if(I2C_SECONDARY_ADDRESS_ENABLE)
 389:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                     {
 390:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                         /* Store local index into global variable, before address phase */
 391:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                         I2C_EZI2C_SET_INDEX(activeAddress, locIndex);
 392:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                     }
 393:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                     #endif
 394:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                 }
 395:Generated_Source\PSoC4/I2C_EZI2C_INT.c **** 
 396:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                 /* INTR_SLAVE.I2C_ADDR_MATCH */
 397:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                 /* The matched address is received: the slave starts its operation.
 398:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                 * INTR_SLAVE_I2C_STOP updates the buffer index before the address phase for two add
 399:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                 * This is done to update buffer index correctly before the address phase changes it
 400:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                 */
 401:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                 if(0u != (locIntrSlave & I2C_INTR_SLAVE_I2C_ADDR_MATCH))
 432              		.loc 1 401 0
 433 020e 6B06     		lsls	r3, r5, #25
 434 0210 2AD5     		bpl	.L28
 402:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                 {
 403:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                     #if(I2C_SECONDARY_ADDRESS_ENABLE)
 404:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                     {
 405:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                         /* Read address byte from RX FIFO */
 406:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                         locByte = I2C_GET_I2C_7BIT_ADDRESS(I2C_RX_FIFO_RD_REG);
 407:Generated_Source\PSoC4/I2C_EZI2C_INT.c **** 
 408:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                         I2C_ClearRxInterruptSource(I2C_INTR_RX_NOT_EMPTY);
 409:Generated_Source\PSoC4/I2C_EZI2C_INT.c **** 
 410:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                         /* Check received address against device addresses */
 411:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                         if(I2C_addrBuf1 == locByte)
 412:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                         {
 413:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                             /* Set buffer exposed to primary slave address */
 414:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                             I2C_dataBuffer = I2C_dataBuffer1;
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccK6w6Mx.s 			page 16


 415:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                             I2C_bufSizeBuf = I2C_bufSizeBuf1;
 416:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                             I2C_protectBuf = I2C_protectBuf1;
 417:Generated_Source\PSoC4/I2C_EZI2C_INT.c **** 
 418:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                             activeAddress = I2C_EZI2C_ACTIVE_ADDRESS1;
 419:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                         }
 420:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                         else if(I2C_addrBuf2 == locByte)
 421:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                         {
 422:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                             /* Set buffer exposed to secondary slave address */
 423:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                             I2C_dataBuffer = I2C_dataBuffer2;
 424:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                             I2C_bufSizeBuf = I2C_bufSizeBuf2;
 425:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                             I2C_protectBuf = I2C_protectBuf2;
 426:Generated_Source\PSoC4/I2C_EZI2C_INT.c **** 
 427:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                             activeAddress = I2C_EZI2C_ACTIVE_ADDRESS2;
 428:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                         }
 429:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                         else
 430:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                         {
 431:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                             /* Address does not match */
 432:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                             ackResponse = I2C_EZI2C_NACK_RECEIVED_ADDRESS;
 433:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                         }
 434:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                     }
 435:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                     #endif
 436:Generated_Source\PSoC4/I2C_EZI2C_INT.c **** 
 437:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                 #if(I2C_SECONDARY_ADDRESS_ENABLE_CONST)
 438:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                     if(I2C_EZI2C_NACK_RECEIVED_ADDRESS == ackResponse)
 439:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                     {
 440:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                         /* Clear interrupt sources before NACK address */
 441:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                         I2C_ClearI2CExtClkInterruptSource(I2C_INTR_I2C_EC_WAKE_UP);
 442:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                         I2C_ClearSlaveInterruptSource(I2C_INTR_SLAVE_ALL);
 443:Generated_Source\PSoC4/I2C_EZI2C_INT.c **** 
 444:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                     #if(!I2C_CY_SCBIP_V0)
 445:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                         /* Disable INTR_I2C_STOP to not trigger after matched address is NACKed. Ti
 446:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                         I2C_DISABLE_INTR_SLAVE(I2C_INTR_SLAVE_I2C_STOP);
 447:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                     #endif /* (!I2C_CY_SCBIP_V0) */
 448:Generated_Source\PSoC4/I2C_EZI2C_INT.c **** 
 449:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                         /* NACK address byte: it does not match neither primary nor secondary */
 450:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                         I2C_I2C_SLAVE_GENERATE_NACK;
 451:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                     }
 452:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                     else
 453:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                 #endif /* (I2C_SECONDARY_ADDRESS_ENABLE_CONST) */
 454:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                     {
 455:Generated_Source\PSoC4/I2C_EZI2C_INT.c **** 
 456:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                     #if(I2C_SCB_MODE_UNCONFIG_CONST_CFG)
 457:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                         if(!I2C_SECONDARY_ADDRESS_ENABLE)
 458:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                         {
 459:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                             /* Set buffer exposed to primary slave address */
 460:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                             I2C_dataBuffer = I2C_dataBuffer1;
 461:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                             I2C_bufSizeBuf = I2C_bufSizeBuf1;
 462:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                             I2C_protectBuf = I2C_protectBuf1;
 463:Generated_Source\PSoC4/I2C_EZI2C_INT.c **** 
 464:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                             activeAddress = I2C_EZI2C_ACTIVE_ADDRESS1;
 465:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                         }
 466:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                     #endif /* (I2C_SCB_MODE_UNCONFIG_CONST_CFG) */
 467:Generated_Source\PSoC4/I2C_EZI2C_INT.c **** 
 468:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                         /* Bus becomes busy after address is received */
 469:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                         I2C_curStatus |= (uint8) I2C_EZI2C_STATUS_BUSY;
 435              		.loc 1 469 0
 436 0212 2D4A     		ldr	r2, .L38+20
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccK6w6Mx.s 			page 17


 437 0214 1178     		ldrb	r1, [r2]
 438 0216 2023     		movs	r3, #32
 439 0218 0B43     		orrs	r3, r1
 440 021a DBB2     		uxtb	r3, r3
 441 021c 1370     		strb	r3, [r2]
 470:Generated_Source\PSoC4/I2C_EZI2C_INT.c **** 
 471:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                         /* Slave is read or written: set current offset */
 472:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                         locIndex = I2C_EZI2C_GET_OFFSET(activeAddress);
 442              		.loc 1 472 0
 443 021e 2C4B     		ldr	r3, .L38+28
 444 0220 1B78     		ldrb	r3, [r3]
 445 0222 1C00     		movs	r4, r3
 446              	.LVL29:
 473:Generated_Source\PSoC4/I2C_EZI2C_INT.c **** 
 474:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                         /* Check transaction direction */
 475:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                         if(I2C_CHECK_I2C_STATUS(I2C_I2C_STATUS_S_READ))
 447              		.loc 1 475 0
 448 0224 3B4A     		ldr	r2, .L38+96
 449 0226 1268     		ldr	r2, [r2]
 450 0228 D206     		lsls	r2, r2, #27
 451 022a 12D5     		bpl	.L29
 476:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                         {
 477:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                             /* Calculate slave buffer size */
 478:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                             locBufSize = I2C_bufSizeBuf1 - (uint16) locIndex;
 452              		.loc 1 478 0
 453 022c 364A     		ldr	r2, .L38+84
 454 022e 1288     		ldrh	r2, [r2]
 455 0230 D31A     		subs	r3, r2, r3
 456              	.LVL30:
 457 0232 324A     		ldr	r2, .L38+72
 458 0234 1380     		strh	r3, [r2]
 479:Generated_Source\PSoC4/I2C_EZI2C_INT.c **** 
 480:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                             /* Clear TX FIFO to start fill from offset */
 481:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                             I2C_CLEAR_TX_FIFO;
 459              		.loc 1 481 0
 460 0236 384B     		ldr	r3, .L38+100
 461 0238 1A68     		ldr	r2, [r3]
 462 023a 8021     		movs	r1, #128
 463 023c 4902     		lsls	r1, r1, #9
 464 023e 0A43     		orrs	r2, r1
 465 0240 1A60     		str	r2, [r3]
 466 0242 1968     		ldr	r1, [r3]
 467 0244 354A     		ldr	r2, .L38+104
 468 0246 0A40     		ands	r2, r1
 469 0248 1A60     		str	r2, [r3]
 482:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                             I2C_SetTxInterruptMode(I2C_INTR_TX_EMPTY);
 470              		.loc 1 482 0
 471 024a 1022     		movs	r2, #16
 472 024c 1F4B     		ldr	r3, .L38+24
 473 024e 1A60     		str	r2, [r3]
 474 0250 02E0     		b	.L30
 475              	.LVL31:
 476              	.L29:
 483:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                         }
 484:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                         else
 485:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                         {
 486:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                             /* Master writes: enable reception interrupt. The FSM state was set in 
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccK6w6Mx.s 			page 18


 487:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                             I2C_SetRxInterruptMode(I2C_INTR_RX_NOT_EMPTY);
 477              		.loc 1 487 0
 478 0252 0422     		movs	r2, #4
 479 0254 214B     		ldr	r3, .L38+40
 480              	.LVL32:
 481 0256 1A60     		str	r2, [r3]
 482              	.L30:
 488:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                         }
 489:Generated_Source\PSoC4/I2C_EZI2C_INT.c **** 
 490:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                         /* Clear interrupt sources before ACK address */
 491:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                         I2C_ClearI2CExtClkInterruptSource(I2C_INTR_I2C_EC_WAKE_UP);
 483              		.loc 1 491 0
 484 0258 0123     		movs	r3, #1
 485 025a 314A     		ldr	r2, .L38+108
 486 025c 1360     		str	r3, [r2]
 492:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                         I2C_ClearSlaveInterruptSource(I2C_INTR_SLAVE_ALL);
 487              		.loc 1 492 0
 488 025e 2249     		ldr	r1, .L38+52
 489 0260 164A     		ldr	r2, .L38+8
 490 0262 1160     		str	r1, [r2]
 493:Generated_Source\PSoC4/I2C_EZI2C_INT.c **** 
 494:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                     #if (!I2C_CY_SCBIP_V0)
 495:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                         /* Enable STOP to trigger after address match is ACKed. Ticket ID#156094 */
 496:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                         I2C_ENABLE_INTR_SLAVE(I2C_INTR_SLAVE_I2C_STOP);
 497:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                     #endif /* (!I2C_CY_SCBIP_V0) */
 498:Generated_Source\PSoC4/I2C_EZI2C_INT.c **** 
 499:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                         /* ACK the address byte */
 500:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                         I2C_I2C_SLAVE_GENERATE_ACK;
 491              		.loc 1 500 0
 492 0264 264A     		ldr	r2, .L38+76
 493 0266 1360     		str	r3, [r2]
 494              	.L28:
 501:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                     }
 502:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                 }
 503:Generated_Source\PSoC4/I2C_EZI2C_INT.c **** 
 504:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                 /* Clear slave interrupt sources */
 505:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                 I2C_ClearSlaveInterruptSource(locIntrSlave);
 495              		.loc 1 505 0
 496 0268 144B     		ldr	r3, .L38+8
 497 026a 1D60     		str	r5, [r3]
 498              	.L25:
 506:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****             }
 507:Generated_Source\PSoC4/I2C_EZI2C_INT.c **** 
 508:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****             /* INTR_TX.EMPTY */
 509:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****             /* Transmits data to the master: loads data into the TX FIFO. The 0xFF sends out if the
 510:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****             * out the buffer. The address reception with a read flag clears the TX FIFO to be loade
 511:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****             */
 512:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****             if(0u != (I2C_GetInterruptCause() & I2C_INTR_CAUSE_TX))
 499              		.loc 1 512 0
 500 026c 144B     		ldr	r3, .L38+12
 501 026e 1B68     		ldr	r3, [r3]
 502 0270 5B07     		lsls	r3, r3, #29
 503 0272 1CD5     		bpl	.L6
 504              	.L33:
 513:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****             {
 514:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                 /* Put data into TX FIFO until there is a room */
 515:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                 do
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccK6w6Mx.s 			page 19


 516:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                 {
 517:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                     /* Check transmit buffer range: locBufSize calculates after address reception *
 518:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                     if(0u != locBufSize)
 505              		.loc 1 518 0
 506 0274 214B     		ldr	r3, .L38+72
 507 0276 1B88     		ldrh	r3, [r3]
 508 0278 002B     		cmp	r3, #0
 509 027a 0CD0     		beq	.L31
 519:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                     {
 520:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                         I2C_TX_FIFO_WR_REG = (uint32) I2C_dataBuffer1[locIndex];
 510              		.loc 1 520 0
 511 027c 214B     		ldr	r3, .L38+80
 512 027e 1B68     		ldr	r3, [r3]
 513 0280 1B19     		adds	r3, r3, r4
 514 0282 1B78     		ldrb	r3, [r3]
 515 0284 DBB2     		uxtb	r3, r3
 516 0286 274A     		ldr	r2, .L38+112
 517 0288 1360     		str	r3, [r2]
 521:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                         locIndex++;
 518              		.loc 1 521 0
 519 028a 0134     		adds	r4, r4, #1
 520              	.LVL33:
 522:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                         locBufSize--;
 521              		.loc 1 522 0
 522 028c 1B4A     		ldr	r2, .L38+72
 523 028e 1388     		ldrh	r3, [r2]
 524 0290 013B     		subs	r3, r3, #1
 525 0292 1380     		strh	r3, [r2]
 526 0294 02E0     		b	.L32
 527              	.L31:
 523:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                     }
 524:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                     else
 525:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                     {
 526:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                         I2C_TX_FIFO_WR_REG = I2C_EZI2C_OVFL_RETURN;
 528              		.loc 1 526 0
 529 0296 FF22     		movs	r2, #255
 530 0298 224B     		ldr	r3, .L38+112
 531 029a 1A60     		str	r2, [r3]
 532              	.L32:
 527:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                     }
 528:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                 }
 529:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                 while(I2C_EZI2C_FIFO_SIZE != I2C_GET_TX_FIFO_ENTRIES);
 533              		.loc 1 529 0
 534 029c 224B     		ldr	r3, .L38+116
 535 029e 1B68     		ldr	r3, [r3]
 536 02a0 0F22     		movs	r2, #15
 537 02a2 1340     		ands	r3, r2
 538 02a4 082B     		cmp	r3, #8
 539 02a6 E5D1     		bne	.L33
 530:Generated_Source\PSoC4/I2C_EZI2C_INT.c **** 
 531:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****                 I2C_ClearTxInterruptSource(I2C_INTR_TX_EMPTY);
 540              		.loc 1 531 0
 541 02a8 0132     		adds	r2, r2, #1
 542 02aa 204B     		ldr	r3, .L38+120
 543 02ac 1A60     		str	r2, [r3]
 544              	.L6:
 532:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****             }
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccK6w6Mx.s 			page 20


 533:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****         }
 534:Generated_Source\PSoC4/I2C_EZI2C_INT.c **** 
 535:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****         /* Store local index copy into global variable */
 536:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****         I2C_EZI2C_SET_INDEX(activeAddress, locIndex);
 545              		.loc 1 536 0
 546 02ae 024B     		ldr	r3, .L38+4
 547 02b0 1C80     		strh	r4, [r3]
 537:Generated_Source\PSoC4/I2C_EZI2C_INT.c **** 
 538:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****     #ifdef I2C_EZI2C_STRETCH_ISR_EXIT_CALLBACK
 539:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****         I2C_EZI2C_STRETCH_ISR_ExitCallback();
 540:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****     #endif /* I2C_EZI2C_STRETCH_ISR_EXIT_CALLBACK */
 541:Generated_Source\PSoC4/I2C_EZI2C_INT.c **** 
 542:Generated_Source\PSoC4/I2C_EZI2C_INT.c ****     }
 548              		.loc 1 542 0
 549              		@ sp needed
 550              	.LVL34:
 551              	.LVL35:
 552              	.LVL36:
 553 02b2 70BD     		pop	{r4, r5, r6, pc}
 554              	.L39:
 555              		.align	2
 556              	.L38:
 557 02b4 00000000 		.word	I2C_customIntrHandler
 558 02b8 00000000 		.word	I2C_indexBuf1
 559 02bc 400F0740 		.word	1074204480
 560 02c0 000E0740 		.word	1074204160
 561 02c4 00000740 		.word	1074200576
 562 02c8 00000000 		.word	I2C_curStatus
 563 02cc 880F0740 		.word	1074204552
 564 02d0 00000000 		.word	I2C_offsetBuf1
 565 02d4 60000740 		.word	1074200672
 566 02d8 FF5FFFFF 		.word	-40961
 567 02dc C80F0740 		.word	1074204616
 568 02e0 ED0F0000 		.word	4077
 569 02e4 C00F0740 		.word	1074204608
 570 02e8 FF0F0000 		.word	4095
 571 02ec 00000000 		.word	I2C_fsmState
 572 02f0 880E0740 		.word	1074204296
 573 02f4 CC0F0740 		.word	1074204620
 574 02f8 40030740 		.word	1074201408
 575 02fc 00000000 		.word	.LANCHOR0
 576 0300 6C000740 		.word	1074200684
 577 0304 00000000 		.word	I2C_dataBuffer1
 578 0308 00000000 		.word	I2C_bufSizeBuf1
 579 030c 00000000 		.word	I2C_protectBuf1
 580 0310 08030740 		.word	1074201352
 581 0314 64000740 		.word	1074200676
 582 0318 04020740 		.word	1074201092
 583 031c FFFFFEFF 		.word	-65537
 584 0320 800E0740 		.word	1074204288
 585 0324 40020740 		.word	1074201152
 586 0328 08020740 		.word	1074201096
 587 032c 800F0740 		.word	1074204544
 588              		.cfi_endproc
 589              	.LFE0:
 590              		.size	I2C_EZI2C_STRETCH_ISR, .-I2C_EZI2C_STRETCH_ISR
 591              		.bss
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccK6w6Mx.s 			page 21


 592              		.align	1
 593              		.set	.LANCHOR0,. + 0
 594              		.type	locBufSize.4923, %object
 595              		.size	locBufSize.4923, 2
 596              	locBufSize.4923:
 597 0000 0000     		.space	2
 598              		.text
 599              	.Letext0:
 600              		.file 2 "Generated_Source\\PSoC4/cytypes.h"
 601              		.file 3 "Generated_Source\\PSoC4\\I2C_PVT.h"
 602              		.file 4 "Generated_Source\\PSoC4\\I2C_EZI2C_PVT.h"
 603              		.file 5 "Generated_Source\\PSoC4\\I2C.h"
 604              		.file 6 "Generated_Source\\PSoC4/CyLib.h"
 605              		.section	.debug_info,"",%progbits
 606              	.Ldebug_info0:
 607 0000 FE010000 		.4byte	0x1fe
 608 0004 0400     		.2byte	0x4
 609 0006 00000000 		.4byte	.Ldebug_abbrev0
 610 000a 04       		.byte	0x4
 611 000b 01       		.uleb128 0x1
 612 000c 88010000 		.4byte	.LASF37
 613 0010 0C       		.byte	0xc
 614 0011 9B020000 		.4byte	.LASF38
 615 0015 70000000 		.4byte	.LASF39
 616 0019 00000000 		.4byte	.Ldebug_ranges0+0
 617 001d 00000000 		.4byte	0
 618 0021 00000000 		.4byte	.Ldebug_line0
 619 0025 02       		.uleb128 0x2
 620 0026 01       		.byte	0x1
 621 0027 06       		.byte	0x6
 622 0028 87020000 		.4byte	.LASF0
 623 002c 02       		.uleb128 0x2
 624 002d 01       		.byte	0x1
 625 002e 08       		.byte	0x8
 626 002f C9000000 		.4byte	.LASF1
 627 0033 02       		.uleb128 0x2
 628 0034 02       		.byte	0x2
 629 0035 05       		.byte	0x5
 630 0036 4E020000 		.4byte	.LASF2
 631 003a 02       		.uleb128 0x2
 632 003b 02       		.byte	0x2
 633 003c 07       		.byte	0x7
 634 003d 2B000000 		.4byte	.LASF3
 635 0041 02       		.uleb128 0x2
 636 0042 04       		.byte	0x4
 637 0043 05       		.byte	0x5
 638 0044 72020000 		.4byte	.LASF4
 639 0048 02       		.uleb128 0x2
 640 0049 04       		.byte	0x4
 641 004a 07       		.byte	0x7
 642 004b E1000000 		.4byte	.LASF5
 643 004f 02       		.uleb128 0x2
 644 0050 08       		.byte	0x8
 645 0051 05       		.byte	0x5
 646 0052 1F020000 		.4byte	.LASF6
 647 0056 02       		.uleb128 0x2
 648 0057 08       		.byte	0x8
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccK6w6Mx.s 			page 22


 649 0058 07       		.byte	0x7
 650 0059 54010000 		.4byte	.LASF7
 651 005d 03       		.uleb128 0x3
 652 005e 04       		.byte	0x4
 653 005f 05       		.byte	0x5
 654 0060 696E7400 		.ascii	"int\000"
 655 0064 02       		.uleb128 0x2
 656 0065 04       		.byte	0x4
 657 0066 07       		.byte	0x7
 658 0067 32010000 		.4byte	.LASF8
 659 006b 04       		.uleb128 0x4
 660 006c F3000000 		.4byte	.LASF9
 661 0070 02       		.byte	0x2
 662 0071 E401     		.2byte	0x1e4
 663 0073 2C000000 		.4byte	0x2c
 664 0077 04       		.uleb128 0x4
 665 0078 24010000 		.4byte	.LASF10
 666 007c 02       		.byte	0x2
 667 007d E501     		.2byte	0x1e5
 668 007f 3A000000 		.4byte	0x3a
 669 0083 04       		.uleb128 0x4
 670 0084 2B010000 		.4byte	.LASF11
 671 0088 02       		.byte	0x2
 672 0089 E601     		.2byte	0x1e6
 673 008b 48000000 		.4byte	0x48
 674 008f 02       		.uleb128 0x2
 675 0090 04       		.byte	0x4
 676 0091 04       		.byte	0x4
 677 0092 BA000000 		.4byte	.LASF12
 678 0096 02       		.uleb128 0x2
 679 0097 08       		.byte	0x8
 680 0098 04       		.byte	0x4
 681 0099 0F010000 		.4byte	.LASF13
 682 009d 02       		.uleb128 0x2
 683 009e 01       		.byte	0x1
 684 009f 08       		.byte	0x8
 685 00a0 2D020000 		.4byte	.LASF14
 686 00a4 05       		.uleb128 0x5
 687 00a5 6B000000 		.4byte	0x6b
 688 00a9 04       		.uleb128 0x4
 689 00aa 0E000000 		.4byte	.LASF15
 690 00ae 02       		.byte	0x2
 691 00af 9002     		.2byte	0x290
 692 00b1 B5000000 		.4byte	0xb5
 693 00b5 05       		.uleb128 0x5
 694 00b6 83000000 		.4byte	0x83
 695 00ba 04       		.uleb128 0x4
 696 00bb 7B010000 		.4byte	.LASF16
 697 00bf 02       		.byte	0x2
 698 00c0 A002     		.2byte	0x2a0
 699 00c2 C6000000 		.4byte	0xc6
 700 00c6 06       		.uleb128 0x6
 701 00c7 04       		.byte	0x4
 702 00c8 CC000000 		.4byte	0xcc
 703 00cc 07       		.uleb128 0x7
 704 00cd 02       		.uleb128 0x2
 705 00ce 08       		.byte	0x8
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccK6w6Mx.s 			page 23


 706 00cf 04       		.byte	0x4
 707 00d0 7B020000 		.4byte	.LASF17
 708 00d4 02       		.uleb128 0x2
 709 00d5 04       		.byte	0x4
 710 00d6 07       		.byte	0x7
 711 00d7 16020000 		.4byte	.LASF18
 712 00db 08       		.uleb128 0x8
 713 00dc F9000000 		.4byte	.LASF40
 714 00e0 01       		.byte	0x1
 715 00e1 20       		.byte	0x20
 716 00e2 00000000 		.4byte	.LFB0
 717 00e6 30030000 		.4byte	.LFE0-.LFB0
 718 00ea 01       		.uleb128 0x1
 719 00eb 9C       		.byte	0x9c
 720 00ec 8C010000 		.4byte	0x18c
 721 00f0 09       		.uleb128 0x9
 722 00f1 3F010000 		.4byte	.LASF19
 723 00f5 01       		.byte	0x1
 724 00f6 22       		.byte	0x22
 725 00f7 77000000 		.4byte	0x77
 726 00fb 05       		.uleb128 0x5
 727 00fc 03       		.byte	0x3
 728 00fd 00000000 		.4byte	locBufSize.4923
 729 0101 0A       		.uleb128 0xa
 730 0102 C0000000 		.4byte	.LASF20
 731 0106 01       		.byte	0x1
 732 0107 23       		.byte	0x23
 733 0108 83000000 		.4byte	0x83
 734 010c 00000000 		.4byte	.LLST0
 735 0110 0A       		.uleb128 0xa
 736 0111 D7000000 		.4byte	.LASF21
 737 0115 01       		.byte	0x1
 738 0116 24       		.byte	0x24
 739 0117 83000000 		.4byte	0x83
 740 011b 60000000 		.4byte	.LLST1
 741 011f 0A       		.uleb128 0xa
 742 0120 3E000000 		.4byte	.LASF22
 743 0124 01       		.byte	0x1
 744 0125 26       		.byte	0x26
 745 0126 83000000 		.4byte	0x83
 746 012a 8F000000 		.4byte	.LLST2
 747 012e 0A       		.uleb128 0xa
 748 012f 4A010000 		.4byte	.LASF23
 749 0133 01       		.byte	0x1
 750 0134 27       		.byte	0x27
 751 0135 83000000 		.4byte	0x83
 752 0139 BA000000 		.4byte	.LLST3
 753 013d 0A       		.uleb128 0xa
 754 013e 93020000 		.4byte	.LASF24
 755 0142 01       		.byte	0x1
 756 0143 28       		.byte	0x28
 757 0144 83000000 		.4byte	0x83
 758 0148 D8000000 		.4byte	.LLST4
 759 014c 0A       		.uleb128 0xa
 760 014d 65020000 		.4byte	.LASF25
 761 0151 01       		.byte	0x1
 762 0152 2A       		.byte	0x2a
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccK6w6Mx.s 			page 24


 763 0153 83000000 		.4byte	0x83
 764 0157 0C010000 		.4byte	.LLST5
 765 015b 0A       		.uleb128 0xa
 766 015c 32020000 		.4byte	.LASF26
 767 0160 01       		.byte	0x1
 768 0161 2B       		.byte	0x2b
 769 0162 83000000 		.4byte	0x83
 770 0166 1F010000 		.4byte	.LLST6
 771 016a 0B       		.uleb128 0xb
 772 016b F8000000 		.4byte	.LVL8
 773 016f EA010000 		.4byte	0x1ea
 774 0173 0B       		.uleb128 0xb
 775 0174 5E010000 		.4byte	.LVL12
 776 0178 EA010000 		.4byte	0x1ea
 777 017c 0C       		.uleb128 0xc
 778 017d 66010000 		.4byte	.LVL14
 779 0181 F6010000 		.4byte	0x1f6
 780 0185 0D       		.uleb128 0xd
 781 0186 01       		.uleb128 0x1
 782 0187 50       		.byte	0x50
 783 0188 01       		.uleb128 0x1
 784 0189 30       		.byte	0x30
 785 018a 00       		.byte	0
 786 018b 00       		.byte	0
 787 018c 0E       		.uleb128 0xe
 788 018d 4A000000 		.4byte	.LASF27
 789 0191 03       		.byte	0x3
 790 0192 3B       		.byte	0x3b
 791 0193 BA000000 		.4byte	0xba
 792 0197 0E       		.uleb128 0xe
 793 0198 16010000 		.4byte	.LASF28
 794 019c 04       		.byte	0x4
 795 019d 1E       		.byte	0x1e
 796 019e A4000000 		.4byte	0xa4
 797 01a2 0E       		.uleb128 0xe
 798 01a3 58020000 		.4byte	.LASF29
 799 01a7 04       		.byte	0x4
 800 01a8 1F       		.byte	0x1f
 801 01a9 6B000000 		.4byte	0x6b
 802 01ad 0E       		.uleb128 0xe
 803 01ae 60000000 		.4byte	.LASF30
 804 01b2 04       		.byte	0x4
 805 01b3 22       		.byte	0x22
 806 01b4 B8010000 		.4byte	0x1b8
 807 01b8 06       		.uleb128 0x6
 808 01b9 04       		.byte	0x4
 809 01ba A4000000 		.4byte	0xa4
 810 01be 0E       		.uleb128 0xe
 811 01bf 6B010000 		.4byte	.LASF31
 812 01c3 04       		.byte	0x4
 813 01c4 23       		.byte	0x23
 814 01c5 77000000 		.4byte	0x77
 815 01c9 0E       		.uleb128 0xe
 816 01ca 14000000 		.4byte	.LASF32
 817 01ce 04       		.byte	0x4
 818 01cf 24       		.byte	0x24
 819 01d0 77000000 		.4byte	0x77
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccK6w6Mx.s 			page 25


 820 01d4 0E       		.uleb128 0xe
 821 01d5 3F020000 		.4byte	.LASF33
 822 01d9 04       		.byte	0x4
 823 01da 25       		.byte	0x25
 824 01db 6B000000 		.4byte	0x6b
 825 01df 0E       		.uleb128 0xe
 826 01e0 00000000 		.4byte	.LASF34
 827 01e4 04       		.byte	0x4
 828 01e5 26       		.byte	0x26
 829 01e6 77000000 		.4byte	0x77
 830 01ea 0F       		.uleb128 0xf
 831 01eb C2020000 		.4byte	.LASF35
 832 01ef C2020000 		.4byte	.LASF35
 833 01f3 05       		.byte	0x5
 834 01f4 1E07     		.2byte	0x71e
 835 01f6 10       		.uleb128 0x10
 836 01f7 24000000 		.4byte	.LASF36
 837 01fb 24000000 		.4byte	.LASF36
 838 01ff 06       		.byte	0x6
 839 0200 E7       		.byte	0xe7
 840 0201 00       		.byte	0
 841              		.section	.debug_abbrev,"",%progbits
 842              	.Ldebug_abbrev0:
 843 0000 01       		.uleb128 0x1
 844 0001 11       		.uleb128 0x11
 845 0002 01       		.byte	0x1
 846 0003 25       		.uleb128 0x25
 847 0004 0E       		.uleb128 0xe
 848 0005 13       		.uleb128 0x13
 849 0006 0B       		.uleb128 0xb
 850 0007 03       		.uleb128 0x3
 851 0008 0E       		.uleb128 0xe
 852 0009 1B       		.uleb128 0x1b
 853 000a 0E       		.uleb128 0xe
 854 000b 55       		.uleb128 0x55
 855 000c 17       		.uleb128 0x17
 856 000d 11       		.uleb128 0x11
 857 000e 01       		.uleb128 0x1
 858 000f 10       		.uleb128 0x10
 859 0010 17       		.uleb128 0x17
 860 0011 00       		.byte	0
 861 0012 00       		.byte	0
 862 0013 02       		.uleb128 0x2
 863 0014 24       		.uleb128 0x24
 864 0015 00       		.byte	0
 865 0016 0B       		.uleb128 0xb
 866 0017 0B       		.uleb128 0xb
 867 0018 3E       		.uleb128 0x3e
 868 0019 0B       		.uleb128 0xb
 869 001a 03       		.uleb128 0x3
 870 001b 0E       		.uleb128 0xe
 871 001c 00       		.byte	0
 872 001d 00       		.byte	0
 873 001e 03       		.uleb128 0x3
 874 001f 24       		.uleb128 0x24
 875 0020 00       		.byte	0
 876 0021 0B       		.uleb128 0xb
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccK6w6Mx.s 			page 26


 877 0022 0B       		.uleb128 0xb
 878 0023 3E       		.uleb128 0x3e
 879 0024 0B       		.uleb128 0xb
 880 0025 03       		.uleb128 0x3
 881 0026 08       		.uleb128 0x8
 882 0027 00       		.byte	0
 883 0028 00       		.byte	0
 884 0029 04       		.uleb128 0x4
 885 002a 16       		.uleb128 0x16
 886 002b 00       		.byte	0
 887 002c 03       		.uleb128 0x3
 888 002d 0E       		.uleb128 0xe
 889 002e 3A       		.uleb128 0x3a
 890 002f 0B       		.uleb128 0xb
 891 0030 3B       		.uleb128 0x3b
 892 0031 05       		.uleb128 0x5
 893 0032 49       		.uleb128 0x49
 894 0033 13       		.uleb128 0x13
 895 0034 00       		.byte	0
 896 0035 00       		.byte	0
 897 0036 05       		.uleb128 0x5
 898 0037 35       		.uleb128 0x35
 899 0038 00       		.byte	0
 900 0039 49       		.uleb128 0x49
 901 003a 13       		.uleb128 0x13
 902 003b 00       		.byte	0
 903 003c 00       		.byte	0
 904 003d 06       		.uleb128 0x6
 905 003e 0F       		.uleb128 0xf
 906 003f 00       		.byte	0
 907 0040 0B       		.uleb128 0xb
 908 0041 0B       		.uleb128 0xb
 909 0042 49       		.uleb128 0x49
 910 0043 13       		.uleb128 0x13
 911 0044 00       		.byte	0
 912 0045 00       		.byte	0
 913 0046 07       		.uleb128 0x7
 914 0047 15       		.uleb128 0x15
 915 0048 00       		.byte	0
 916 0049 27       		.uleb128 0x27
 917 004a 19       		.uleb128 0x19
 918 004b 00       		.byte	0
 919 004c 00       		.byte	0
 920 004d 08       		.uleb128 0x8
 921 004e 2E       		.uleb128 0x2e
 922 004f 01       		.byte	0x1
 923 0050 3F       		.uleb128 0x3f
 924 0051 19       		.uleb128 0x19
 925 0052 03       		.uleb128 0x3
 926 0053 0E       		.uleb128 0xe
 927 0054 3A       		.uleb128 0x3a
 928 0055 0B       		.uleb128 0xb
 929 0056 3B       		.uleb128 0x3b
 930 0057 0B       		.uleb128 0xb
 931 0058 27       		.uleb128 0x27
 932 0059 19       		.uleb128 0x19
 933 005a 11       		.uleb128 0x11
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccK6w6Mx.s 			page 27


 934 005b 01       		.uleb128 0x1
 935 005c 12       		.uleb128 0x12
 936 005d 06       		.uleb128 0x6
 937 005e 40       		.uleb128 0x40
 938 005f 18       		.uleb128 0x18
 939 0060 9642     		.uleb128 0x2116
 940 0062 19       		.uleb128 0x19
 941 0063 01       		.uleb128 0x1
 942 0064 13       		.uleb128 0x13
 943 0065 00       		.byte	0
 944 0066 00       		.byte	0
 945 0067 09       		.uleb128 0x9
 946 0068 34       		.uleb128 0x34
 947 0069 00       		.byte	0
 948 006a 03       		.uleb128 0x3
 949 006b 0E       		.uleb128 0xe
 950 006c 3A       		.uleb128 0x3a
 951 006d 0B       		.uleb128 0xb
 952 006e 3B       		.uleb128 0x3b
 953 006f 0B       		.uleb128 0xb
 954 0070 49       		.uleb128 0x49
 955 0071 13       		.uleb128 0x13
 956 0072 02       		.uleb128 0x2
 957 0073 18       		.uleb128 0x18
 958 0074 00       		.byte	0
 959 0075 00       		.byte	0
 960 0076 0A       		.uleb128 0xa
 961 0077 34       		.uleb128 0x34
 962 0078 00       		.byte	0
 963 0079 03       		.uleb128 0x3
 964 007a 0E       		.uleb128 0xe
 965 007b 3A       		.uleb128 0x3a
 966 007c 0B       		.uleb128 0xb
 967 007d 3B       		.uleb128 0x3b
 968 007e 0B       		.uleb128 0xb
 969 007f 49       		.uleb128 0x49
 970 0080 13       		.uleb128 0x13
 971 0081 02       		.uleb128 0x2
 972 0082 17       		.uleb128 0x17
 973 0083 00       		.byte	0
 974 0084 00       		.byte	0
 975 0085 0B       		.uleb128 0xb
 976 0086 898201   		.uleb128 0x4109
 977 0089 00       		.byte	0
 978 008a 11       		.uleb128 0x11
 979 008b 01       		.uleb128 0x1
 980 008c 31       		.uleb128 0x31
 981 008d 13       		.uleb128 0x13
 982 008e 00       		.byte	0
 983 008f 00       		.byte	0
 984 0090 0C       		.uleb128 0xc
 985 0091 898201   		.uleb128 0x4109
 986 0094 01       		.byte	0x1
 987 0095 11       		.uleb128 0x11
 988 0096 01       		.uleb128 0x1
 989 0097 31       		.uleb128 0x31
 990 0098 13       		.uleb128 0x13
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccK6w6Mx.s 			page 28


 991 0099 00       		.byte	0
 992 009a 00       		.byte	0
 993 009b 0D       		.uleb128 0xd
 994 009c 8A8201   		.uleb128 0x410a
 995 009f 00       		.byte	0
 996 00a0 02       		.uleb128 0x2
 997 00a1 18       		.uleb128 0x18
 998 00a2 9142     		.uleb128 0x2111
 999 00a4 18       		.uleb128 0x18
 1000 00a5 00       		.byte	0
 1001 00a6 00       		.byte	0
 1002 00a7 0E       		.uleb128 0xe
 1003 00a8 34       		.uleb128 0x34
 1004 00a9 00       		.byte	0
 1005 00aa 03       		.uleb128 0x3
 1006 00ab 0E       		.uleb128 0xe
 1007 00ac 3A       		.uleb128 0x3a
 1008 00ad 0B       		.uleb128 0xb
 1009 00ae 3B       		.uleb128 0x3b
 1010 00af 0B       		.uleb128 0xb
 1011 00b0 49       		.uleb128 0x49
 1012 00b1 13       		.uleb128 0x13
 1013 00b2 3F       		.uleb128 0x3f
 1014 00b3 19       		.uleb128 0x19
 1015 00b4 3C       		.uleb128 0x3c
 1016 00b5 19       		.uleb128 0x19
 1017 00b6 00       		.byte	0
 1018 00b7 00       		.byte	0
 1019 00b8 0F       		.uleb128 0xf
 1020 00b9 2E       		.uleb128 0x2e
 1021 00ba 00       		.byte	0
 1022 00bb 3F       		.uleb128 0x3f
 1023 00bc 19       		.uleb128 0x19
 1024 00bd 3C       		.uleb128 0x3c
 1025 00be 19       		.uleb128 0x19
 1026 00bf 6E       		.uleb128 0x6e
 1027 00c0 0E       		.uleb128 0xe
 1028 00c1 03       		.uleb128 0x3
 1029 00c2 0E       		.uleb128 0xe
 1030 00c3 3A       		.uleb128 0x3a
 1031 00c4 0B       		.uleb128 0xb
 1032 00c5 3B       		.uleb128 0x3b
 1033 00c6 05       		.uleb128 0x5
 1034 00c7 00       		.byte	0
 1035 00c8 00       		.byte	0
 1036 00c9 10       		.uleb128 0x10
 1037 00ca 2E       		.uleb128 0x2e
 1038 00cb 00       		.byte	0
 1039 00cc 3F       		.uleb128 0x3f
 1040 00cd 19       		.uleb128 0x19
 1041 00ce 3C       		.uleb128 0x3c
 1042 00cf 19       		.uleb128 0x19
 1043 00d0 6E       		.uleb128 0x6e
 1044 00d1 0E       		.uleb128 0xe
 1045 00d2 03       		.uleb128 0x3
 1046 00d3 0E       		.uleb128 0xe
 1047 00d4 3A       		.uleb128 0x3a
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccK6w6Mx.s 			page 29


 1048 00d5 0B       		.uleb128 0xb
 1049 00d6 3B       		.uleb128 0x3b
 1050 00d7 0B       		.uleb128 0xb
 1051 00d8 00       		.byte	0
 1052 00d9 00       		.byte	0
 1053 00da 00       		.byte	0
 1054              		.section	.debug_loc,"",%progbits
 1055              	.Ldebug_loc0:
 1056              	.LLST0:
 1057 0000 10000000 		.4byte	.LVL1
 1058 0004 C4000000 		.4byte	.LVL4
 1059 0008 0100     		.2byte	0x1
 1060 000a 54       		.byte	0x54
 1061 000b EA000000 		.4byte	.LVL6
 1062 000f F4000000 		.4byte	.LVL7
 1063 0013 0100     		.2byte	0x1
 1064 0015 54       		.byte	0x54
 1065 0016 08010000 		.4byte	.LVL10
 1066 001a 5A010000 		.4byte	.LVL11
 1067 001e 0100     		.2byte	0x1
 1068 0020 53       		.byte	0x53
 1069 0021 66010000 		.4byte	.LVL14
 1070 0025 24020000 		.4byte	.LVL29
 1071 0029 0100     		.2byte	0x1
 1072 002b 54       		.byte	0x54
 1073 002c 24020000 		.4byte	.LVL29
 1074 0030 32020000 		.4byte	.LVL30
 1075 0034 0100     		.2byte	0x1
 1076 0036 53       		.byte	0x53
 1077 0037 32020000 		.4byte	.LVL30
 1078 003b 52020000 		.4byte	.LVL31
 1079 003f 0100     		.2byte	0x1
 1080 0041 54       		.byte	0x54
 1081 0042 52020000 		.4byte	.LVL31
 1082 0046 56020000 		.4byte	.LVL32
 1083 004a 0100     		.2byte	0x1
 1084 004c 53       		.byte	0x53
 1085 004d 56020000 		.4byte	.LVL32
 1086 0051 B2020000 		.4byte	.LVL34
 1087 0055 0100     		.2byte	0x1
 1088 0057 54       		.byte	0x54
 1089 0058 00000000 		.4byte	0
 1090 005c 00000000 		.4byte	0
 1091              	.LLST1:
 1092 0060 EC010000 		.4byte	.LVL24
 1093 0064 FA010000 		.4byte	.LVL25
 1094 0068 0200     		.2byte	0x2
 1095 006a 32       		.byte	0x32
 1096 006b 9F       		.byte	0x9f
 1097 006c FA010000 		.4byte	.LVL25
 1098 0070 02020000 		.4byte	.LVL27
 1099 0074 0100     		.2byte	0x1
 1100 0076 53       		.byte	0x53
 1101 0077 02020000 		.4byte	.LVL27
 1102 007b 06020000 		.4byte	.LVL28
 1103 007f 0600     		.2byte	0x6
 1104 0081 73       		.byte	0x73
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccK6w6Mx.s 			page 30


 1105 0082 00       		.sleb128 0
 1106 0083 09       		.byte	0x9
 1107 0084 DF       		.byte	0xdf
 1108 0085 1A       		.byte	0x1a
 1109 0086 9F       		.byte	0x9f
 1110 0087 00000000 		.4byte	0
 1111 008b 00000000 		.4byte	0
 1112              	.LLST2:
 1113 008f 8C010000 		.4byte	.LVL16
 1114 0093 90010000 		.4byte	.LVL17
 1115 0097 0200     		.2byte	0x2
 1116 0099 31       		.byte	0x31
 1117 009a 9F       		.byte	0x9f
 1118 009b A4010000 		.4byte	.LVL18
 1119 009f A8010000 		.4byte	.LVL19
 1120 00a3 0200     		.2byte	0x2
 1121 00a5 30       		.byte	0x30
 1122 00a6 9F       		.byte	0x9f
 1123 00a7 A8010000 		.4byte	.LVL19
 1124 00ab DA010000 		.4byte	.LVL23
 1125 00af 0100     		.2byte	0x1
 1126 00b1 50       		.byte	0x50
 1127 00b2 00000000 		.4byte	0
 1128 00b6 00000000 		.4byte	0
 1129              	.LLST3:
 1130 00ba 82010000 		.4byte	.LVL15
 1131 00be 90010000 		.4byte	.LVL17
 1132 00c2 0100     		.2byte	0x1
 1133 00c4 51       		.byte	0x51
 1134 00c5 A4010000 		.4byte	.LVL18
 1135 00c9 C8010000 		.4byte	.LVL22
 1136 00cd 0100     		.2byte	0x1
 1137 00cf 51       		.byte	0x51
 1138 00d0 00000000 		.4byte	0
 1139 00d4 00000000 		.4byte	0
 1140              	.LLST4:
 1141 00d8 C4000000 		.4byte	.LVL4
 1142 00dc E6000000 		.4byte	.LVL5
 1143 00e0 0100     		.2byte	0x1
 1144 00e2 53       		.byte	0x53
 1145 00e3 F4000000 		.4byte	.LVL7
 1146 00e7 F7000000 		.4byte	.LVL8-1
 1147 00eb 0100     		.2byte	0x1
 1148 00ed 53       		.byte	0x53
 1149 00ee FA000000 		.4byte	.LVL9
 1150 00f2 5D010000 		.4byte	.LVL12-1
 1151 00f6 0100     		.2byte	0x1
 1152 00f8 53       		.byte	0x53
 1153 00f9 60010000 		.4byte	.LVL13
 1154 00fd 65010000 		.4byte	.LVL14-1
 1155 0101 0100     		.2byte	0x1
 1156 0103 53       		.byte	0x53
 1157 0104 00000000 		.4byte	0
 1158 0108 00000000 		.4byte	0
 1159              	.LLST5:
 1160 010c 18000000 		.4byte	.LVL3
 1161 0110 B2020000 		.4byte	.LVL36
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccK6w6Mx.s 			page 31


 1162 0114 0100     		.2byte	0x1
 1163 0116 56       		.byte	0x56
 1164 0117 00000000 		.4byte	0
 1165 011b 00000000 		.4byte	0
 1166              	.LLST6:
 1167 011f 14000000 		.4byte	.LVL2
 1168 0123 B2020000 		.4byte	.LVL35
 1169 0127 0100     		.2byte	0x1
 1170 0129 55       		.byte	0x55
 1171 012a 00000000 		.4byte	0
 1172 012e 00000000 		.4byte	0
 1173              		.section	.debug_aranges,"",%progbits
 1174 0000 1C000000 		.4byte	0x1c
 1175 0004 0200     		.2byte	0x2
 1176 0006 00000000 		.4byte	.Ldebug_info0
 1177 000a 04       		.byte	0x4
 1178 000b 00       		.byte	0
 1179 000c 0000     		.2byte	0
 1180 000e 0000     		.2byte	0
 1181 0010 00000000 		.4byte	.LFB0
 1182 0014 30030000 		.4byte	.LFE0-.LFB0
 1183 0018 00000000 		.4byte	0
 1184 001c 00000000 		.4byte	0
 1185              		.section	.debug_ranges,"",%progbits
 1186              	.Ldebug_ranges0:
 1187 0000 00000000 		.4byte	.LFB0
 1188 0004 30030000 		.4byte	.LFE0
 1189 0008 00000000 		.4byte	0
 1190 000c 00000000 		.4byte	0
 1191              		.section	.debug_line,"",%progbits
 1192              	.Ldebug_line0:
 1193 0000 38010000 		.section	.debug_str,"MS",%progbits,1
 1193      02007E00 
 1193      00000201 
 1193      FB0E0D00 
 1193      01010101 
 1194              	.LASF34:
 1195 0000 4932435F 		.ascii	"I2C_indexBuf1\000"
 1195      696E6465 
 1195      78427566 
 1195      3100
 1196              	.LASF15:
 1197 000e 72656733 		.ascii	"reg32\000"
 1197      3200
 1198              	.LASF32:
 1199 0014 4932435F 		.ascii	"I2C_protectBuf1\000"
 1199      70726F74 
 1199      65637442 
 1199      75663100 
 1200              	.LASF36:
 1201 0024 43794861 		.ascii	"CyHalt\000"
 1201      6C7400
 1202              	.LASF3:
 1203 002b 73686F72 		.ascii	"short unsigned int\000"
 1203      7420756E 
 1203      7369676E 
 1203      65642069 
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccK6w6Mx.s 			page 32


 1203      6E7400
 1204              	.LASF22:
 1205 003e 656E6454 		.ascii	"endTransfer\000"
 1205      72616E73 
 1205      66657200 
 1206              	.LASF27:
 1207 004a 4932435F 		.ascii	"I2C_customIntrHandler\000"
 1207      63757374 
 1207      6F6D496E 
 1207      74724861 
 1207      6E646C65 
 1208              	.LASF30:
 1209 0060 4932435F 		.ascii	"I2C_dataBuffer1\000"
 1209      64617461 
 1209      42756666 
 1209      65723100 
 1210              	.LASF39:
 1211 0070 443A5C55 		.ascii	"D:\\Users\\jagumiel\\Documents\\PSoC Creator\\PSoC-"
 1211      73657273 
 1211      5C6A6167 
 1211      756D6965 
 1211      6C5C446F 
 1212 009e 3130315C 		.ascii	"101\\PSoC-101\\Lesson10.cydsn\000"
 1212      50536F43 
 1212      2D313031 
 1212      5C4C6573 
 1212      736F6E31 
 1213              	.LASF12:
 1214 00ba 666C6F61 		.ascii	"float\000"
 1214      7400
 1215              	.LASF20:
 1216 00c0 6C6F6349 		.ascii	"locIndex\000"
 1216      6E646578 
 1216      00
 1217              	.LASF1:
 1218 00c9 756E7369 		.ascii	"unsigned char\000"
 1218      676E6564 
 1218      20636861 
 1218      7200
 1219              	.LASF21:
 1220 00d7 6C6F6353 		.ascii	"locStatus\000"
 1220      74617475 
 1220      7300
 1221              	.LASF5:
 1222 00e1 6C6F6E67 		.ascii	"long unsigned int\000"
 1222      20756E73 
 1222      69676E65 
 1222      6420696E 
 1222      7400
 1223              	.LASF9:
 1224 00f3 75696E74 		.ascii	"uint8\000"
 1224      3800
 1225              	.LASF40:
 1226 00f9 4932435F 		.ascii	"I2C_EZI2C_STRETCH_ISR\000"
 1226      455A4932 
 1226      435F5354 
 1226      52455443 
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccK6w6Mx.s 			page 33


 1226      485F4953 
 1227              	.LASF13:
 1228 010f 646F7562 		.ascii	"double\000"
 1228      6C6500
 1229              	.LASF28:
 1230 0116 4932435F 		.ascii	"I2C_curStatus\000"
 1230      63757253 
 1230      74617475 
 1230      7300
 1231              	.LASF10:
 1232 0124 75696E74 		.ascii	"uint16\000"
 1232      313600
 1233              	.LASF11:
 1234 012b 75696E74 		.ascii	"uint32\000"
 1234      333200
 1235              	.LASF8:
 1236 0132 756E7369 		.ascii	"unsigned int\000"
 1236      676E6564 
 1236      20696E74 
 1236      00
 1237              	.LASF19:
 1238 013f 6C6F6342 		.ascii	"locBufSize\000"
 1238      75665369 
 1238      7A6500
 1239              	.LASF23:
 1240 014a 6669666F 		.ascii	"fifoIndex\000"
 1240      496E6465 
 1240      7800
 1241              	.LASF7:
 1242 0154 6C6F6E67 		.ascii	"long long unsigned int\000"
 1242      206C6F6E 
 1242      6720756E 
 1242      7369676E 
 1242      65642069 
 1243              	.LASF31:
 1244 016b 4932435F 		.ascii	"I2C_bufSizeBuf1\000"
 1244      62756653 
 1244      697A6542 
 1244      75663100 
 1245              	.LASF16:
 1246 017b 63796973 		.ascii	"cyisraddress\000"
 1246      72616464 
 1246      72657373 
 1246      00
 1247              	.LASF37:
 1248 0188 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1248      43313120 
 1248      352E342E 
 1248      31203230 
 1248      31363036 
 1249 01bb 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 1249      20726576 
 1249      6973696F 
 1249      6E203233 
 1249      37373135 
 1250 01ee 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 1250      66756E63 
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccK6w6Mx.s 			page 34


 1250      74696F6E 
 1250      2D736563 
 1250      74696F6E 
 1251              	.LASF18:
 1252 0216 73697A65 		.ascii	"sizetype\000"
 1252      74797065 
 1252      00
 1253              	.LASF6:
 1254 021f 6C6F6E67 		.ascii	"long long int\000"
 1254      206C6F6E 
 1254      6720696E 
 1254      7400
 1255              	.LASF14:
 1256 022d 63686172 		.ascii	"char\000"
 1256      00
 1257              	.LASF26:
 1258 0232 6C6F6349 		.ascii	"locIntrSlave\000"
 1258      6E747253 
 1258      6C617665 
 1258      00
 1259              	.LASF33:
 1260 023f 4932435F 		.ascii	"I2C_offsetBuf1\000"
 1260      6F666673 
 1260      65744275 
 1260      663100
 1261              	.LASF2:
 1262 024e 73686F72 		.ascii	"short int\000"
 1262      7420696E 
 1262      7400
 1263              	.LASF29:
 1264 0258 4932435F 		.ascii	"I2C_fsmState\000"
 1264      66736D53 
 1264      74617465 
 1264      00
 1265              	.LASF25:
 1266 0265 6C6F6349 		.ascii	"locIntrCause\000"
 1266      6E747243 
 1266      61757365 
 1266      00
 1267              	.LASF4:
 1268 0272 6C6F6E67 		.ascii	"long int\000"
 1268      20696E74 
 1268      00
 1269              	.LASF17:
 1270 027b 6C6F6E67 		.ascii	"long double\000"
 1270      20646F75 
 1270      626C6500 
 1271              	.LASF0:
 1272 0287 7369676E 		.ascii	"signed char\000"
 1272      65642063 
 1272      68617200 
 1273              	.LASF24:
 1274 0293 6C6F6342 		.ascii	"locByte\000"
 1274      79746500 
 1275              	.LASF38:
 1276 029b 47656E65 		.ascii	"Generated_Source\\PSoC4\\I2C_EZI2C_INT.c\000"
 1276      72617465 
ARM GAS  C:\Users\jagumiel\AppData\Local\Temp\ccK6w6Mx.s 			page 35


 1276      645F536F 
 1276      75726365 
 1276      5C50536F 
 1277              	.LASF35:
 1278 02c2 4932435F 		.ascii	"I2C_I2CSlaveNackGeneration\000"
 1278      49324353 
 1278      6C617665 
 1278      4E61636B 
 1278      47656E65 
 1279              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
